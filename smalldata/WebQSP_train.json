[
    {
        "qid": "WebQTrn-0",
        "question": "what is the name of justin bieber brother",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06w2sn5",
                    "class": "common.topic",
                    "friendly_name": "justin bieber",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.05zppz",
                    "class": "common.topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1,
                    "friendly_name": "male"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.sibling_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.sibling_relationship.sibling"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "people.person.gender"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06w2sn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06w2sn5 ns:people.person.sibling_s ?y .\n?y ns:people.sibling_relationship.sibling ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "topic_entity": "m.06w2sn5",
        "answer": [
            {
                "answer_argument": "m.0gxnnwq",
                "answer_type": "Entity",
                "entity_name": "Jaxon Bieber"
            }
        ],
        "s_expression": "(AND (JOIN (R people.sibling_relationship.sibling) (JOIN (R people.person.sibling_s) m.06w2sn5)) (JOIN people.person.gender m.05zppz))",
        "s_expression_processed": "(CONS (JOIN (R people.sibling_relationship.sibling) (JOIN (R people.person.sibling_s) m.06w2sn5)) people.person.gender m.05zppz)"
    },
    {
        "qid": "WebQTrn-3",
        "question": "what country is the grand bahama island in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03st9j",
                    "class": "common.topic",
                    "friendly_name": "grand bahama island",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "Country",
                    "class": "common.topic",
                    "friendly_name": "Country",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.biblioness.bibs_location.loc_type"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03st9j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03st9j ns:location.location.containedby ?x .\n?x ns:base.biblioness.bibs_location.loc_type ?sk0 .\nFILTER (str(?sk0) = \"Country\")\n}\n",
        "topic_entity": "m.03st9j",
        "answer": [
            {
                "answer_argument": "m.0160w",
                "answer_type": "Entity",
                "entity_name": "Bahamas"
            }
        ],
        "s_expression": "(AND (JOIN (R location.location.containedby) m.03st9j) (JOIN base.biblioness.bibs_location.loc_type Country))",
        "s_expression_processed": "(CONS (JOIN (R location.location.containedby) m.03st9j) base.biblioness.bibs_location.loc_type Country)"
    },
    {
        "qid": "WebQTrn-4",
        "question": "what kind of money to take to bahamas",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0160w",
                    "class": "common.topic",
                    "friendly_name": "bahamas",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0160w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0160w ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.0160w",
        "answer": [
            {
                "answer_argument": "m.01l6dm",
                "answer_type": "Entity",
                "entity_name": "Bahamian dollar"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.0160w)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.0160w)"
    },
    {
        "qid": "WebQTrn-5",
        "question": "what character did john noble play in lord of the rings",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02fgm7",
                    "class": "common.topic",
                    "friendly_name": "john noble",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.017gm7",
                    "class": "common.topic",
                    "friendly_name": "lord of the rings",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02fgm7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02fgm7 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017gm7 .\n}\n",
        "topic_entity": "m.02fgm7",
        "answer": [
            {
                "answer_argument": "m.0gp7f",
                "answer_type": "Entity",
                "entity_name": "Denethor II"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.02fgm7) (JOIN film.performance.film m.017gm7)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.02fgm7) (JOIN film.performance.film m.017gm7)))"
    },
    {
        "qid": "WebQTrn-6",
        "question": "who does joakim noah play for",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c2yrf",
                    "class": "common.topic",
                    "friendly_name": "joakim noah",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "sports.sports_team_roster.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c2yrf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c2yrf ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.0c2yrf",
        "answer": [
            {
                "answer_argument": "m.0jm74",
                "answer_type": "Entity",
                "entity_name": "Chicago Bulls"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.0c2yrf) sports.sports_team_roster.from NOW))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.0c2yrf) sports.sports_team_roster.from NOW))"
    },
    {
        "qid": "WebQTrn-7",
        "question": "where are the nfl redskins from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.084l5",
                    "class": "common.topic",
                    "friendly_name": "redskins",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team.location"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.084l5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.084l5 ns:sports.sports_team.location ?x .\n}\n",
        "topic_entity": "m.084l5",
        "answer": [
            {
                "answer_argument": "m.0rh6k",
                "answer_type": "Entity",
                "entity_name": "Washington, D.C."
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team.location) m.084l5)",
        "s_expression_processed": "(JOIN (R sports.sports_team.location) m.084l5)"
    },
    {
        "qid": "WebQTrn-8",
        "question": "where did saki live",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07484",
                    "class": "common.topic",
                    "friendly_name": "saki",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.place_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07484)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07484 ns:people.person.place_of_birth ?x .\n}\n",
        "topic_entity": "m.07484",
        "answer": [
            {
                "answer_argument": "m.05ql8_",
                "answer_type": "Entity",
                "entity_name": "Sittwe"
            }
        ],
        "s_expression": "(JOIN (R people.person.place_of_birth) m.07484)",
        "s_expression_processed": "(JOIN (R people.person.place_of_birth) m.07484)"
    },
    {
        "qid": "WebQTrn-9",
        "question": "how old is sacha baron cohen",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0c9c0",
                    "class": "common.topic",
                    "friendly_name": "sacha baron cohen",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.date_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c9c0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c9c0 ns:people.person.date_of_birth ?x .\n}\n",
        "topic_entity": "m.0c9c0",
        "answer": [
            {
                "answer_argument": "1971-10-13",
                "answer_type": "Value",
                "entity_name": null
            }
        ],
        "s_expression": "(JOIN (R people.person.date_of_birth) m.0c9c0)",
        "s_expression_processed": "(JOIN (R people.person.date_of_birth) m.0c9c0)"
    },
    {
        "qid": "WebQTrn-11",
        "question": "what time zone am i in cleveland ohio",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01sn3",
                    "class": "common.topic",
                    "friendly_name": "cleveland ohio",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.time_zones"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01sn3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01sn3 ns:location.location.time_zones ?x .\n}\n",
        "topic_entity": "m.01sn3",
        "answer": [
            {
                "answer_argument": "m.02hcv8",
                "answer_type": "Entity",
                "entity_name": "Eastern Time Zone"
            }
        ],
        "s_expression": "(JOIN (R location.location.time_zones) m.01sn3)",
        "s_expression_processed": "(JOIN (R location.location.time_zones) m.01sn3)"
    },
    {
        "qid": "WebQTrn-12",
        "question": "who did draco malloy end up marrying",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c2m4",
                    "class": "common.topic",
                    "friendly_name": "draco malloy",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "fictional_universe.fictional_character.married_to"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.marriage_of_fictional_characters.spouses"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c2m4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c2m4 ns:fictional_universe.fictional_character.married_to ?y .\n?y ns:fictional_universe.marriage_of_fictional_characters.spouses ?x .\n}\n",
        "topic_entity": "m.0c2m4",
        "answer": [
            {
                "answer_argument": "m.09k254x",
                "answer_type": "Entity",
                "entity_name": "Astoria Greengrass"
            }
        ],
        "s_expression": "(JOIN (R fictional_universe.marriage_of_fictional_characters.spouses) (JOIN (R fictional_universe.fictional_character.married_to) m.0c2m4))",
        "s_expression_processed": "(JOIN (R fictional_universe.marriage_of_fictional_characters.spouses) (JOIN (R fictional_universe.fictional_character.married_to) m.0c2m4))"
    },
    {
        "qid": "WebQTrn-13",
        "question": "which countries border the us",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.country",
                    "class": "location.country",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "common.topic",
                    "friendly_name": "us",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.location.adjoin_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.adjoining_relationship.adjoins"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "topic_entity": "m.09c7w0",
        "answer": [
            {
                "answer_argument": "m.0b90_r",
                "answer_type": "Entity",
                "entity_name": "Mexico"
            },
            {
                "answer_argument": "m.0d060g",
                "answer_type": "Entity",
                "entity_name": "Canada"
            }
        ],
        "s_expression": "(AND location.country (JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.09c7w0)))",
        "s_expression_processed": "(AND location.country (JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.09c7w0)))"
    },
    {
        "qid": "WebQTrn-14",
        "question": "where is rome italy located on a map",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06c62",
                    "class": "common.topic",
                    "friendly_name": "rome italy",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c62)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c62 ns:location.location.containedby ?x .\n}\n",
        "topic_entity": "m.06c62",
        "answer": [
            {
                "answer_argument": "m.03rjj",
                "answer_type": "Entity",
                "entity_name": "Italy"
            },
            {
                "answer_argument": "m.04q_g",
                "answer_type": "Entity",
                "entity_name": "Lazio"
            },
            {
                "answer_argument": "m.098phg",
                "answer_type": "Entity",
                "entity_name": "Province of Rome"
            }
        ],
        "s_expression": "(JOIN (R location.location.containedby) m.06c62)",
        "s_expression_processed": "(JOIN (R location.location.containedby) m.06c62)"
    },
    {
        "qid": "WebQTrn-15",
        "question": "what is nina dobrev nationality",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.027nwk2",
                    "class": "common.topic",
                    "friendly_name": "nina dobrev",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.nationality"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027nwk2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027nwk2 ns:people.person.nationality ?x .\n}\n",
        "topic_entity": "m.027nwk2",
        "answer": [
            {
                "answer_argument": "m.015qh",
                "answer_type": "Entity",
                "entity_name": "Bulgaria"
            },
            {
                "answer_argument": "m.0d060g",
                "answer_type": "Entity",
                "entity_name": "Canada"
            }
        ],
        "s_expression": "(JOIN (R people.person.nationality) m.027nwk2)",
        "s_expression_processed": "(JOIN (R people.person.nationality) m.027nwk2)"
    },
    {
        "qid": "WebQTrn-18",
        "question": "what books did beverly cleary write",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.018rv0",
                    "class": "common.topic",
                    "friendly_name": "beverly cleary",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.author.book_editions_published"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018rv0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018rv0 ns:book.author.book_editions_published ?x .\n}\n",
        "topic_entity": "m.018rv0",
        "answer": [
            {
                "answer_argument": "m.028x_cs",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave"
            },
            {
                "answer_argument": "m.028xt1p",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.028xtdc",
                "answer_type": "Entity",
                "entity_name": "Ramona Forever"
            },
            {
                "answer_argument": "m.028xv2w",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest"
            },
            {
                "answer_argument": "m.028xwl9",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.028xxhr",
                "answer_type": "Entity",
                "entity_name": "Ralph S. Mouse"
            },
            {
                "answer_argument": "m.028xy3z",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle"
            },
            {
                "answer_argument": "m.028y2s9",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.028y956",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave"
            },
            {
                "answer_argument": "m.028y9dq",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Father"
            },
            {
                "answer_argument": "m.028yfm2",
                "answer_type": "Entity",
                "entity_name": "Ramona Forever"
            },
            {
                "answer_argument": "m.028yj26",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Father"
            },
            {
                "answer_argument": "m.028yk65",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Mother"
            },
            {
                "answer_argument": "m.028ykn_",
                "answer_type": "Entity",
                "entity_name": "Ramona's World"
            },
            {
                "answer_argument": "m.028ykwy",
                "answer_type": "Entity",
                "entity_name": "Ramona's World"
            },
            {
                "answer_argument": "m.028ylj8",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest"
            },
            {
                "answer_argument": "m.028ypwp",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Mother"
            },
            {
                "answer_argument": "m.04tv3cd",
                "answer_type": "Entity",
                "entity_name": "Petey's bedtime story"
            },
            {
                "answer_argument": "m.04tv3cv",
                "answer_type": "Entity",
                "entity_name": "The Ralph Mouse Collection"
            },
            {
                "answer_argument": "m.04tv3d1",
                "answer_type": "Entity",
                "entity_name": "Ramona Quimby, Age 8"
            },
            {
                "answer_argument": "m.04tv3d8",
                "answer_type": "Entity",
                "entity_name": "Two times the fun"
            },
            {
                "answer_argument": "m.04tv3dq",
                "answer_type": "Entity",
                "entity_name": "Socks."
            },
            {
                "answer_argument": "m.04tv3fc",
                "answer_type": "Entity",
                "entity_name": "The Luckiest Girl (rack) (Cleary Reissue)"
            },
            {
                "answer_argument": "m.04tv3fl",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits (rpkg) (Avon Camelot Books)"
            },
            {
                "answer_argument": "m.04tv3ft",
                "answer_type": "Entity",
                "entity_name": "Querido señor Henshaw"
            },
            {
                "answer_argument": "m.04tv3g7",
                "answer_type": "Entity",
                "entity_name": "Emily's Runaway Imagination (rpkg)"
            },
            {
                "answer_argument": "m.04tv3gg",
                "answer_type": "Entity",
                "entity_name": "Ramona and her mother"
            },
            {
                "answer_argument": "m.04tv3gx",
                "answer_type": "Entity",
                "entity_name": "The growing-up feet"
            },
            {
                "answer_argument": "m.04tv3hb",
                "answer_type": "Entity",
                "entity_name": "Ramona forever"
            },
            {
                "answer_argument": "m.04tv3hs",
                "answer_type": "Entity",
                "entity_name": "Ramona la chinche"
            },
            {
                "answer_argument": "m.04tv3j6",
                "answer_type": "Entity",
                "entity_name": "Otis Spofford (rpkg)"
            },
            {
                "answer_argument": "m.04tv3jf",
                "answer_type": "Entity",
                "entity_name": "Ramona's world"
            },
            {
                "answer_argument": "m.04tv3k2",
                "answer_type": "Entity",
                "entity_name": "Ramona and her father"
            },
            {
                "answer_argument": "m.04tv3kj",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits CD"
            },
            {
                "answer_argument": "m.04tv3kr",
                "answer_type": "Entity",
                "entity_name": "A girl from Yamhill"
            },
            {
                "answer_argument": "m.04tv3l5",
                "answer_type": "Entity",
                "entity_name": "Muggie Maggie"
            },
            {
                "answer_argument": "m.04tv3lm",
                "answer_type": "Entity",
                "entity_name": "My own two feet"
            },
            {
                "answer_argument": "m.04tv3m1",
                "answer_type": "Entity",
                "entity_name": "Strider"
            },
            {
                "answer_argument": "m.04tv3mh",
                "answer_type": "Entity",
                "entity_name": "Ribsy CD"
            },
            {
                "answer_argument": "m.04tv3mq",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04tv3n4",
                "answer_type": "Entity",
                "entity_name": "Ralph S. Mouse CD"
            },
            {
                "answer_argument": "m.04tv3nc",
                "answer_type": "Entity",
                "entity_name": "Fifteen (rack) (Cleary Reissue)"
            },
            {
                "answer_argument": "m.04tv3nl",
                "answer_type": "Entity",
                "entity_name": "Beverly Cleary First Love Treasury Three Complete Novels"
            },
            {
                "answer_argument": "m.04tv3nt",
                "answer_type": "Entity",
                "entity_name": "Jean and Johnny (rack) (Cleary Reissue)"
            },
            {
                "answer_argument": "m.04tv3p0",
                "answer_type": "Entity",
                "entity_name": "Janet's thingamajigs"
            },
            {
                "answer_argument": "m.04tv3pg",
                "answer_type": "Entity",
                "entity_name": "Lucky Chuck"
            },
            {
                "answer_argument": "m.04tv3px",
                "answer_type": "Entity",
                "entity_name": "The Ramona Collection, Vol. 1"
            },
            {
                "answer_argument": "m.04tv3q3",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.04tv3qb",
                "answer_type": "Entity",
                "entity_name": "The Best of Ramona"
            },
            {
                "answer_argument": "m.04tv3qk",
                "answer_type": "Entity",
                "entity_name": "Sister of the Bride (rack) (Cleary Reissue)"
            },
            {
                "answer_argument": "m.04tv3qs",
                "answer_type": "Entity",
                "entity_name": "Mitch and Amy"
            },
            {
                "answer_argument": "m.04tv3r6",
                "answer_type": "Entity",
                "entity_name": "Ramona empieza el curso"
            },
            {
                "answer_argument": "m.04tv3rn",
                "answer_type": "Entity",
                "entity_name": "The hullabaloo ABC"
            },
            {
                "answer_argument": "m.04tv3s2",
                "answer_type": "Entity",
                "entity_name": "Ramona y su madre"
            },
            {
                "answer_argument": "m.04tv3sj",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_yr2",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_ys3",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_ysc",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_ysv",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_yv1",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_yv9",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_yvk",
                "answer_type": "Entity",
                "entity_name": "Dear Mr Henshaw"
            },
            {
                "answer_argument": "m.04v_yvt",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_yw1",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_yw9",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_ywk",
                "answer_type": "Entity",
                "entity_name": "Dear Mr.Henshaw"
            },
            {
                "answer_argument": "m.04v_ywz",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_yxd",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_yxp",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_yyd",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw (rpkg) (HarperClassics)"
            },
            {
                "answer_argument": "m.04v_yyn",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw"
            },
            {
                "answer_argument": "m.04v_z_9",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw (M-Books)"
            },
            {
                "answer_argument": "m.04v_zy_",
                "answer_type": "Entity",
                "entity_name": "Dear Mr Henshaw (Media Gram Newbery Series)"
            },
            {
                "answer_argument": "m.04v_zyh",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw (A Dell Yearling Book)"
            },
            {
                "answer_argument": "m.04v_zyr",
                "answer_type": "Entity",
                "entity_name": "Dear Mr. Henshaw (Teacher Guide)"
            },
            {
                "answer_argument": "m.04v0r7_",
                "answer_type": "Entity",
                "entity_name": "Henry and Ribsy."
            },
            {
                "answer_argument": "m.04v0r7h",
                "answer_type": "Entity",
                "entity_name": "Henry and Ribsy"
            },
            {
                "answer_argument": "m.04v0r8f",
                "answer_type": "Entity",
                "entity_name": "Henry and Ribsy"
            },
            {
                "answer_argument": "m.04v0r8p",
                "answer_type": "Entity",
                "entity_name": "Henry and Ribsy"
            },
            {
                "answer_argument": "m.04v0r8y",
                "answer_type": "Entity",
                "entity_name": "Henry and Ribsy"
            },
            {
                "answer_argument": "m.04v0r9c",
                "answer_type": "Entity",
                "entity_name": "HENRY AND RIBSY (Henry Huggins (Paperback))"
            },
            {
                "answer_argument": "m.04v0r9m",
                "answer_type": "Entity",
                "entity_name": "Henry and Ribsy (Henry Huggins (Paperback))"
            },
            {
                "answer_argument": "m.04v0r9w",
                "answer_type": "Entity",
                "entity_name": "Henry and Ribsy (Henry Huggins (Paperback))"
            },
            {
                "answer_argument": "m.04v0rb4",
                "answer_type": "Entity",
                "entity_name": "HENRY AND RIBSY (Henry Huggins (Paperback))"
            },
            {
                "answer_argument": "m.04v0rbn",
                "answer_type": "Entity",
                "entity_name": "Henry and Ribsy (Avon Camelot Books)"
            },
            {
                "answer_argument": "m.04v5qh1",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04v5qhs",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04v5qjt",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04v5qk1",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04v5qkj",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04v5qks",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04v5ql0",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04v5ql8",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (Spanish edition)"
            },
            {
                "answer_argument": "m.04v5qlj",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04v5qls",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (Henry Huggins Series)"
            },
            {
                "answer_argument": "m.04v5sh3",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins: Henry Huggins : Henry and Beezus : Henry and the Paper Route"
            },
            {
                "answer_argument": "m.04v5shd",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (50th Anniversary Edition)"
            },
            {
                "answer_argument": "m.04v5shx",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (Morrow Junior Books)"
            },
            {
                "answer_argument": "m.04v5sj4",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (versión en español)"
            },
            {
                "answer_argument": "m.04v5sjf",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (Morrow Junior Books)"
            },
            {
                "answer_argument": "m.04v5sln",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (50th Anniversary Edition: Includes an Interview with the Author)"
            },
            {
                "answer_argument": "m.04v8vbl",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.04v8vc0",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.04v8vcq",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.04v8vdc",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.04v8vdm",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.04v8vdw",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.04v8vf3",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.04v8vfd",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.04v8vfp",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.04v8vfy",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph"
            },
            {
                "answer_argument": "m.04v8vk0",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph (Ralph S. Mouse)"
            },
            {
                "answer_argument": "m.04v8vkj",
                "answer_type": "Entity",
                "entity_name": "Runaway Ralph (Avon Camelot Books)"
            },
            {
                "answer_argument": "m.04v93_5",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle"
            },
            {
                "answer_argument": "m.04v93_f",
                "answer_type": "Entity",
                "entity_name": "The mouse and the motorcycle"
            },
            {
                "answer_argument": "m.04v93_w",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle (Spanish edition)"
            },
            {
                "answer_argument": "m.04v93v3",
                "answer_type": "Entity",
                "entity_name": "The mouse and the motorcycle"
            },
            {
                "answer_argument": "m.04v93wl",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle"
            },
            {
                "answer_argument": "m.04v93x3",
                "answer_type": "Entity",
                "entity_name": "Mouse and the Motorcycle, The"
            },
            {
                "answer_argument": "m.04v93xc",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle"
            },
            {
                "answer_argument": "m.04v93y3",
                "answer_type": "Entity",
                "entity_name": "Mouse and the Motorcycle, The"
            },
            {
                "answer_argument": "m.04v93ym",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle"
            },
            {
                "answer_argument": "m.04v93yw",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle"
            },
            {
                "answer_argument": "m.04v93zc",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle"
            },
            {
                "answer_argument": "m.04v93zn",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle"
            },
            {
                "answer_argument": "m.04v93zx",
                "answer_type": "Entity",
                "entity_name": "Mouse and the Motorcycle"
            },
            {
                "answer_argument": "m.04v9403",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle"
            },
            {
                "answer_argument": "m.04v9411",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle (Spanish edition)"
            },
            {
                "answer_argument": "m.04v941l",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle CD"
            },
            {
                "answer_argument": "m.04v9514",
                "answer_type": "Entity",
                "entity_name": "The Mouse and the Motorcycle Read-Aloud Edition"
            },
            {
                "answer_argument": "m.04vbc_w",
                "answer_type": "Entity",
                "entity_name": "Ralph S. Mouse"
            },
            {
                "answer_argument": "m.04vbd10",
                "answer_type": "Entity",
                "entity_name": "Ralph S.Mouse (Handi-read)"
            },
            {
                "answer_argument": "m.04vbd19",
                "answer_type": "Entity",
                "entity_name": "Ralph S. Mouse"
            },
            {
                "answer_argument": "m.04vbd1k",
                "answer_type": "Entity",
                "entity_name": "Ralph S. Mouse"
            },
            {
                "answer_argument": "m.04vbd28",
                "answer_type": "Entity",
                "entity_name": "Ralph S. Mouse"
            },
            {
                "answer_argument": "m.04vcgm1",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits (rpkg)"
            },
            {
                "answer_argument": "m.04vcgn2",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits"
            },
            {
                "answer_argument": "m.04vcgnb",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits (Swr 26)"
            },
            {
                "answer_argument": "m.04vcgnm",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits"
            },
            {
                "answer_argument": "m.04vcgp9",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits"
            },
            {
                "answer_argument": "m.04vcgpl",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits"
            },
            {
                "answer_argument": "m.04vcgpv",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits"
            },
            {
                "answer_argument": "m.04vcgq2",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits"
            },
            {
                "answer_argument": "m.04vcgr4",
                "answer_type": "Entity",
                "entity_name": "Ellen Tebbits (Avon Camelot Books)"
            },
            {
                "answer_argument": "m.04vcysm",
                "answer_type": "Entity",
                "entity_name": "Sister of the Bride"
            },
            {
                "answer_argument": "m.04vcytc",
                "answer_type": "Entity",
                "entity_name": "Sister of the Bride"
            },
            {
                "answer_argument": "m.04vcytm",
                "answer_type": "Entity",
                "entity_name": "Sister of the Bride"
            },
            {
                "answer_argument": "m.04vcytw",
                "answer_type": "Entity",
                "entity_name": "Sister of the Bride"
            },
            {
                "answer_argument": "m.04vcyv3",
                "answer_type": "Entity",
                "entity_name": "Sister of the Bride"
            },
            {
                "answer_argument": "m.04vcyvc",
                "answer_type": "Entity",
                "entity_name": "Sister of the bride"
            },
            {
                "answer_argument": "m.04vcyvs",
                "answer_type": "Entity",
                "entity_name": "Sister of the Bride"
            },
            {
                "answer_argument": "m.04vcyw0",
                "answer_type": "Entity",
                "entity_name": "Sister of the Bride"
            },
            {
                "answer_argument": "m.04vdf3h",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04vdf48",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04vdf4s",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04vdf50",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04vdf58",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04vdf60",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (Henry Huggins Series)"
            },
            {
                "answer_argument": "m.04vdf6j",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (Spanish edition)"
            },
            {
                "answer_argument": "m.04vdf71",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04vdf7t",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins"
            },
            {
                "answer_argument": "m.04vdgjp",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (50th Anniversary Edition)"
            },
            {
                "answer_argument": "m.04vdgjy",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (Morrow Junior Books)"
            },
            {
                "answer_argument": "m.04vdgkh",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins: Henry Huggins : Henry and Beezus : Henry and the Paper Route"
            },
            {
                "answer_argument": "m.04vdgks",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (50th Anniversary Edition: Includes an Interview with the Author)"
            },
            {
                "answer_argument": "m.04vdgl0",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (Morrow Junior Books)"
            },
            {
                "answer_argument": "m.04vdglv",
                "answer_type": "Entity",
                "entity_name": "Henry Huggins (versión en español)"
            },
            {
                "answer_argument": "m.04vdhv6",
                "answer_type": "Entity",
                "entity_name": "Strider"
            },
            {
                "answer_argument": "m.04vdhy3",
                "answer_type": "Entity",
                "entity_name": "Strider"
            },
            {
                "answer_argument": "m.04vdhyc",
                "answer_type": "Entity",
                "entity_name": "Strider"
            },
            {
                "answer_argument": "m.04vdhyt",
                "answer_type": "Entity",
                "entity_name": "Strider"
            },
            {
                "answer_argument": "m.04vdhz9",
                "answer_type": "Entity",
                "entity_name": "Strider"
            },
            {
                "answer_argument": "m.04vdm5h",
                "answer_type": "Entity",
                "entity_name": "Otis Spofford"
            },
            {
                "answer_argument": "m.04vdm5r",
                "answer_type": "Entity",
                "entity_name": "Otis Spofford"
            },
            {
                "answer_argument": "m.04vdm67",
                "answer_type": "Entity",
                "entity_name": "Otis Spofford"
            },
            {
                "answer_argument": "m.04vdm78",
                "answer_type": "Entity",
                "entity_name": "Otis Spofford (rpkg)"
            },
            {
                "answer_argument": "m.04vdt28",
                "answer_type": "Entity",
                "entity_name": "Mitch and Amy"
            },
            {
                "answer_argument": "m.04vdt3t",
                "answer_type": "Entity",
                "entity_name": "Mitch and Amy"
            },
            {
                "answer_argument": "m.04vdt5j",
                "answer_type": "Entity",
                "entity_name": "Mitch and Amy"
            },
            {
                "answer_argument": "m.04vdt8b",
                "answer_type": "Entity",
                "entity_name": "Mitch and Amy (rpkg)"
            },
            {
                "answer_argument": "m.04vjg42",
                "answer_type": "Entity",
                "entity_name": "Socks"
            },
            {
                "answer_argument": "m.04vjg4b",
                "answer_type": "Entity",
                "entity_name": "Socks"
            },
            {
                "answer_argument": "m.04vjg4l",
                "answer_type": "Entity",
                "entity_name": "Socks"
            },
            {
                "answer_argument": "m.04vjg4v",
                "answer_type": "Entity",
                "entity_name": "Socks"
            },
            {
                "answer_argument": "m.04vjg52",
                "answer_type": "Entity",
                "entity_name": "Socks"
            },
            {
                "answer_argument": "m.04vjg5n",
                "answer_type": "Entity",
                "entity_name": "Socks"
            },
            {
                "answer_argument": "m.04vjg5y",
                "answer_type": "Entity",
                "entity_name": "Socks"
            },
            {
                "answer_argument": "m.04vjg65",
                "answer_type": "Entity",
                "entity_name": "Socks"
            },
            {
                "answer_argument": "m.04vjg6q",
                "answer_type": "Entity",
                "entity_name": "Socks (Avon Camelot Books)"
            },
            {
                "answer_argument": "m.04vjg77",
                "answer_type": "Entity",
                "entity_name": "Socks"
            },
            {
                "answer_argument": "m.04vr9_3",
                "answer_type": "Entity",
                "entity_name": "Fifteen"
            },
            {
                "answer_argument": "m.04vr9_d",
                "answer_type": "Entity",
                "entity_name": "Fifteen"
            },
            {
                "answer_argument": "m.04vr9_n",
                "answer_type": "Entity",
                "entity_name": "Fifteen (Avon Camelot Books)"
            },
            {
                "answer_argument": "m.04vr9_x",
                "answer_type": "Entity",
                "entity_name": "Fifteen (Avon Camelot Books)"
            },
            {
                "answer_argument": "m.04vr9fz",
                "answer_type": "Entity",
                "entity_name": "A Girl from Yamhill"
            },
            {
                "answer_argument": "m.04vr9g6",
                "answer_type": "Entity",
                "entity_name": "A Girl from Yamhill"
            },
            {
                "answer_argument": "m.04vr9gg",
                "answer_type": "Entity",
                "entity_name": "A Girl from Yamhill"
            },
            {
                "answer_argument": "m.04vr9gr",
                "answer_type": "Entity",
                "entity_name": "Ramona la chinche"
            },
            {
                "answer_argument": "m.04vr9k9",
                "answer_type": "Entity",
                "entity_name": "The Growing-Up Feet"
            },
            {
                "answer_argument": "m.04vr9l4",
                "answer_type": "Entity",
                "entity_name": "GROWING UP FEET (Young Yearling)"
            },
            {
                "answer_argument": "m.04vr9lg",
                "answer_type": "Entity",
                "entity_name": "My Own Two Feet"
            },
            {
                "answer_argument": "m.04vr9lq",
                "answer_type": "Entity",
                "entity_name": "My Own Two Feet"
            },
            {
                "answer_argument": "m.04vr9mn",
                "answer_type": "Entity",
                "entity_name": "Growing-Up Feet"
            },
            {
                "answer_argument": "m.04vr9mx",
                "answer_type": "Entity",
                "entity_name": "Ramona Empieza El Curso"
            },
            {
                "answer_argument": "m.04vr9n5",
                "answer_type": "Entity",
                "entity_name": "Ramona empieza el curso"
            },
            {
                "answer_argument": "m.04vr9nf",
                "answer_type": "Entity",
                "entity_name": "Ramona Empieza El Curso / Ramona Quimby, Age 8"
            },
            {
                "answer_argument": "m.04vr9ps",
                "answer_type": "Entity",
                "entity_name": "Muggie Maggie"
            },
            {
                "answer_argument": "m.04vr9q0",
                "answer_type": "Entity",
                "entity_name": "Muggie Maggie"
            },
            {
                "answer_argument": "m.04vr9qq",
                "answer_type": "Entity",
                "entity_name": "Muggie Maggie (Spanish Edition)"
            },
            {
                "answer_argument": "m.04vr9rm",
                "answer_type": "Entity",
                "entity_name": "Jean and Johnny (Avon Camelot Books)"
            },
            {
                "answer_argument": "m.04vr9rw",
                "answer_type": "Entity",
                "entity_name": "Jean and Johnny"
            },
            {
                "answer_argument": "m.04vr9sc",
                "answer_type": "Entity",
                "entity_name": "JEAN AND JOHNNY"
            },
            {
                "answer_argument": "m.04vr9sn",
                "answer_type": "Entity",
                "entity_name": "Jean and Johnny (Avon Camelot Books)"
            },
            {
                "answer_argument": "m.04vr9sx",
                "answer_type": "Entity",
                "entity_name": "Luckiest Girl"
            },
            {
                "answer_argument": "m.04vr9t5",
                "answer_type": "Entity",
                "entity_name": "Jean and Johnny"
            },
            {
                "answer_argument": "m.04vr9tf",
                "answer_type": "Entity",
                "entity_name": "The Luckiest Girl"
            },
            {
                "answer_argument": "m.04vr9tq",
                "answer_type": "Entity",
                "entity_name": "Luckiest Girl"
            },
            {
                "answer_argument": "m.04vr9tz",
                "answer_type": "Entity",
                "entity_name": "The Luckiest Girl"
            },
            {
                "answer_argument": "m.04vr9v7",
                "answer_type": "Entity",
                "entity_name": "The Luckiest Girl"
            },
            {
                "answer_argument": "m.04vr9vh",
                "answer_type": "Entity",
                "entity_name": "Jean and Johnny"
            },
            {
                "answer_argument": "m.04vr9w1",
                "answer_type": "Entity",
                "entity_name": "The Luckiest Girl (An Avon Camelot Book)"
            },
            {
                "answer_argument": "m.04vr9wd",
                "answer_type": "Entity",
                "entity_name": "Lucky Chuck"
            },
            {
                "answer_argument": "m.04vr9wv",
                "answer_type": "Entity",
                "entity_name": "Lucky Chuck"
            },
            {
                "answer_argument": "m.04vr9y2",
                "answer_type": "Entity",
                "entity_name": "Fifteen"
            },
            {
                "answer_argument": "m.04vr9yl",
                "answer_type": "Entity",
                "entity_name": "Fifteen"
            },
            {
                "answer_argument": "m.04vr9yv",
                "answer_type": "Entity",
                "entity_name": "Fifteen"
            },
            {
                "answer_argument": "m.04vr9z3",
                "answer_type": "Entity",
                "entity_name": "Fifteen"
            },
            {
                "answer_argument": "m.04vr9zc",
                "answer_type": "Entity",
                "entity_name": "Fifteen"
            },
            {
                "answer_argument": "m.04vr9zm",
                "answer_type": "Entity",
                "entity_name": "Fifteen"
            },
            {
                "answer_argument": "m.04vr9zw",
                "answer_type": "Entity",
                "entity_name": "Fifteen"
            },
            {
                "answer_argument": "m.04w06dr",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.04w06g3",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.04w06gd",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.04w06gn",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.04w06gx",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.04w06h4",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.04w06hd",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.04w06hn",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.04w06j2",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona."
            },
            {
                "answer_argument": "m.04w06k2",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona"
            },
            {
                "answer_argument": "m.04w06kb",
                "answer_type": "Entity",
                "entity_name": "Beezus and Ramona (Retail)"
            },
            {
                "answer_argument": "m.04w0f1l",
                "answer_type": "Entity",
                "entity_name": "Ramona Forever (Ramona Quimby)"
            },
            {
                "answer_argument": "m.04w0f1v",
                "answer_type": "Entity",
                "entity_name": "Ramona Forever"
            },
            {
                "answer_argument": "m.04w0f22",
                "answer_type": "Entity",
                "entity_name": "Ramona Forever"
            },
            {
                "answer_argument": "m.04w0f2b",
                "answer_type": "Entity",
                "entity_name": "Ramona forever"
            },
            {
                "answer_argument": "m.04w0f2t",
                "answer_type": "Entity",
                "entity_name": "Ramona forever"
            },
            {
                "answer_argument": "m.04w0f3_",
                "answer_type": "Entity",
                "entity_name": "Ramona Forever (Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0f38",
                "answer_type": "Entity",
                "entity_name": "Ramona forever"
            },
            {
                "answer_argument": "m.04w0f3q",
                "answer_type": "Entity",
                "entity_name": "Ramona Forever"
            },
            {
                "answer_argument": "m.04w0f48",
                "answer_type": "Entity",
                "entity_name": "RAMONA FOREVER (Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0f4j",
                "answer_type": "Entity",
                "entity_name": "Ramona Forever (Childrens Literature Series)"
            },
            {
                "answer_argument": "m.04w0f4s",
                "answer_type": "Entity",
                "entity_name": "Ramona Forever (Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0f5j",
                "answer_type": "Entity",
                "entity_name": "RAMONA FOREVER (Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0f5s",
                "answer_type": "Entity",
                "entity_name": "Ramona forever"
            },
            {
                "answer_argument": "m.04w0f66",
                "answer_type": "Entity",
                "entity_name": "RAMONA FOREVER (Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0hqx",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave"
            },
            {
                "answer_argument": "m.04w0hr5",
                "answer_type": "Entity",
                "entity_name": "Ramona the brave"
            },
            {
                "answer_argument": "m.04w0hs3",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave"
            },
            {
                "answer_argument": "m.04w0hsc",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave"
            },
            {
                "answer_argument": "m.04w0hsm",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave (Ramona)"
            },
            {
                "answer_argument": "m.04w0hsw",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave"
            },
            {
                "answer_argument": "m.04w0ht3",
                "answer_type": "Entity",
                "entity_name": "RAMONA THE BRAVE (Ramona Quimby)"
            },
            {
                "answer_argument": "m.04w0htc",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave (Puffin Books)"
            },
            {
                "answer_argument": "m.04w0htm",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave (Ramona Quimby)"
            },
            {
                "answer_argument": "m.04w0htw",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave (Ramona Series)"
            },
            {
                "answer_argument": "m.04w0hv3",
                "answer_type": "Entity",
                "entity_name": "Ramona the brave"
            },
            {
                "answer_argument": "m.04w0hvk",
                "answer_type": "Entity",
                "entity_name": "Ramona the brave."
            },
            {
                "answer_argument": "m.04w0hwg",
                "answer_type": "Entity",
                "entity_name": "RAMONA THE BRAVE (Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0hwq",
                "answer_type": "Entity",
                "entity_name": "Ramona the Brave (Avon Camelot Books)"
            },
            {
                "answer_argument": "m.04w0j88",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest"
            },
            {
                "answer_argument": "m.04w0j8t",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest"
            },
            {
                "answer_argument": "m.04w0j9_",
                "answer_type": "Entity",
                "entity_name": "Ramona the pest"
            },
            {
                "answer_argument": "m.04w0j91",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest"
            },
            {
                "answer_argument": "m.04w0j99",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest"
            },
            {
                "answer_argument": "m.04w0j9k",
                "answer_type": "Entity",
                "entity_name": "Ramona the pest"
            },
            {
                "answer_argument": "m.04w0jbf",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest"
            },
            {
                "answer_argument": "m.04w0jbq",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest"
            },
            {
                "answer_argument": "m.04w0jbz",
                "answer_type": "Entity",
                "entity_name": "Ramona the pest"
            },
            {
                "answer_argument": "m.04w0jcf",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest"
            },
            {
                "answer_argument": "m.04w0jcp",
                "answer_type": "Entity",
                "entity_name": "Ramona the pest"
            },
            {
                "answer_argument": "m.04w0jd2",
                "answer_type": "Entity",
                "entity_name": "Ramona the pest."
            },
            {
                "answer_argument": "m.04w0jdv",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest (Ramona Quimby)"
            },
            {
                "answer_argument": "m.04w0jtl",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Mother"
            },
            {
                "answer_argument": "m.04w0jv2",
                "answer_type": "Entity",
                "entity_name": "Ramona and her Mother (Ramona Quimby)"
            },
            {
                "answer_argument": "m.04w0jvb",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Mother (Ramona Quimby)"
            },
            {
                "answer_argument": "m.04w0jvl",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Mother"
            },
            {
                "answer_argument": "m.04w0jvw",
                "answer_type": "Entity",
                "entity_name": "Ramona and her mother"
            },
            {
                "answer_argument": "m.04w0jw9",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Mother (Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0jws",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Mother (Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0jx1",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Mother(Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0jxc",
                "answer_type": "Entity",
                "entity_name": "Ramona and her mother"
            },
            {
                "answer_argument": "m.04w0jxt",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Mother"
            },
            {
                "answer_argument": "m.04w0kr0",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest (Windrush)"
            },
            {
                "answer_argument": "m.04w0kr9",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest (Ramona Quimby (Audio))"
            },
            {
                "answer_argument": "m.04w0krk",
                "answer_type": "Entity",
                "entity_name": "RAMONA THE PEST (Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0ksb",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest (Ramona Quimby (Paperback))"
            },
            {
                "answer_argument": "m.04w0ksm",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest (M Books)"
            },
            {
                "answer_argument": "m.04w0kyg",
                "answer_type": "Entity",
                "entity_name": "Ramona the Pest (Ramona Series)"
            },
            {
                "answer_argument": "m.04w0ndw",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Father (Ramona)"
            },
            {
                "answer_argument": "m.04w0nf3",
                "answer_type": "Entity",
                "entity_name": "Ramona and her father"
            },
            {
                "answer_argument": "m.04w0ng0",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Father (Ramona Quimby)"
            },
            {
                "answer_argument": "m.04w0ng8",
                "answer_type": "Entity",
                "entity_name": "Ramona and her father"
            },
            {
                "answer_argument": "m.04w0ngq",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Father"
            },
            {
                "answer_argument": "m.04w0ngz",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Father"
            },
            {
                "answer_argument": "m.04w0nh_",
                "answer_type": "Entity",
                "entity_name": "Ramona and her father"
            },
            {
                "answer_argument": "m.04w0nh6",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Father"
            },
            {
                "answer_argument": "m.04w0nhh",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Father"
            },
            {
                "answer_argument": "m.04w0nhr",
                "answer_type": "Entity",
                "entity_name": "Ramona and Her Father"
            },
            {
                "answer_argument": "m.04w0njf",
                "answer_type": "Entity",
                "entity_name": "Ramona and her father"
            }
        ],
        "s_expression": "(JOIN (R book.author.book_editions_published) m.018rv0)",
        "s_expression_processed": "(JOIN (R book.author.book_editions_published) m.018rv0)"
    },
    {
        "qid": "WebQTrn-20",
        "question": "where to fly into bali",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01bkb",
                    "class": "common.topic",
                    "friendly_name": "bali",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.03qb78c",
                    "class": "common.topic",
                    "friendly_name": "Air Transportation",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "travel.travel_destination.how_to_get_here"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "travel.transportation.transport_terminus"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "travel.transportation.mode_of_transportation"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bkb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bkb ns:travel.travel_destination.how_to_get_here ?y .\n?y ns:travel.transportation.transport_terminus ?x .\n?y ns:travel.transportation.mode_of_transportation ns:m.03qb78c .\n}\n",
        "topic_entity": "m.01bkb",
        "answer": [
            {
                "answer_argument": "m.069hj8",
                "answer_type": "Entity",
                "entity_name": "Ngurah Rai International Airport"
            }
        ],
        "s_expression": "(JOIN (R travel.transportation.transport_terminus) (AND (JOIN (R travel.travel_destination.how_to_get_here) m.01bkb) (JOIN travel.transportation.mode_of_transportation m.03qb78c)))",
        "s_expression_processed": "(JOIN (R travel.transportation.transport_terminus) (CONS (JOIN (R travel.travel_destination.how_to_get_here) m.01bkb) travel.transportation.mode_of_transportation m.03qb78c))"
    },
    {
        "qid": "WebQTrn-21",
        "question": "who is the prime minister of ethiopia",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.019pcs",
                    "class": "common.topic",
                    "friendly_name": "ethiopia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "government.government_position_held.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.060bp",
                    "class": "common.topic",
                    "friendly_name": "Prime minister",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.basic_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019pcs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019pcs ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.060bp .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.019pcs",
        "answer": [
            {
                "answer_argument": "m.0dl1t3",
                "answer_type": "Entity",
                "entity_name": "Hailemariam Desalegn"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (AND (JOIN (R government.governmental_jurisdiction.governing_officials) m.019pcs) (JOIN government.government_position_held.basic_title m.060bp)) government.government_position_held.from NOW))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (CONS (JOIN (R government.governmental_jurisdiction.governing_officials) m.019pcs) government.government_position_held.basic_title m.060bp) government.government_position_held.from NOW))"
    },
    {
        "qid": "WebQTrn-22",
        "question": "what to see near sedona arizona",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0ny57",
                    "class": "common.topic",
                    "friendly_name": "sedona arizona",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "travel.travel_destination.tourist_attractions"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ny57)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ny57 ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "topic_entity": "m.0ny57",
        "answer": [
            {
                "answer_argument": "m.026h8t6",
                "answer_type": "Entity",
                "entity_name": "Sycamore Canyon"
            },
            {
                "answer_argument": "m.02qswpp",
                "answer_type": "Entity",
                "entity_name": "Sedona International Film Festival"
            },
            {
                "answer_argument": "m.02ty7n",
                "answer_type": "Entity",
                "entity_name": "Sedona Airport"
            },
            {
                "answer_argument": "m.04crz42",
                "answer_type": "Entity",
                "entity_name": "Bell Rock"
            },
            {
                "answer_argument": "m.04xgf_s",
                "answer_type": "Entity",
                "entity_name": "Seven Canyons"
            },
            {
                "answer_argument": "m.07k8z2",
                "answer_type": "Entity",
                "entity_name": "Chapel of the Holy Cross"
            },
            {
                "answer_argument": "m.0dlm2c7",
                "answer_type": "Entity",
                "entity_name": "Red Rock State Park"
            },
            {
                "answer_argument": "m.0dqzqc",
                "answer_type": "Entity",
                "entity_name": "Slide Rock State Park"
            },
            {
                "answer_argument": "m.0f44c_",
                "answer_type": "Entity",
                "entity_name": "Oak Creek Canyon"
            },
            {
                "answer_argument": "m.0g5qfch",
                "answer_type": "Entity",
                "entity_name": "Honanki"
            },
            {
                "answer_argument": "m.0gj9fwx",
                "answer_type": "Entity",
                "entity_name": "Cathedral Rock"
            }
        ],
        "s_expression": "(JOIN (R travel.travel_destination.tourist_attractions) m.0ny57)",
        "s_expression_processed": "(JOIN (R travel.travel_destination.tourist_attractions) m.0ny57)"
    },
    {
        "qid": "WebQTrn-23",
        "question": "what high school did president bill clinton attend",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.school",
                    "class": "education.school",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0157m",
                    "class": "common.topic",
                    "friendly_name": "bill clinton",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0157m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0157m ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hn6 .\n}\n",
        "topic_entity": "m.0157m",
        "answer": [
            {
                "answer_argument": "m.0crpbj",
                "answer_type": "Entity",
                "entity_name": "Hot Springs High School"
            }
        ],
        "s_expression": "(AND education.school (JOIN (R education.education.institution) (JOIN (R people.person.education) m.0157m)))",
        "s_expression_processed": "(AND education.school (JOIN (R education.education.institution) (JOIN (R people.person.education) m.0157m)))"
    },
    {
        "qid": "WebQTrn-24",
        "question": "what form of government does russia have today",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06bnz",
                    "class": "common.topic",
                    "friendly_name": "russia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.form_of_government"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.form_of_government ?x .\n}\n",
        "topic_entity": "m.06bnz",
        "answer": [
            {
                "answer_argument": "m.01dw03",
                "answer_type": "Entity",
                "entity_name": "Semi-presidential system"
            },
            {
                "answer_argument": "m.0c9rw5",
                "answer_type": "Entity",
                "entity_name": "Constitutional republic"
            },
            {
                "answer_argument": "m.0j729",
                "answer_type": "Entity",
                "entity_name": "Federal republic"
            }
        ],
        "s_expression": "(JOIN (R location.country.form_of_government) m.06bnz)",
        "s_expression_processed": "(JOIN (R location.country.form_of_government) m.06bnz)"
    },
    {
        "qid": "WebQTrn-25",
        "question": "what movies does taylor lautner play in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07ldhs",
                    "class": "common.topic",
                    "friendly_name": "taylor lautner",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ldhs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ldhs ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.07ldhs",
        "answer": [
            {
                "answer_argument": "m.011q0_7k",
                "answer_type": "Entity",
                "entity_name": "Run the Tide"
            },
            {
                "answer_argument": "m.012z_7zt",
                "answer_type": "Entity",
                "entity_name": "The Ridiculous Six"
            },
            {
                "answer_argument": "m.02686wj",
                "answer_type": "Entity",
                "entity_name": "He's a Bully, Charlie Brown"
            },
            {
                "answer_argument": "m.03nm_fh",
                "answer_type": "Entity",
                "entity_name": "Twilight"
            },
            {
                "answer_argument": "m.05pdh86",
                "answer_type": "Entity",
                "entity_name": "The Twilight Saga: New Moon"
            },
            {
                "answer_argument": "m.06_wqk4",
                "answer_type": "Entity",
                "entity_name": "Valentine's Day"
            },
            {
                "answer_argument": "m.066b_n",
                "answer_type": "Entity",
                "entity_name": "Cheaper by the Dozen 2"
            },
            {
                "answer_argument": "m.06crgb",
                "answer_type": "Entity",
                "entity_name": "The Adventures of Sharkboy and Lavagirl"
            },
            {
                "answer_argument": "m.06zs80t",
                "answer_type": "Entity",
                "entity_name": "Shadow Fury"
            },
            {
                "answer_argument": "m.075wx7_",
                "answer_type": "Entity",
                "entity_name": "Eclipse"
            },
            {
                "answer_argument": "m.075wx89",
                "answer_type": "Entity",
                "entity_name": "The Twilight Saga: Breaking Dawn - Part 1"
            },
            {
                "answer_argument": "m.07cdy_t",
                "answer_type": "Entity",
                "entity_name": "The Nick and Jessica Variety Hour"
            },
            {
                "answer_argument": "m.0bdwfqj",
                "answer_type": "Entity",
                "entity_name": "Northern Lights"
            },
            {
                "answer_argument": "m.0cmdl80",
                "answer_type": "Entity",
                "entity_name": "Abduction"
            },
            {
                "answer_argument": "m.0djz0rc",
                "answer_type": "Entity",
                "entity_name": "The Twilight Saga: Breaking Dawn - Part 2"
            },
            {
                "answer_argument": "m.0g_w5hs",
                "answer_type": "Entity",
                "entity_name": "Field of Dreams 2: Lockout"
            },
            {
                "answer_argument": "m.0gx8qcw",
                "answer_type": "Entity",
                "entity_name": "Incarceron"
            },
            {
                "answer_argument": "m.0mzt5cs",
                "answer_type": "Entity",
                "entity_name": "Grown Ups 2"
            },
            {
                "answer_argument": "m.0ngj__s",
                "answer_type": "Entity",
                "entity_name": "Tracers"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.07ldhs))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.07ldhs))"
    },
    {
        "qid": "WebQTrn-26",
        "question": "what year lebron james came to the nba",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01jz6d",
                    "class": "common.topic",
                    "friendly_name": "lebron james",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02yqnh",
                    "class": "common.topic",
                    "friendly_name": "NBA Rookie of the Year Award",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.sports_award_winner.awards"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_award.season"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "sports.sports_award.award"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.season ?x .\n?y ns:sports.sports_award.award ns:m.02yqnh .\n}\n",
        "topic_entity": "m.01jz6d",
        "answer": [
            {
                "answer_argument": "m.07_x8s",
                "answer_type": "Entity",
                "entity_name": "2003–04 NBA season"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_award.season) (AND (JOIN (R sports.sports_award_winner.awards) m.01jz6d) (JOIN sports.sports_award.award m.02yqnh)))",
        "s_expression_processed": "(JOIN (R sports.sports_award.season) (CONS (JOIN (R sports.sports_award_winner.awards) m.01jz6d) sports.sports_award.award m.02yqnh))"
    },
    {
        "qid": "WebQTrn-30",
        "question": "which wife did king henry behead",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03p77",
                    "class": "common.topic",
                    "friendly_name": "king henry",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0jb19",
                    "class": "common.topic",
                    "friendly_name": "Decapitation",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                },
                {
                    "nid": 4,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "people.deceased_person.cause_of_death"
                },
                {
                    "start": 1,
                    "end": 4,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 5,
        "num_edge": 4,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03p77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03p77 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?x ns:people.deceased_person.cause_of_death ns:m.0jb19 .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "topic_entity": "m.03p77",
        "answer": [
            {
                "answer_argument": "m.09sxn",
                "answer_type": "Entity",
                "entity_name": "Anne Boleyn"
            },
            {
                "answer_argument": "m.0crdw",
                "answer_type": "Entity",
                "entity_name": "Catherine Howard"
            }
        ],
        "s_expression": "(AND (JOIN (R people.marriage.spouse) (AND (JOIN (R people.person.spouse_s) m.03p77) (JOIN people.marriage.type_of_union m.04ztj))) (JOIN people.deceased_person.cause_of_death m.0jb19))",
        "s_expression_processed": "(CONS (JOIN (R people.marriage.spouse) (CONS (JOIN (R people.person.spouse_s) m.03p77) people.marriage.type_of_union m.04ztj)) people.deceased_person.cause_of_death m.0jb19)"
    },
    {
        "qid": "WebQTrn-31",
        "question": "who was ishmael 's mom",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01ghr4",
                    "class": "common.topic",
                    "friendly_name": "ishmael",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02zsn",
                    "class": "common.topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1,
                    "friendly_name": "female"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.parents"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "people.person.gender"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ghr4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ghr4 ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "topic_entity": "m.01ghr4",
        "answer": [
            {
                "answer_argument": "m.01sq9c",
                "answer_type": "Entity",
                "entity_name": "Hagar"
            }
        ],
        "s_expression": "(AND (JOIN (R people.person.parents) m.01ghr4) (JOIN people.person.gender m.02zsn))",
        "s_expression_processed": "(CONS (JOIN (R people.person.parents) m.01ghr4) people.person.gender m.02zsn)"
    },
    {
        "qid": "WebQTrn-32",
        "question": "what was malcolm x trying to accomplish",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03f2h01",
                    "class": "common.topic",
                    "friendly_name": "malcolm x",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.activism.activist.area_of_activism"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03f2h01)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03f2h01 ns:base.activism.activist.area_of_activism ?x .\n}\n",
        "topic_entity": "m.03f2h01",
        "answer": [
            {
                "answer_argument": "m.074v_1j",
                "answer_type": "Entity",
                "entity_name": "Black Liberation"
            },
            {
                "answer_argument": "m.0g4pf68",
                "answer_type": "Entity",
                "entity_name": "African Americans' rights"
            }
        ],
        "s_expression": "(JOIN (R base.activism.activist.area_of_activism) m.03f2h01)",
        "s_expression_processed": "(JOIN (R base.activism.activist.area_of_activism) m.03f2h01)"
    },
    {
        "qid": "WebQTrn-33",
        "question": "where are the netherlands on a world map",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.059j2",
                    "class": "common.topic",
                    "friendly_name": "netherlands",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059j2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059j2 ns:location.location.containedby ?x .\n}\n",
        "topic_entity": "m.059j2",
        "answer": [
            {
                "answer_argument": "m.049nq",
                "answer_type": "Entity",
                "entity_name": "Kingdom of the Netherlands"
            }
        ],
        "s_expression": "(JOIN (R location.location.containedby) m.059j2)",
        "s_expression_processed": "(JOIN (R location.location.containedby) m.059j2)"
    },
    {
        "qid": "WebQTrn-34",
        "question": "what is the president of brazil",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.015fr",
                    "class": "common.topic",
                    "friendly_name": "brazil",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "government.government_position_held.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.060c4",
                    "class": "common.topic",
                    "friendly_name": "President",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.basic_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.060c4 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.015fr",
        "answer": [
            {
                "answer_argument": "m.026m5c8",
                "answer_type": "Entity",
                "entity_name": "Dilma Rousseff"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (AND (JOIN (R government.governmental_jurisdiction.governing_officials) m.015fr) (JOIN government.government_position_held.basic_title m.060c4)) government.government_position_held.from NOW))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (CONS (JOIN (R government.governmental_jurisdiction.governing_officials) m.015fr) government.government_position_held.basic_title m.060c4) government.government_position_held.from NOW))"
    },
    {
        "qid": "WebQTrn-35",
        "question": "what are the major cities in france",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0f8l9c",
                    "class": "common.topic",
                    "friendly_name": "france",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.capital"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.capital ?x .\n}\n",
        "topic_entity": "m.0f8l9c",
        "answer": [
            {
                "answer_argument": "m.05qtj",
                "answer_type": "Entity",
                "entity_name": "Paris"
            }
        ],
        "s_expression": "(JOIN (R location.country.capital) m.0f8l9c)",
        "s_expression_processed": "(JOIN (R location.country.capital) m.0f8l9c)"
    },
    {
        "qid": "WebQTrn-36",
        "question": "what city did esther live in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02pn7",
                    "class": "common.topic",
                    "friendly_name": "esther",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.place_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pn7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pn7 ns:people.person.place_of_birth ?x .\n}\n",
        "topic_entity": "m.02pn7",
        "answer": [
            {
                "answer_argument": "m.0gf0n",
                "answer_type": "Entity",
                "entity_name": "Susa"
            }
        ],
        "s_expression": "(JOIN (R people.person.place_of_birth) m.02pn7)",
        "s_expression_processed": "(JOIN (R people.person.place_of_birth) m.02pn7)"
    },
    {
        "qid": "WebQTrn-37",
        "question": "what sport do the toronto maple leafs play",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0j6tr",
                    "class": "common.topic",
                    "friendly_name": "toronto maple leafs",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.events.event_presenting_organisation.event_feed"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.events.event_feed.type_of_event"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0j6tr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0j6tr ns:base.events.event_presenting_organisation.event_feed ?y .\n?y ns:base.events.event_feed.type_of_event ?x .\n}\n",
        "topic_entity": "m.0j6tr",
        "answer": [
            {
                "answer_argument": "m.03tmr",
                "answer_type": "Entity",
                "entity_name": "Ice Hockey"
            }
        ],
        "s_expression": "(JOIN (R base.events.event_feed.type_of_event) (JOIN (R base.events.event_presenting_organisation.event_feed) m.0j6tr))",
        "s_expression_processed": "(JOIN (R base.events.event_feed.type_of_event) (JOIN (R base.events.event_presenting_organisation.event_feed) m.0j6tr))"
    },
    {
        "qid": "WebQTrn-40",
        "question": "what is cher 's son 's name",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01vtj38",
                    "class": "common.topic",
                    "friendly_name": "cher",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05zppz",
                    "class": "common.topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1,
                    "friendly_name": "male"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.children"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "people.person.gender"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vtj38)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vtj38 ns:people.person.children ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "topic_entity": "m.01vtj38",
        "answer": [
            {
                "answer_argument": "m.01w4bt1",
                "answer_type": "Entity",
                "entity_name": "Elijah Blue Allman"
            },
            {
                "answer_argument": "m.0br66",
                "answer_type": "Entity",
                "entity_name": "Chaz Bono"
            }
        ],
        "s_expression": "(AND (JOIN (R people.person.children) m.01vtj38) (JOIN people.person.gender m.05zppz))",
        "s_expression_processed": "(CONS (JOIN (R people.person.children) m.01vtj38) people.person.gender m.05zppz)"
    },
    {
        "qid": "WebQTrn-42",
        "question": "what party was andrew jackson",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0rlz",
                    "class": "common.topic",
                    "friendly_name": "andrew jackson",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.politician.party"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.political_party_tenure.party"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rlz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rlz ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
        "topic_entity": "m.0rlz",
        "answer": [
            {
                "answer_argument": "m.020lwv",
                "answer_type": "Entity",
                "entity_name": "Jacksonian Democratic Party"
            },
            {
                "answer_argument": "m.07wf9",
                "answer_type": "Entity",
                "entity_name": "Democratic-Republican Party"
            },
            {
                "answer_argument": "m.0d075m",
                "answer_type": "Entity",
                "entity_name": "Democratic Party"
            }
        ],
        "s_expression": "(JOIN (R government.political_party_tenure.party) (JOIN (R government.politician.party) m.0rlz))",
        "s_expression_processed": "(JOIN (R government.political_party_tenure.party) (JOIN (R government.politician.party) m.0rlz))"
    },
    {
        "qid": "WebQTrn-45",
        "question": "what is the name of the first harry potter novel",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.078ffw",
                    "class": "common.topic",
                    "friendly_name": "harry potter",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.literary_series.works_in_this_series"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "book.written_work.date_of_first_publication"
                }
            ]
        },
        "function": "argmin",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.078ffw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.078ffw ns:book.literary_series.works_in_this_series ?x .\n?x ns:book.written_work.date_of_first_publication ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "topic_entity": "m.078ffw",
        "answer": [
            {
                "answer_argument": "m.0c_vk",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Philosopher's Stone"
            }
        ],
        "s_expression": "(ARGMIN (JOIN (R book.literary_series.works_in_this_series) m.078ffw) book.written_work.date_of_first_publication)",
        "s_expression_processed": "(ARGMIN (JOIN (R book.literary_series.works_in_this_series) m.078ffw) book.written_work.date_of_first_publication)"
    },
    {
        "qid": "WebQTrn-46",
        "question": "what did william shakespeare do for a living",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.081k8",
                    "class": "common.topic",
                    "friendly_name": "william shakespeare",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.profession"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.081k8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.081k8 ns:people.person.profession ?x .\n}\n",
        "topic_entity": "m.081k8",
        "answer": [
            {
                "answer_argument": "m.025352",
                "answer_type": "Entity",
                "entity_name": "Lyricist"
            },
            {
                "answer_argument": "m.02hrh1q",
                "answer_type": "Entity",
                "entity_name": "Actor"
            },
            {
                "answer_argument": "m.02hv44_",
                "answer_type": "Entity",
                "entity_name": "Playwright"
            },
            {
                "answer_argument": "m.05z96",
                "answer_type": "Entity",
                "entity_name": "Poet"
            },
            {
                "answer_argument": "m.0kyk",
                "answer_type": "Entity",
                "entity_name": "Author"
            }
        ],
        "s_expression": "(JOIN (R people.person.profession) m.081k8)",
        "s_expression_processed": "(JOIN (R people.person.profession) m.081k8)"
    },
    {
        "qid": "WebQTrn-47",
        "question": "what county is heathrow airport in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.location",
                    "class": "location.location",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03jn4",
                    "class": "common.topic",
                    "friendly_name": "heathrow airport",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03jn4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03jn4 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01n7 .\n}\n",
        "topic_entity": "m.03jn4",
        "answer": [
            {
                "answer_argument": "m.04pxy3",
                "answer_type": "Entity",
                "entity_name": "Hillingdon"
            }
        ],
        "s_expression": "(AND location.location (JOIN (R location.location.containedby) m.03jn4))",
        "s_expression_processed": "(AND location.location (JOIN (R location.location.containedby) m.03jn4))"
    },
    {
        "qid": "WebQTrn-49",
        "question": "what movie is josh hutcherson in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.08wjf4",
                    "class": "common.topic",
                    "friendly_name": "josh hutcherson",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.08wjf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.08wjf4 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.08wjf4",
        "answer": [
            {
                "answer_argument": "g.11b7k0v3hq",
                "answer_type": "Entity",
                "entity_name": "In Dubious Battle"
            },
            {
                "answer_argument": "m.0135_65p",
                "answer_type": "Entity",
                "entity_name": "The Long Home"
            },
            {
                "answer_argument": "m.026gt8b",
                "answer_type": "Entity",
                "entity_name": "Bridge to Terabithia"
            },
            {
                "answer_argument": "m.0270k40",
                "answer_type": "Entity",
                "entity_name": "Cirque du Freak: The Vampire's Assistant"
            },
            {
                "answer_argument": "m.02q02ql",
                "answer_type": "Entity",
                "entity_name": "Firehouse Dog"
            },
            {
                "answer_argument": "m.02qd6h2",
                "answer_type": "Entity",
                "entity_name": "Winged Creatures"
            },
            {
                "answer_argument": "m.047qh9b",
                "answer_type": "Entity",
                "entity_name": "Party Wagon"
            },
            {
                "answer_argument": "m.04f8ttb",
                "answer_type": "Entity",
                "entity_name": "Journey to the Center of the Earth"
            },
            {
                "answer_argument": "m.04j0_gm",
                "answer_type": "Entity",
                "entity_name": "One Last Ride"
            },
            {
                "answer_argument": "m.04j1g18",
                "answer_type": "Entity",
                "entity_name": "Wilder Days"
            },
            {
                "answer_argument": "m.04j1phy",
                "answer_type": "Entity",
                "entity_name": "Miracle Dogs"
            },
            {
                "answer_argument": "m.05spvb",
                "answer_type": "Entity",
                "entity_name": "Kicking & Screaming"
            },
            {
                "answer_argument": "m.07sbq6c",
                "answer_type": "Entity",
                "entity_name": "Red Dawn"
            },
            {
                "answer_argument": "m.07y296",
                "answer_type": "Entity",
                "entity_name": "Motocross Kids"
            },
            {
                "answer_argument": "m.09qs_s",
                "answer_type": "Entity",
                "entity_name": "Zathura"
            },
            {
                "answer_argument": "m.09tqkv2",
                "answer_type": "Entity",
                "entity_name": "The Kids Are All Right"
            },
            {
                "answer_argument": "m.09v9dsq",
                "answer_type": "Entity",
                "entity_name": "The Forger"
            },
            {
                "answer_argument": "m.09w6br",
                "answer_type": "Entity",
                "entity_name": "The Polar Express"
            },
            {
                "answer_argument": "m.0bcs_f",
                "answer_type": "Entity",
                "entity_name": "RV"
            },
            {
                "answer_argument": "m.0crnh6",
                "answer_type": "Entity",
                "entity_name": "Little Manhattan"
            },
            {
                "answer_argument": "m.0ds2_k2",
                "answer_type": "Entity",
                "entity_name": "Journey 2: The Mysterious Island"
            },
            {
                "answer_argument": "m.0dzz6g",
                "answer_type": "Entity",
                "entity_name": "American Splendor"
            },
            {
                "answer_argument": "m.0g4tknw",
                "answer_type": "Entity",
                "entity_name": "Detention"
            },
            {
                "answer_argument": "m.0gkp_k",
                "answer_type": "Entity",
                "entity_name": "House Blend"
            },
            {
                "answer_argument": "m.0gkz15s",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games"
            },
            {
                "answer_argument": "m.0gy8kqb",
                "answer_type": "Entity",
                "entity_name": "7 Days in Havana"
            },
            {
                "answer_argument": "m.0gy8kv2",
                "answer_type": "Entity",
                "entity_name": "The Third Rule"
            },
            {
                "answer_argument": "m.0hhgh69",
                "answer_type": "Entity",
                "entity_name": "Epic"
            },
            {
                "answer_argument": "m.0n40qmp",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games: Catching Fire"
            },
            {
                "answer_argument": "m.0ngvsvk",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games: Mockingjay, Part 1"
            },
            {
                "answer_argument": "m.0ngvtb_",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games: Mockingjay, Part 2"
            },
            {
                "answer_argument": "m.0x1xc_w",
                "answer_type": "Entity",
                "entity_name": "Escobar: Paradise Lost"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.08wjf4))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.08wjf4))"
    },
    {
        "qid": "WebQTrn-52",
        "question": "where do the san francisco giants play home games",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0713r",
                    "class": "common.topic",
                    "friendly_name": "san francisco giants",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team.arena_stadium"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "architecture.structure.opened"
                }
            ]
        },
        "function": "argmax",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0713r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0713r ns:sports.sports_team.arena_stadium ?x .\n?x ns:architecture.structure.opened ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "topic_entity": "m.0713r",
        "answer": [
            {
                "answer_argument": "m.01_gsg",
                "answer_type": "Entity",
                "entity_name": "AT&T Park"
            }
        ],
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) m.0713r) architecture.structure.opened)",
        "s_expression_processed": "(ARGMAX (JOIN (R sports.sports_team.arena_stadium) m.0713r) architecture.structure.opened)"
    },
    {
        "qid": "WebQTrn-53",
        "question": "what year did william jennings bryan run for president",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0b3tf",
                    "class": "common.topic",
                    "friendly_name": "william jennings bryan",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.politicalconventions.presidential_nominee.nominated_at"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b3tf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b3tf ns:base.politicalconventions.presidential_nominee.nominated_at ?x .\n}\n",
        "topic_entity": "m.0b3tf",
        "answer": [
            {
                "answer_argument": "m.0b4pfj",
                "answer_type": "Entity",
                "entity_name": "1896 Democratic National Convention"
            },
            {
                "answer_argument": "m.0dv63j",
                "answer_type": "Entity",
                "entity_name": "1908 Democratic National Convention"
            },
            {
                "answer_argument": "m.0fr77c",
                "answer_type": "Entity",
                "entity_name": "1900 Democratic National Convention"
            }
        ],
        "s_expression": "(JOIN (R base.politicalconventions.presidential_nominee.nominated_at) m.0b3tf)",
        "s_expression_processed": "(JOIN (R base.politicalconventions.presidential_nominee.nominated_at) m.0b3tf)"
    },
    {
        "qid": "WebQTrn-54",
        "question": "what was the name of frederick douglass book",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.book",
                    "class": "book.book",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02zg0",
                    "class": "common.topic",
                    "friendly_name": "frederick douglass",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.author.works_written"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zg0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zg0 ns:book.author.works_written ?x .\n?x ns:common.topic.notable_types ns:m.01xryvm .\n}\n",
        "topic_entity": "m.02zg0",
        "answer": [
            {
                "answer_argument": "m.03c5dpz",
                "answer_type": "Entity",
                "entity_name": "The Heroic Slave"
            },
            {
                "answer_argument": "m.03clq8t",
                "answer_type": "Entity",
                "entity_name": "Life and Times of Frederick Douglass"
            },
            {
                "answer_argument": "m.04kh2k",
                "answer_type": "Entity",
                "entity_name": "Narrative of the Life of Frederick Douglass, an American Slave"
            },
            {
                "answer_argument": "m.067mzxk",
                "answer_type": "Entity",
                "entity_name": "Escape from slavery"
            },
            {
                "answer_argument": "m.067x2lp",
                "answer_type": "Entity",
                "entity_name": "My Bondage and My Freedom"
            },
            {
                "answer_argument": "m.068c5tc",
                "answer_type": "Entity",
                "entity_name": "Words of Ages"
            },
            {
                "answer_argument": "m.068jkrg",
                "answer_type": "Entity",
                "entity_name": "Standing with the slave"
            },
            {
                "answer_argument": "m.0697p24",
                "answer_type": "Entity",
                "entity_name": "The mind and heart of Frederick Douglass"
            },
            {
                "answer_argument": "m.06bq6w2",
                "answer_type": "Entity",
                "entity_name": "A Black diplomat in Haiti"
            },
            {
                "answer_argument": "m.06c1dmk",
                "answer_type": "Entity",
                "entity_name": "Three African-American Classics"
            },
            {
                "answer_argument": "m.06fr4s7",
                "answer_type": "Entity",
                "entity_name": "Life & Times of Frederick Douglas"
            },
            {
                "answer_argument": "m.06jjj7m",
                "answer_type": "Entity",
                "entity_name": "The Life of an American Slave"
            },
            {
                "answer_argument": "m.06kf95n",
                "answer_type": "Entity",
                "entity_name": "The claims of the Negro, ethnologically considered"
            },
            {
                "answer_argument": "m.06ktxh7",
                "answer_type": "Entity",
                "entity_name": "Collected Articles Of Frederick Douglass"
            },
            {
                "answer_argument": "m.06kvgsm",
                "answer_type": "Entity",
                "entity_name": "The Education of Frederick Douglass"
            },
            {
                "answer_argument": "m.06kxqpj",
                "answer_type": "Entity",
                "entity_name": "Negroes and the national war effort"
            },
            {
                "answer_argument": "m.06m91zr",
                "answer_type": "Entity",
                "entity_name": "Frederick Douglass"
            },
            {
                "answer_argument": "m.06mj8s0",
                "answer_type": "Entity",
                "entity_name": "The race problem"
            },
            {
                "answer_argument": "m.06mkpqq",
                "answer_type": "Entity",
                "entity_name": "Why Is the Negro Lynched"
            },
            {
                "answer_argument": "m.06mkz59",
                "answer_type": "Entity",
                "entity_name": "Abolition fanaticism in New York"
            },
            {
                "answer_argument": "m.06mz4m1",
                "answer_type": "Entity",
                "entity_name": "U.S. Grant and the colored people"
            },
            {
                "answer_argument": "m.06p5ykp",
                "answer_type": "Entity",
                "entity_name": "Thoughts for all time"
            },
            {
                "answer_argument": "m.06r6hzr",
                "answer_type": "Entity",
                "entity_name": "Why I Became A Woman's Rights Man"
            },
            {
                "answer_argument": "m.06ry31_",
                "answer_type": "Entity",
                "entity_name": "The Oxford Frederick Douglass reader"
            },
            {
                "answer_argument": "m.06twn1l",
                "answer_type": "Entity",
                "entity_name": "Two Slave Rebellions at Sea"
            },
            {
                "answer_argument": "m.06tws33",
                "answer_type": "Entity",
                "entity_name": "Vida de Un Esclavo Americano"
            },
            {
                "answer_argument": "m.06ty1ql",
                "answer_type": "Entity",
                "entity_name": "A Chinese Girl Graduate"
            },
            {
                "answer_argument": "m.06vbs0d",
                "answer_type": "Entity",
                "entity_name": "From slave to statesman"
            },
            {
                "answer_argument": "m.0c1t2v2",
                "answer_type": "Entity",
                "entity_name": "The narrative and selected writings"
            },
            {
                "answer_argument": "m.0fpb93x",
                "answer_type": "Entity",
                "entity_name": "The Frederick Douglass Papers, Series 1, Vol. 1: 1841-46"
            },
            {
                "answer_argument": "m.0fpb946",
                "answer_type": "Entity",
                "entity_name": "The Frederick Douglass Papers, Series 2, Vol. 1: Narrative"
            },
            {
                "answer_argument": "m.0y50n2g",
                "answer_type": "Entity",
                "entity_name": "The Frederick Douglass Papers, Series 1, Vol. 2: 1847-54"
            },
            {
                "answer_argument": "m.0y50n39",
                "answer_type": "Entity",
                "entity_name": "The Frederick Douglass Papers, Series 1, Vol. 3: 1855-63"
            },
            {
                "answer_argument": "m.0y50n4h",
                "answer_type": "Entity",
                "entity_name": "The Frederick Douglass Papers, Series 1, Vol. 4: 1864-80"
            },
            {
                "answer_argument": "m.0y50n7t",
                "answer_type": "Entity",
                "entity_name": "The Frederick Douglass Papers, Series 1, Vol. 5: 1881-95"
            },
            {
                "answer_argument": "m.0y50ngp",
                "answer_type": "Entity",
                "entity_name": "The Frederick Douglass Papers, Series 2, Vol. 2: Bondage and Freedom"
            },
            {
                "answer_argument": "m.0y50njy",
                "answer_type": "Entity",
                "entity_name": "The Frederick Douglass Papers, Series 2, Vol. 3: Life and Times"
            },
            {
                "answer_argument": "m.0y50nxt",
                "answer_type": "Entity",
                "entity_name": "The Frederick Douglass Papers, Series 3, Vol. 1: 1842-1852"
            }
        ],
        "s_expression": "(AND book.book (JOIN (R book.author.works_written) m.02zg0))",
        "s_expression_processed": "(AND book.book (JOIN (R book.author.works_written) m.02zg0))"
    },
    {
        "qid": "WebQTrn-55",
        "question": "who was queen victoria 's parents called",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0cw10",
                    "class": "common.topic",
                    "friendly_name": "queen victoria",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.parents"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cw10)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cw10 ns:people.person.parents ?x .\n}\n",
        "topic_entity": "m.0cw10",
        "answer": [
            {
                "answer_argument": "m.01c50q",
                "answer_type": "Entity",
                "entity_name": "Prince Edward, Duke of Kent and Strathearn"
            },
            {
                "answer_argument": "m.024hvp",
                "answer_type": "Entity",
                "entity_name": "Princess Victoria of Saxe-Coburg-Saalfeld"
            }
        ],
        "s_expression": "(JOIN (R people.person.parents) m.0cw10)",
        "s_expression_processed": "(JOIN (R people.person.parents) m.0cw10)"
    },
    {
        "qid": "WebQTrn-56",
        "question": "what movies did sally field win an oscar for",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01jw4r",
                    "class": "common.topic",
                    "friendly_name": "sally field",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 4,
                    "node_type": "entity",
                    "id": "m.0g_w",
                    "class": "common.topic",
                    "friendly_name": "Oscar",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 2,
                    "relation": "award.award_winner.awards_won"
                },
                {
                    "start": 2,
                    "end": 0,
                    "relation": "award.award_honor.honored_for"
                },
                {
                    "start": 2,
                    "end": 3,
                    "relation": "award.award_honor.award"
                },
                {
                    "start": 3,
                    "end": 4,
                    "relation": "award.award_category.category_of"
                }
            ]
        },
        "function": "none",
        "num_node": 5,
        "num_edge": 4,
        "sparql_query": "#MANUAL SPARQL\nPREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT  ?x\nWHERE {\n  ns:m.01jw4r ns:award.award_winner.awards_won ?y .\t# Sally Field\n  ?y ns:award.award_honor.honored_for ?x .\n  ?y ns:award.award_honor.award ?awd .\n  ?awd ns:award.award_category.category_of ns:m.0g_w .  # Academy Awards\n}",
        "topic_entity": "m.01jw4r",
        "answer": [
            {
                "answer_argument": "m.0p_vt",
                "answer_type": "Entity",
                "entity_name": "Norma Rae"
            },
            {
                "answer_argument": "m.0sxjs",
                "answer_type": "Entity",
                "entity_name": "Places in the Heart"
            }
        ],
        "s_expression": "(JOIN (R award.award_honor.honored_for) (AND (JOIN (R award.award_winner.awards_won) m.01jw4r) (JOIN award.award_honor.award (JOIN award.award_category.category_of m.0g_w))))",
        "s_expression_processed": "(JOIN (R award.award_honor.honored_for) (AND (JOIN (R award.award_winner.awards_won) m.01jw4r) (JOIN award.award_honor.award (JOIN award.award_category.category_of m.0g_w))))"
    },
    {
        "qid": "WebQTrn-57",
        "question": "what is the first book sherlock holmes appeared in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06rkl",
                    "class": "common.topic",
                    "friendly_name": "sherlock holmes",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.book_character.appears_in_book"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "book.written_work.date_of_first_publication"
                }
            ]
        },
        "function": "argmin",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06rkl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06rkl ns:book.book_character.appears_in_book ?x .\n?x ns:book.written_work.date_of_first_publication ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "topic_entity": "m.06rkl",
        "answer": [
            {
                "answer_argument": "m.01gq2s",
                "answer_type": "Entity",
                "entity_name": "A Study in Scarlet"
            }
        ],
        "s_expression": "(ARGMIN (JOIN (R book.book_character.appears_in_book) m.06rkl) book.written_work.date_of_first_publication)",
        "s_expression_processed": "(ARGMIN (JOIN (R book.book_character.appears_in_book) m.06rkl) book.written_work.date_of_first_publication)"
    },
    {
        "qid": "WebQTrn-60",
        "question": "what countries do people speak portuguese",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05zjd",
                    "class": "common.topic",
                    "friendly_name": "portuguese",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "language.human_language.countries_spoken_in"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05zjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05zjd ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "topic_entity": "m.05zjd",
        "answer": [
            {
                "answer_argument": "m.015fr",
                "answer_type": "Entity",
                "entity_name": "Brazil"
            },
            {
                "answer_argument": "m.01nqj",
                "answer_type": "Entity",
                "entity_name": "Cape Verde"
            },
            {
                "answer_argument": "m.02kcz",
                "answer_type": "Entity",
                "entity_name": "Equatorial Guinea"
            },
            {
                "answer_argument": "m.02lx0",
                "answer_type": "Entity",
                "entity_name": "Timor-Leste"
            },
            {
                "answer_argument": "m.034m8",
                "answer_type": "Entity",
                "entity_name": "Guyana"
            },
            {
                "answer_argument": "m.036b_",
                "answer_type": "Entity",
                "entity_name": "Guinea-Bissau"
            },
            {
                "answer_argument": "m.04thp",
                "answer_type": "Entity",
                "entity_name": "Macau"
            },
            {
                "answer_argument": "m.04wlh",
                "answer_type": "Entity",
                "entity_name": "Mozambique"
            },
            {
                "answer_argument": "m.05r4w",
                "answer_type": "Entity",
                "entity_name": "Portugal"
            },
            {
                "answer_argument": "m.0d05w3",
                "answer_type": "Entity",
                "entity_name": "China"
            },
            {
                "answer_argument": "m.0d060g",
                "answer_type": "Entity",
                "entity_name": "Canada"
            },
            {
                "answer_argument": "m.0hg5",
                "answer_type": "Entity",
                "entity_name": "Andorra"
            },
            {
                "answer_argument": "m.0hzlz",
                "answer_type": "Entity",
                "entity_name": "South Africa"
            },
            {
                "answer_argument": "m.0j4b",
                "answer_type": "Entity",
                "entity_name": "Angola"
            }
        ],
        "s_expression": "(JOIN (R language.human_language.countries_spoken_in) m.05zjd)",
        "s_expression_processed": "(JOIN (R language.human_language.countries_spoken_in) m.05zjd)"
    },
    {
        "qid": "WebQTrn-62",
        "question": "what are the names of walt disney kids",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.081nh",
                    "class": "common.topic",
                    "friendly_name": "walt disney",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.children"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.081nh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.081nh ns:people.person.children ?x .\n}\n",
        "topic_entity": "m.081nh",
        "answer": [
            {
                "answer_argument": "m.064ndq",
                "answer_type": "Entity",
                "entity_name": "Diane Disney Miller"
            },
            {
                "answer_argument": "m.07kyh5",
                "answer_type": "Entity",
                "entity_name": "Sharon Mae Disney"
            }
        ],
        "s_expression": "(JOIN (R people.person.children) m.081nh)",
        "s_expression_processed": "(JOIN (R people.person.children) m.081nh)"
    },
    {
        "qid": "WebQTrn-63",
        "question": "who is in the band bush",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01727v",
                    "class": "common.topic",
                    "friendly_name": "bush",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "music.musical_group.member"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.group_membership.member"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01727v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01727v ns:music.musical_group.member ?y .\n?y ns:music.group_membership.member ?x .\n}\n",
        "topic_entity": "m.01727v",
        "answer": [
            {
                "answer_argument": "m.014qv7",
                "answer_type": "Entity",
                "entity_name": "Gavin Rossdale"
            },
            {
                "answer_argument": "m.01vs4sv",
                "answer_type": "Entity",
                "entity_name": "Robin Goodridge"
            },
            {
                "answer_argument": "m.01vs4t_",
                "answer_type": "Entity",
                "entity_name": "Chris Traynor"
            },
            {
                "answer_argument": "m.01vs4vw",
                "answer_type": "Entity",
                "entity_name": "Nigel Pulsford"
            },
            {
                "answer_argument": "m.01wrrdk",
                "answer_type": "Entity",
                "entity_name": "Spencer Cobrin"
            },
            {
                "answer_argument": "m.03d_qbn",
                "answer_type": "Entity",
                "entity_name": "Dave Parsons"
            },
            {
                "answer_argument": "m.08f647",
                "answer_type": "Entity",
                "entity_name": "Sacha Gervasi"
            },
            {
                "answer_argument": "m.0h88bb2",
                "answer_type": "Entity",
                "entity_name": "Sacha Puttnam"
            },
            {
                "answer_argument": "m.0j1v9tm",
                "answer_type": "Entity",
                "entity_name": "Corey Britz"
            },
            {
                "answer_argument": "m.0zdb8q6",
                "answer_type": "Entity",
                "entity_name": "Amir"
            }
        ],
        "s_expression": "(JOIN (R music.group_membership.member) (JOIN (R music.musical_group.member) m.01727v))",
        "s_expression_processed": "(JOIN (R music.group_membership.member) (JOIN (R music.musical_group.member) m.01727v))"
    },
    {
        "qid": "WebQTrn-64",
        "question": "what was tupac name in juice",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07pzc",
                    "class": "common.topic",
                    "friendly_name": "tupac",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.08w51z",
                    "class": "common.topic",
                    "friendly_name": "Juice",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07pzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07pzc ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.08w51z .\n}\n",
        "topic_entity": "m.07pzc",
        "answer": [
            {
                "answer_argument": "m.0h5rvlw",
                "answer_type": "Entity",
                "entity_name": "Bishop"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.07pzc) (JOIN film.performance.film m.08w51z)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.07pzc) (JOIN film.performance.film m.08w51z)))"
    },
    {
        "qid": "WebQTrn-65",
        "question": "what timezone is australia gmt",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0chghy",
                    "class": "common.topic",
                    "friendly_name": "australia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.time_zones"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.location.time_zones ?x .\n}\n",
        "topic_entity": "m.0chghy",
        "answer": [
            {
                "answer_argument": "m.0y497_m",
                "answer_type": "Entity",
                "entity_name": "Australian Eastern Time Zone"
            },
            {
                "answer_argument": "m.0y497zw",
                "answer_type": "Entity",
                "entity_name": "Australian Central Time Zone"
            },
            {
                "answer_argument": "m.0y4980d",
                "answer_type": "Entity",
                "entity_name": "Australian Western Time Zone"
            },
            {
                "answer_argument": "m.0y498qn",
                "answer_type": "Entity",
                "entity_name": "Casey Time Zone"
            },
            {
                "answer_argument": "m.0y498v7",
                "answer_type": "Entity",
                "entity_name": "Central Western Time Zone"
            },
            {
                "answer_argument": "m.0y49954",
                "answer_type": "Entity",
                "entity_name": "Christmas Island Time Zone"
            },
            {
                "answer_argument": "m.0y49994",
                "answer_type": "Entity",
                "entity_name": "Cocos Islands Time Zone"
            },
            {
                "answer_argument": "m.0y499p1",
                "answer_type": "Entity",
                "entity_name": "Davis Time Zone"
            },
            {
                "answer_argument": "m.0y49btq",
                "answer_type": "Entity",
                "entity_name": "Heard and McDonald Islands Time Zone"
            },
            {
                "answer_argument": "m.0y4dpjf",
                "answer_type": "Entity",
                "entity_name": "Lord Howe Time Zone"
            },
            {
                "answer_argument": "m.0y4dr4c",
                "answer_type": "Entity",
                "entity_name": "Mawson Station Time Zone"
            },
            {
                "answer_argument": "m.0y4drym",
                "answer_type": "Entity",
                "entity_name": "Norfolk Time Zone"
            }
        ],
        "s_expression": "(JOIN (R location.location.time_zones) m.0chghy)",
        "s_expression_processed": "(JOIN (R location.location.time_zones) m.0chghy)"
    },
    {
        "qid": "WebQTrn-66",
        "question": "who does maggie grace play in taken",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03_wpf",
                    "class": "common.topic",
                    "friendly_name": "maggie grace",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0hhggmy",
                    "class": "common.topic",
                    "friendly_name": "Taken",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_wpf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_wpf ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.0hhggmy .\n}\n",
        "topic_entity": "m.03_wpf",
        "answer": [
            {
                "answer_argument": "m.0g_kvk0",
                "answer_type": "Entity",
                "entity_name": "Kim"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.03_wpf) (JOIN film.performance.film m.0hhggmy)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.03_wpf) (JOIN film.performance.film m.0hhggmy)))"
    },
    {
        "qid": "WebQTrn-67",
        "question": "what style of music did louis armstrong play",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04n32",
                    "class": "common.topic",
                    "friendly_name": "louis armstrong",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.artist.genre"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04n32)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04n32 ns:music.artist.genre ?x .\n}\n",
        "topic_entity": "m.04n32",
        "answer": [
            {
                "answer_argument": "m.015y_n",
                "answer_type": "Entity",
                "entity_name": "Swing music"
            },
            {
                "answer_argument": "m.03_d0",
                "answer_type": "Entity",
                "entity_name": "Jazz"
            },
            {
                "answer_argument": "m.09xw2",
                "answer_type": "Entity",
                "entity_name": "Dixieland"
            },
            {
                "answer_argument": "m.0dhb2",
                "answer_type": "Entity",
                "entity_name": "Scat singing"
            },
            {
                "answer_argument": "m.0m40d",
                "answer_type": "Entity",
                "entity_name": "Traditional pop music"
            }
        ],
        "s_expression": "(JOIN (R music.artist.genre) m.04n32)",
        "s_expression_processed": "(JOIN (R music.artist.genre) m.04n32)"
    },
    {
        "qid": "WebQTrn-69",
        "question": "what tv show did joey lawrence play on",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01pr9kj",
                    "class": "common.topic",
                    "friendly_name": "joey lawrence",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_actor.starring_roles"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.series"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pr9kj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pr9kj ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.series ?x .\n}\n",
        "topic_entity": "m.01pr9kj",
        "answer": [
            {
                "answer_argument": "m.026_g9w",
                "answer_type": "Entity",
                "entity_name": "Run of the House"
            },
            {
                "answer_argument": "m.02xwgb",
                "answer_type": "Entity",
                "entity_name": "Blossom"
            },
            {
                "answer_argument": "m.036y7h",
                "answer_type": "Entity",
                "entity_name": "Gimme a Break!"
            },
            {
                "answer_argument": "m.0b6kw6d",
                "answer_type": "Entity",
                "entity_name": "Melissa & Joey"
            },
            {
                "answer_argument": "m.0g0tw9",
                "answer_type": "Entity",
                "entity_name": "Brotherly Love"
            },
            {
                "answer_argument": "m.0lc1qx5",
                "answer_type": "Entity",
                "entity_name": "Bow"
            }
        ],
        "s_expression": "(JOIN (R tv.regular_tv_appearance.series) (JOIN (R tv.tv_actor.starring_roles) m.01pr9kj))",
        "s_expression_processed": "(JOIN (R tv.regular_tv_appearance.series) (JOIN (R tv.tv_actor.starring_roles) m.01pr9kj))"
    },
    {
        "qid": "WebQTrn-87",
        "question": "what language do the speak in pakistan",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05sb1",
                    "class": "common.topic",
                    "friendly_name": "pakistan",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.official_language"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05sb1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05sb1 ns:location.country.official_language ?x .\n}\n",
        "topic_entity": "m.05sb1",
        "answer": [
            {
                "answer_argument": "m.02h40lc",
                "answer_type": "Entity",
                "entity_name": "English Language"
            },
            {
                "answer_argument": "m.02hxcvy",
                "answer_type": "Entity",
                "entity_name": "Urdu Language"
            }
        ],
        "s_expression": "(JOIN (R location.country.official_language) m.05sb1)",
        "s_expression_processed": "(JOIN (R location.country.official_language) m.05sb1)"
    },
    {
        "qid": "WebQTrn-128",
        "question": "what year did tut became king",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07hcc",
                    "class": "common.topic",
                    "friendly_name": "tut",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.ancientegypt.pharaoh.reign"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "measurement_unit.time_interval.start"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07hcc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07hcc ns:base.ancientegypt.pharaoh.reign ?y .\n?y ns:measurement_unit.time_interval.start ?x .\n}\n",
        "topic_entity": "m.07hcc",
        "answer": [
            {
                "answer_argument": "-1332",
                "answer_type": "Value",
                "entity_name": null
            }
        ],
        "s_expression": "(JOIN (R measurement_unit.time_interval.start) (JOIN (R base.ancientegypt.pharaoh.reign) m.07hcc))",
        "s_expression_processed": "(JOIN (R measurement_unit.time_interval.start) (JOIN (R base.ancientegypt.pharaoh.reign) m.07hcc))"
    },
    {
        "qid": "WebQTrn-163",
        "question": "what team did shaq play for first",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.012xdf",
                    "class": "common.topic",
                    "friendly_name": "shaq",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "sports.sports_team_roster.from"
                }
            ]
        },
        "function": "argmin",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012xdf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012xdf ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?y ns:sports.sports_team_roster.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "topic_entity": "m.012xdf",
        "answer": [
            {
                "answer_argument": "m.026dqjm",
                "answer_type": "Entity",
                "entity_name": "LSU Tigers men's basketball"
            }
        ],
        "s_expression": "(ARGMIN (JOIN (R sports.sports_team_roster.team) (JOIN (R sports.pro_athlete.teams) m.012xdf)) (JOIN (R sports.sports_team_roster.team) sports.sports_team_roster.from))",
        "s_expression_processed": "(ARGMIN (JOIN (R sports.sports_team_roster.team) (JOIN (R sports.pro_athlete.teams) m.012xdf)) (JOIN (R sports.sports_team_roster.team) sports.sports_team_roster.from))"
    },
    {
        "qid": "WebQTrn-204",
        "question": "what is the zip code for minneapolis",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0fpzwf",
                    "class": "common.topic",
                    "friendly_name": "minneapolis",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.citytown.postal_codes"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fpzwf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fpzwf ns:location.citytown.postal_codes ?x .\n}\n",
        "topic_entity": "m.0fpzwf",
        "answer": [
            {
                "answer_argument": "m.01_x_4z",
                "answer_type": "Entity",
                "entity_name": "55401"
            },
            {
                "answer_argument": "m.01_x_8g",
                "answer_type": "Entity",
                "entity_name": "55434"
            },
            {
                "answer_argument": "m.01_x_qk",
                "answer_type": "Entity",
                "entity_name": "55449"
            },
            {
                "answer_argument": "m.01_y0_0",
                "answer_type": "Entity",
                "entity_name": "55439"
            },
            {
                "answer_argument": "m.01_y0gq",
                "answer_type": "Entity",
                "entity_name": "55425"
            },
            {
                "answer_argument": "m.01_y0jp",
                "answer_type": "Entity",
                "entity_name": "55431"
            },
            {
                "answer_argument": "m.01_y0kh",
                "answer_type": "Entity",
                "entity_name": "55420"
            },
            {
                "answer_argument": "m.01_y0ms",
                "answer_type": "Entity",
                "entity_name": "55437"
            },
            {
                "answer_argument": "m.01_y0q_",
                "answer_type": "Entity",
                "entity_name": "55435"
            },
            {
                "answer_argument": "m.01_y1yp",
                "answer_type": "Entity",
                "entity_name": "55438"
            },
            {
                "answer_argument": "m.01_y3_x",
                "answer_type": "Entity",
                "entity_name": "55428"
            },
            {
                "answer_argument": "m.01_y3h3",
                "answer_type": "Entity",
                "entity_name": "55429"
            },
            {
                "answer_argument": "m.01_y3j5",
                "answer_type": "Entity",
                "entity_name": "55430"
            },
            {
                "answer_argument": "m.01_y41c",
                "answer_type": "Entity",
                "entity_name": "55445"
            },
            {
                "answer_argument": "m.01_y467",
                "answer_type": "Entity",
                "entity_name": "55443"
            },
            {
                "answer_argument": "m.01_y48c",
                "answer_type": "Entity",
                "entity_name": "55444"
            },
            {
                "answer_argument": "m.01_y7w7",
                "answer_type": "Entity",
                "entity_name": "55421"
            },
            {
                "answer_argument": "m.01_y83k",
                "answer_type": "Entity",
                "entity_name": "55448"
            },
            {
                "answer_argument": "m.01_y89x",
                "answer_type": "Entity",
                "entity_name": "55433"
            },
            {
                "answer_argument": "m.01_y9z4",
                "answer_type": "Entity",
                "entity_name": "55422"
            },
            {
                "answer_argument": "m.01_yd4v",
                "answer_type": "Entity",
                "entity_name": "55424"
            },
            {
                "answer_argument": "m.01_ydb4",
                "answer_type": "Entity",
                "entity_name": "55410"
            },
            {
                "answer_argument": "m.01_ydmy",
                "answer_type": "Entity",
                "entity_name": "55436"
            },
            {
                "answer_argument": "m.01_yhvb",
                "answer_type": "Entity",
                "entity_name": "55432"
            },
            {
                "answer_argument": "m.01_yjfc",
                "answer_type": "Entity",
                "entity_name": "55416"
            },
            {
                "answer_argument": "m.01_yjgp",
                "answer_type": "Entity",
                "entity_name": "55426"
            },
            {
                "answer_argument": "m.01_yjjm",
                "answer_type": "Entity",
                "entity_name": "55427"
            },
            {
                "answer_argument": "m.01_yjqc",
                "answer_type": "Entity",
                "entity_name": "55441"
            },
            {
                "answer_argument": "m.01_yqg4",
                "answer_type": "Entity",
                "entity_name": "55417"
            },
            {
                "answer_argument": "m.01_yr_z",
                "answer_type": "Entity",
                "entity_name": "55408"
            },
            {
                "answer_argument": "m.01_yrfl",
                "answer_type": "Entity",
                "entity_name": "55406"
            },
            {
                "answer_argument": "m.01_yrgm",
                "answer_type": "Entity",
                "entity_name": "55403"
            },
            {
                "answer_argument": "m.01_yrlg",
                "answer_type": "Entity",
                "entity_name": "55414"
            },
            {
                "answer_argument": "m.01_yrpq",
                "answer_type": "Entity",
                "entity_name": "55402"
            },
            {
                "answer_argument": "m.01_yry4",
                "answer_type": "Entity",
                "entity_name": "55407"
            },
            {
                "answer_argument": "m.01_ys37",
                "answer_type": "Entity",
                "entity_name": "55413"
            },
            {
                "answer_argument": "m.01_ys66",
                "answer_type": "Entity",
                "entity_name": "55409"
            },
            {
                "answer_argument": "m.01_ysl3",
                "answer_type": "Entity",
                "entity_name": "55405"
            },
            {
                "answer_argument": "m.01_yszb",
                "answer_type": "Entity",
                "entity_name": "55404"
            },
            {
                "answer_argument": "m.01_ytb1",
                "answer_type": "Entity",
                "entity_name": "55419"
            },
            {
                "answer_argument": "m.01_ytcq",
                "answer_type": "Entity",
                "entity_name": "55415"
            },
            {
                "answer_argument": "m.01_yv9p",
                "answer_type": "Entity",
                "entity_name": "55423"
            },
            {
                "answer_argument": "m.01_yvfs",
                "answer_type": "Entity",
                "entity_name": "55411"
            },
            {
                "answer_argument": "m.01_yxn1",
                "answer_type": "Entity",
                "entity_name": "55447"
            },
            {
                "answer_argument": "m.01_yxyn",
                "answer_type": "Entity",
                "entity_name": "55454"
            },
            {
                "answer_argument": "m.01_yycq",
                "answer_type": "Entity",
                "entity_name": "55418"
            },
            {
                "answer_argument": "m.01_zhy6",
                "answer_type": "Entity",
                "entity_name": "55412"
            },
            {
                "answer_argument": "m.01_znb8",
                "answer_type": "Entity",
                "entity_name": "55442"
            },
            {
                "answer_argument": "m.01_zp8l",
                "answer_type": "Entity",
                "entity_name": "55446"
            },
            {
                "answer_argument": "m.02wvhc5",
                "answer_type": "Entity",
                "entity_name": "55455"
            },
            {
                "answer_argument": "m.03ds9j3",
                "answer_type": "Entity",
                "entity_name": "55450"
            },
            {
                "answer_argument": "m.07nqpnj",
                "answer_type": "Entity",
                "entity_name": "55488"
            },
            {
                "answer_argument": "m.07nqpnr",
                "answer_type": "Entity",
                "entity_name": "55487"
            },
            {
                "answer_argument": "m.07nqpnz",
                "answer_type": "Entity",
                "entity_name": "55486"
            },
            {
                "answer_argument": "m.07nqpp5",
                "answer_type": "Entity",
                "entity_name": "55485"
            },
            {
                "answer_argument": "m.07nqppd",
                "answer_type": "Entity",
                "entity_name": "55484"
            },
            {
                "answer_argument": "m.07nqppm",
                "answer_type": "Entity",
                "entity_name": "55483"
            },
            {
                "answer_argument": "m.07nqppv",
                "answer_type": "Entity",
                "entity_name": "55480"
            },
            {
                "answer_argument": "m.07nqpq_",
                "answer_type": "Entity",
                "entity_name": "55472"
            },
            {
                "answer_argument": "m.07nqpq1",
                "answer_type": "Entity",
                "entity_name": "55479"
            },
            {
                "answer_argument": "m.07nqpq8",
                "answer_type": "Entity",
                "entity_name": "55478"
            },
            {
                "answer_argument": "m.07nqpqh",
                "answer_type": "Entity",
                "entity_name": "55474"
            },
            {
                "answer_argument": "m.07nqpqq",
                "answer_type": "Entity",
                "entity_name": "55473"
            },
            {
                "answer_argument": "m.07nqpr6",
                "answer_type": "Entity",
                "entity_name": "55470"
            },
            {
                "answer_argument": "m.07nqprf",
                "answer_type": "Entity",
                "entity_name": "55467"
            },
            {
                "answer_argument": "m.07nqprn",
                "answer_type": "Entity",
                "entity_name": "55460"
            },
            {
                "answer_argument": "m.07nqprw",
                "answer_type": "Entity",
                "entity_name": "55459"
            },
            {
                "answer_argument": "m.07nqps2",
                "answer_type": "Entity",
                "entity_name": "55458"
            },
            {
                "answer_argument": "m.07nqps9",
                "answer_type": "Entity",
                "entity_name": "55440"
            },
            {
                "answer_argument": "m.09rzq2n",
                "answer_type": "Entity",
                "entity_name": "55422-3330"
            }
        ],
        "s_expression": "(JOIN (R location.citytown.postal_codes) m.0fpzwf)",
        "s_expression_processed": "(JOIN (R location.citytown.postal_codes) m.0fpzwf)"
    },
    {
        "qid": "WebQTrn-219",
        "question": "what does nick cannon play in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01d1st",
                    "class": "common.topic",
                    "friendly_name": "nick cannon",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_actor.starring_roles"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.series"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01d1st)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01d1st ns:tv.tv_actor.starring_roles ?y .\n?y ns:tv.regular_tv_appearance.series ?x .\n}\n",
        "topic_entity": "m.01d1st",
        "answer": [
            {
                "answer_argument": "m.0125f1",
                "answer_type": "Entity",
                "entity_name": "All That"
            },
            {
                "answer_argument": "m.02pzsft",
                "answer_type": "Entity",
                "entity_name": "Nick Cannon Presents: Short Circuitz"
            },
            {
                "answer_argument": "m.02vrvv",
                "answer_type": "Entity",
                "entity_name": "Soul Train"
            },
            {
                "answer_argument": "m.0cnyxtv",
                "answer_type": "Entity",
                "entity_name": "The Nightlife"
            },
            {
                "answer_argument": "m.0d4x_3",
                "answer_type": "Entity",
                "entity_name": "The Nick Cannon Show"
            },
            {
                "answer_argument": "m.0m_921m",
                "answer_type": "Entity",
                "entity_name": "Mash Up"
            }
        ],
        "s_expression": "(JOIN (R tv.regular_tv_appearance.series) (JOIN (R tv.tv_actor.starring_roles) m.01d1st))",
        "s_expression_processed": "(JOIN (R tv.regular_tv_appearance.series) (JOIN (R tv.tv_actor.starring_roles) m.01d1st))"
    },
    {
        "qid": "WebQTrn-230",
        "question": "who is the new senator of montana",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.050l8",
                    "class": "common.topic",
                    "friendly_name": "montana",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02_7l8y",
                    "class": "common.topic",
                    "friendly_name": "United States Senator",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                },
                {
                    "nid": 4,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.political_district.representatives"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.office_position_or_title"
                },
                {
                    "start": 1,
                    "end": 4,
                    "relation": "government.government_position_held.from"
                }
            ]
        },
        "function": "argmax",
        "num_node": 5,
        "num_edge": 4,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.050l8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.050l8 ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.02_7l8y .\n?y ns:government.government_position_held.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "topic_entity": "m.050l8",
        "answer": [
            {
                "answer_argument": "m.0nbx8tv",
                "answer_type": "Entity",
                "entity_name": "John Walsh"
            }
        ],
        "s_expression": "(ARGMAX (JOIN (R government.government_position_held.office_holder) (AND (JOIN (R government.political_district.representatives) m.050l8) (JOIN government.government_position_held.office_position_or_title m.02_7l8y))) (JOIN (R government.government_position_held.office_holder) government.government_position_held.from))",
        "s_expression_processed": "(ARGMAX (JOIN (R government.government_position_held.office_holder) (CONS (JOIN (R government.political_district.representatives) m.050l8) government.government_position_held.office_position_or_title m.02_7l8y)) (JOIN (R government.government_position_held.office_holder) government.government_position_held.from))"
    },
    {
        "qid": "WebQTrn-246",
        "question": "what are the three major rivers in south america",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "geography.river",
                    "class": "geography.river",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06n3y",
                    "class": "common.topic",
                    "friendly_name": "south america",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.contains"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "geography.river.discharge"
                }
            ]
        },
        "function": "argmax",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06n3y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06n3y ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01xs05k .\n?x ns:geography.river.discharge ?sk0 .\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 3\n",
        "topic_entity": "m.06n3y",
        "answer": [
            {
                "answer_argument": "m.01tl45",
                "answer_type": "Entity",
                "entity_name": "Rio Negro"
            },
            {
                "answer_argument": "m.0lzjs",
                "answer_type": "Entity",
                "entity_name": "Orinoco"
            },
            {
                "answer_argument": "m.0sd7",
                "answer_type": "Entity",
                "entity_name": "Amazon River"
            }
        ],
        "s_expression": "(ARGMAX (AND geography.river (JOIN (R location.location.contains) m.06n3y)) geography.river.discharge)",
        "s_expression_processed": "(ARGMAX (AND geography.river (JOIN (R location.location.contains) m.06n3y)) geography.river.discharge)"
    },
    {
        "qid": "WebQTrn-249",
        "question": "who is tia and tamera mowry parents",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.054xvs",
                    "class": "common.topic",
                    "friendly_name": "tia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.parents"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054xvs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054xvs ns:people.person.parents ?x .\n}\n",
        "topic_entity": "m.054xvs",
        "answer": [
            {
                "answer_argument": "m.0b_x1n8",
                "answer_type": "Entity",
                "entity_name": "Darlene Mowry"
            },
            {
                "answer_argument": "m.0gygc8m",
                "answer_type": "Entity",
                "entity_name": "Tim Mowry"
            }
        ],
        "s_expression": "(JOIN (R people.person.parents) m.054xvs)",
        "s_expression_processed": "(JOIN (R people.person.parents) m.054xvs)"
    },
    {
        "qid": "WebQTrn-295",
        "question": "who was liz taylor married too",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bmh4",
                    "class": "common.topic",
                    "friendly_name": "liz taylor",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bmh4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bmh4 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "topic_entity": "m.0bmh4",
        "answer": [
            {
                "answer_argument": "m.01tj5w5",
                "answer_type": "Entity",
                "entity_name": "Eddie Fisher"
            },
            {
                "answer_argument": "m.01w8b5",
                "answer_type": "Entity",
                "entity_name": "John Warner"
            },
            {
                "answer_argument": "m.02h__m",
                "answer_type": "Entity",
                "entity_name": "Michael Wilding"
            },
            {
                "answer_argument": "m.02j06h",
                "answer_type": "Entity",
                "entity_name": "Conrad Hilton, Jr."
            },
            {
                "answer_argument": "m.063v2l",
                "answer_type": "Entity",
                "entity_name": "Mike Todd"
            },
            {
                "answer_argument": "m.0bhgvg",
                "answer_type": "Entity",
                "entity_name": "Larry Fortensky"
            },
            {
                "answer_argument": "m.0cg9f",
                "answer_type": "Entity",
                "entity_name": "Richard Burton"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (AND (JOIN (R people.person.spouse_s) m.0bmh4) (JOIN people.marriage.type_of_union m.04ztj)))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (CONS (JOIN (R people.person.spouse_s) m.0bmh4) people.marriage.type_of_union m.04ztj))"
    },
    {
        "qid": "WebQTrn-437",
        "question": "where was greenpeace an international environmental organization founded",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.036qv",
                    "class": "common.topic",
                    "friendly_name": "greenpeace",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.organization.place_founded"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036qv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036qv ns:organization.organization.place_founded ?x .\n}\n",
        "topic_entity": "m.036qv",
        "answer": [
            {
                "answer_argument": "m.080h2",
                "answer_type": "Entity",
                "entity_name": "Vancouver"
            }
        ],
        "s_expression": "(JOIN (R organization.organization.place_founded) m.036qv)",
        "s_expression_processed": "(JOIN (R organization.organization.place_founded) m.036qv)"
    },
    {
        "qid": "WebQTrn-483",
        "question": "what type of music did richard wagner play",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06c44",
                    "class": "common.topic",
                    "friendly_name": "richard wagner",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.artist.genre"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c44 ns:music.artist.genre ?x .\n}\n",
        "topic_entity": "m.06c44",
        "answer": [
            {
                "answer_argument": "m.05lls",
                "answer_type": "Entity",
                "entity_name": "Opera"
            },
            {
                "answer_argument": "m.06gk7",
                "answer_type": "Entity",
                "entity_name": "Romantic music"
            },
            {
                "answer_argument": "m.0ggq0m",
                "answer_type": "Entity",
                "entity_name": "Classical music"
            }
        ],
        "s_expression": "(JOIN (R music.artist.genre) m.06c44)",
        "s_expression_processed": "(JOIN (R music.artist.genre) m.06c44)"
    },
    {
        "qid": "WebQTrn-563",
        "question": "what did lucille ball die of",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04nw9",
                    "class": "common.topic",
                    "friendly_name": "lucille ball",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.cause_of_death"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04nw9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04nw9 ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "topic_entity": "m.04nw9",
        "answer": [
            {
                "answer_argument": "m.01p3jd",
                "answer_type": "Entity",
                "entity_name": "Aortic dissection"
            }
        ],
        "s_expression": "(JOIN (R people.deceased_person.cause_of_death) m.04nw9)",
        "s_expression_processed": "(JOIN (R people.deceased_person.cause_of_death) m.04nw9)"
    },
    {
        "qid": "WebQTrn-564",
        "question": "what religion was john f kennedy",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d3k14",
                    "class": "common.topic",
                    "friendly_name": "john f kennedy",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.popstra.celebrity.religion"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.popstra.religion_choice.religion"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d3k14)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d3k14 ns:base.popstra.celebrity.religion ?y .\n?y ns:base.popstra.religion_choice.religion ?x .\n}\n",
        "topic_entity": "m.0d3k14",
        "answer": [
            {
                "answer_argument": "m.0c8wxp",
                "answer_type": "Entity",
                "entity_name": "Catholicism"
            }
        ],
        "s_expression": "(JOIN (R base.popstra.religion_choice.religion) (JOIN (R base.popstra.celebrity.religion) m.0d3k14))",
        "s_expression_processed": "(JOIN (R base.popstra.religion_choice.religion) (JOIN (R base.popstra.celebrity.religion) m.0d3k14))"
    },
    {
        "qid": "WebQTrn-566",
        "question": "what style of art does andy warhol do",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0kc6",
                    "class": "common.topic",
                    "friendly_name": "andy warhol",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "visual_art.visual_artist.associated_periods_or_movements"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kc6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kc6 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "topic_entity": "m.0kc6",
        "answer": [
            {
                "answer_argument": "m.015r61",
                "answer_type": "Entity",
                "entity_name": "Modern art"
            },
            {
                "answer_argument": "m.0q4mn",
                "answer_type": "Entity",
                "entity_name": "Pop art"
            }
        ],
        "s_expression": "(JOIN (R visual_art.visual_artist.associated_periods_or_movements) m.0kc6)",
        "s_expression_processed": "(JOIN (R visual_art.visual_artist.associated_periods_or_movements) m.0kc6)"
    },
    {
        "qid": "WebQTrn-764",
        "question": "who was the colts coach in 2011",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03wnh",
                    "class": "common.topic",
                    "friendly_name": "colts",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2011,
                        "american_football.football_historical_coach_position.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "american_football.football_team.historical_coaching_staff"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "american_football.football_historical_coach_position.coach"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03wnh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03wnh ns:american_football.football_team.historical_coaching_staff ?y .\n?y ns:american_football.football_historical_coach_position.coach ?x .\nFILTER(NOT EXISTS {?y ns:american_football.football_historical_coach_position.from ?sk0} || \nEXISTS {?y ns:american_football.football_historical_coach_position.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:american_football.football_historical_coach_position.to ?sk2} || \nEXISTS {?y ns:american_football.football_historical_coach_position.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.03wnh",
        "answer": [
            {
                "answer_argument": "m.0bjdtb",
                "answer_type": "Entity",
                "entity_name": "Jim Caldwell"
            }
        ],
        "s_expression": "(JOIN (R american_football.football_historical_coach_position.coach) (TC (JOIN (R american_football.football_team.historical_coaching_staff) m.03wnh) american_football.football_historical_coach_position.from 2011))",
        "s_expression_processed": "(JOIN (R american_football.football_historical_coach_position.coach) (TC (JOIN (R american_football.football_team.historical_coaching_staff) m.03wnh) american_football.football_historical_coach_position.from 2011))"
    },
    {
        "qid": "WebQTrn-834",
        "question": "what office does hillary clinton hold",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d06m5",
                    "class": "common.topic",
                    "friendly_name": "hillary clinton",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.government2.appointed_official.appointments"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.appointment.appointed_role"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d06m5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d06m5 ns:base.government2.appointed_official.appointments ?y .\n?y ns:people.appointment.appointed_role ?x .\n}\n",
        "topic_entity": "m.0d06m5",
        "answer": [
            {
                "answer_argument": "m.07y07",
                "answer_type": "Entity",
                "entity_name": "United States Secretary of State"
            }
        ],
        "s_expression": "(JOIN (R people.appointment.appointed_role) (JOIN (R base.government2.appointed_official.appointments) m.0d06m5))",
        "s_expression_processed": "(JOIN (R people.appointment.appointed_role) (JOIN (R base.government2.appointed_official.appointments) m.0d06m5))"
    },
    {
        "qid": "WebQTrn-849",
        "question": "which countries do germany border",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.country",
                    "class": "location.country",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0345h",
                    "class": "common.topic",
                    "friendly_name": "germany",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.location.adjoin_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.adjoining_relationship.adjoins"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0345h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0345h ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "topic_entity": "m.0345h",
        "answer": [
            {
                "answer_argument": "m.0154j",
                "answer_type": "Entity",
                "entity_name": "Belgium"
            },
            {
                "answer_argument": "m.01mjq",
                "answer_type": "Entity",
                "entity_name": "Czech Republic"
            },
            {
                "answer_argument": "m.04g61",
                "answer_type": "Entity",
                "entity_name": "Luxembourg"
            },
            {
                "answer_argument": "m.059j2",
                "answer_type": "Entity",
                "entity_name": "Netherlands"
            },
            {
                "answer_argument": "m.05qhw",
                "answer_type": "Entity",
                "entity_name": "Poland"
            },
            {
                "answer_argument": "m.06mzp",
                "answer_type": "Entity",
                "entity_name": "Switzerland"
            },
            {
                "answer_argument": "m.0f8l9c",
                "answer_type": "Entity",
                "entity_name": "France"
            },
            {
                "answer_argument": "m.0h7x",
                "answer_type": "Entity",
                "entity_name": "Austria"
            },
            {
                "answer_argument": "m.0k6nt",
                "answer_type": "Entity",
                "entity_name": "Denmark"
            }
        ],
        "s_expression": "(AND location.country (JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.0345h)))",
        "s_expression_processed": "(AND location.country (JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.0345h)))"
    },
    {
        "qid": "WebQTrn-882",
        "question": "what language do u speak in egypt",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02k54",
                    "class": "common.topic",
                    "friendly_name": "egypt",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.official_language"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.official_language ?x .\n}\n",
        "topic_entity": "m.02k54",
        "answer": [
            {
                "answer_argument": "m.025rvv7",
                "answer_type": "Entity",
                "entity_name": "Modern Standard Arabic"
            }
        ],
        "s_expression": "(JOIN (R location.country.official_language) m.02k54)",
        "s_expression_processed": "(JOIN (R location.country.official_language) m.02k54)"
    },
    {
        "qid": "WebQTrn-889",
        "question": "who play luke skywalker",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0f1bg",
                    "class": "common.topic",
                    "friendly_name": "luke skywalker",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film_character.portrayed_in_films"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f1bg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f1bg ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "topic_entity": "m.0f1bg",
        "answer": [
            {
                "answer_argument": "m.0154d7",
                "answer_type": "Entity",
                "entity_name": "Mark Hamill"
            },
            {
                "answer_argument": "m.07l4yc",
                "answer_type": "Entity",
                "entity_name": "Bob Bergen"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (JOIN (R film.film_character.portrayed_in_films) m.0f1bg))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (JOIN (R film.film_character.portrayed_in_films) m.0f1bg))"
    },
    {
        "qid": "WebQTrn-1117",
        "question": "where did sergio romo go to college",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04cyz8g",
                    "class": "common.topic",
                    "friendly_name": "sergio romo",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04cyz8g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04cyz8g ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.04cyz8g",
        "answer": [
            {
                "answer_argument": "m.02hscq",
                "answer_type": "Entity",
                "entity_name": "University of North Alabama"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.04cyz8g)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.04cyz8g)))"
    },
    {
        "qid": "WebQTrn-1209",
        "question": "what is the parliament of canada called",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d060g",
                    "class": "common.topic",
                    "friendly_name": "canada",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.governmental_body"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.governmental_body ?x .\n}\n",
        "topic_entity": "m.0d060g",
        "answer": [
            {
                "answer_argument": "m.031jlf",
                "answer_type": "Entity",
                "entity_name": "Legislative Assembly of the Northwest Territories"
            },
            {
                "answer_argument": "m.0h6dy",
                "answer_type": "Entity",
                "entity_name": "House of Commons of Canada"
            },
            {
                "answer_argument": "m.0l_j_",
                "answer_type": "Entity",
                "entity_name": "Parliament of Canada"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.governmental_body) (JOIN (R government.governmental_jurisdiction.governing_officials) m.0d060g))",
        "s_expression_processed": "(JOIN (R government.government_position_held.governmental_body) (JOIN (R government.governmental_jurisdiction.governing_officials) m.0d060g))"
    },
    {
        "qid": "WebQTrn-1304",
        "question": "what did bruce jenner win gold for",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03bbdn",
                    "class": "common.topic",
                    "friendly_name": "bruce jenner",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02lpp7",
                    "class": "common.topic",
                    "friendly_name": "Gold",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "olympics.olympic_athlete.medals_won"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "olympics.olympic_medal_honor.event"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "olympics.olympic_medal_honor.medal"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bbdn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bbdn ns:olympics.olympic_athlete.medals_won ?y .\n?y ns:olympics.olympic_medal_honor.event ?x .\n?y ns:olympics.olympic_medal_honor.medal ns:m.02lpp7 .\n}\n",
        "topic_entity": "m.03bbdn",
        "answer": [
            {
                "answer_argument": "m.07ygntp",
                "answer_type": "Entity",
                "entity_name": "Athletics at the 1976 Summer Olympics - Men's Decathlon"
            }
        ],
        "s_expression": "(JOIN (R olympics.olympic_medal_honor.event) (AND (JOIN (R olympics.olympic_athlete.medals_won) m.03bbdn) (JOIN olympics.olympic_medal_honor.medal m.02lpp7)))",
        "s_expression_processed": "(JOIN (R olympics.olympic_medal_honor.event) (AND (JOIN (R olympics.olympic_athlete.medals_won) m.03bbdn) (JOIN olympics.olympic_medal_honor.medal m.02lpp7)))"
    },
    {
        "qid": "WebQTrn-1404",
        "question": "who plays jackson gibbs on ncis",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03m8sg",
                    "class": "common.topic",
                    "friendly_name": "ncis",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0h5jyc6",
                    "class": "common.topic",
                    "friendly_name": "Jackson Gibbs",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_program.regular_cast"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "tv.regular_tv_appearance.character"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03m8sg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03m8sg ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.0h5jyc6 .\n}\n",
        "topic_entity": "m.03m8sg",
        "answer": [
            {
                "answer_argument": "m.06nzp7",
                "answer_type": "Entity",
                "entity_name": "Ralph Waite"
            }
        ],
        "s_expression": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_program.regular_cast) m.03m8sg) (JOIN tv.regular_tv_appearance.character m.0h5jyc6)))",
        "s_expression_processed": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_program.regular_cast) m.03m8sg) (JOIN tv.regular_tv_appearance.character m.0h5jyc6)))"
    },
    {
        "qid": "WebQTrn-1411",
        "question": "where did harry truman die",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09bg4l",
                    "class": "common.topic",
                    "friendly_name": "harry truman",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.place_of_death"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09bg4l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09bg4l ns:people.deceased_person.place_of_death ?x .\n}\n",
        "topic_entity": "m.09bg4l",
        "answer": [
            {
                "answer_argument": "m.04f_d",
                "answer_type": "Entity",
                "entity_name": "Kansas City"
            }
        ],
        "s_expression": "(JOIN (R people.deceased_person.place_of_death) m.09bg4l)",
        "s_expression_processed": "(JOIN (R people.deceased_person.place_of_death) m.09bg4l)"
    },
    {
        "qid": "WebQTrn-1463",
        "question": "what currency do i need in egypt",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02k54",
                    "class": "common.topic",
                    "friendly_name": "egypt",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k54)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k54 ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.02k54",
        "answer": [
            {
                "answer_argument": "m.04phzg",
                "answer_type": "Entity",
                "entity_name": "Egyptian pound"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.02k54)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.02k54)"
    },
    {
        "qid": "WebQTrn-1487",
        "question": "where did the columbia river begin",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01n86",
                    "class": "common.topic",
                    "friendly_name": "columbia river",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "geography.river.origin"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n86 ns:geography.river.origin ?x .\n}\n",
        "topic_entity": "m.01n86",
        "answer": [
            {
                "answer_argument": "m.02r8kvz",
                "answer_type": "Entity",
                "entity_name": "Columbia Lake"
            }
        ],
        "s_expression": "(JOIN (R geography.river.origin) m.01n86)",
        "s_expression_processed": "(JOIN (R geography.river.origin) m.01n86)"
    },
    {
        "qid": "WebQTrn-1629",
        "question": "who the voice of jack skellington",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.042zz0",
                    "class": "common.topic",
                    "friendly_name": "jack skellington",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02nsjvf",
                    "class": "common.topic",
                    "friendly_name": "Voice",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film_character.portrayed_in_films"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.special_performance_type"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.042zz0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.042zz0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "topic_entity": "m.042zz0",
        "answer": [
            {
                "answer_argument": "m.021b5",
                "answer_type": "Entity",
                "entity_name": "Chris Sarandon"
            },
            {
                "answer_argument": "m.02bh9",
                "answer_type": "Entity",
                "entity_name": "Danny Elfman"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film_character.portrayed_in_films) m.042zz0) (JOIN film.performance.special_performance_type m.02nsjvf)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (CONS (JOIN (R film.film_character.portrayed_in_films) m.042zz0) film.performance.special_performance_type m.02nsjvf))"
    },
    {
        "qid": "WebQTrn-1672",
        "question": "what is the state symbols of colorado",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01n4w",
                    "class": "common.topic",
                    "friendly_name": "colorado",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.official_symbols"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location_symbol_relationship.symbol"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n4w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n4w ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n}\n",
        "topic_entity": "m.01n4w",
        "answer": [
            {
                "answer_argument": "m.01bcrt",
                "answer_type": "Entity",
                "entity_name": "Stegosaurus"
            },
            {
                "answer_argument": "m.02jkkg",
                "answer_type": "Entity",
                "entity_name": "Lark bunting"
            },
            {
                "answer_argument": "m.04gwdl",
                "answer_type": "Entity",
                "entity_name": "Painted turtle"
            },
            {
                "answer_argument": "m.0583c6",
                "answer_type": "Entity",
                "entity_name": "Blue spruce"
            },
            {
                "answer_argument": "m.067bnc",
                "answer_type": "Entity",
                "entity_name": "Yule Marble"
            },
            {
                "answer_argument": "m.069d4f",
                "answer_type": "Entity",
                "entity_name": "Aquilegia caerulea"
            },
            {
                "answer_argument": "m.07dzvh",
                "answer_type": "Entity",
                "entity_name": "Nil sine numine"
            },
            {
                "answer_argument": "m.0dvt08",
                "answer_type": "Entity",
                "entity_name": "Greenback cutthroat trout"
            }
        ],
        "s_expression": "(JOIN (R location.location_symbol_relationship.symbol) (JOIN (R government.governmental_jurisdiction.official_symbols) m.01n4w))",
        "s_expression_processed": "(JOIN (R location.location_symbol_relationship.symbol) (JOIN (R government.governmental_jurisdiction.official_symbols) m.01n4w))"
    },
    {
        "qid": "WebQTrn-2045",
        "question": "who won american idol 2006 season 5",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09zcyj",
                    "class": "common.topic",
                    "friendly_name": "american idol 2006",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "award.competition.winner"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09zcyj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09zcyj ns:award.competition.winner ?x .\n}\n",
        "topic_entity": "m.09zcyj",
        "answer": [
            {
                "answer_argument": "m.0bhslx",
                "answer_type": "Entity",
                "entity_name": "Taylor Hicks"
            }
        ],
        "s_expression": "(JOIN (R award.competition.winner) m.09zcyj)",
        "s_expression_processed": "(JOIN (R award.competition.winner) m.09zcyj)"
    },
    {
        "qid": "WebQTrn-2314",
        "question": "what currency do you use in costa rica",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01p8s",
                    "class": "common.topic",
                    "friendly_name": "costa rica",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p8s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p8s ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.01p8s",
        "answer": [
            {
                "answer_argument": "m.04wccn",
                "answer_type": "Entity",
                "entity_name": "Costa Rican colón"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.01p8s)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.01p8s)"
    },
    {
        "qid": "WebQTrn-2457",
        "question": "where did henry hudson come from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0c065",
                    "class": "common.topic",
                    "friendly_name": "henry hudson",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.place_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c065)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c065 ns:people.person.place_of_birth ?x .\n}\n",
        "topic_entity": "m.0c065",
        "answer": [
            {
                "answer_argument": "m.02jx1",
                "answer_type": "Entity",
                "entity_name": "England"
            }
        ],
        "s_expression": "(JOIN (R people.person.place_of_birth) m.0c065)",
        "s_expression_processed": "(JOIN (R people.person.place_of_birth) m.0c065)"
    },
    {
        "qid": "WebQTrn-2493",
        "question": "who was rosemary clooney married to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0h8hk",
                    "class": "common.topic",
                    "friendly_name": "rosemary clooney",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h8hk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h8hk ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "topic_entity": "m.0h8hk",
        "answer": [
            {
                "answer_argument": "m.0gdkdhv",
                "answer_type": "Entity",
                "entity_name": "Dante DiPaolo"
            },
            {
                "answer_argument": "m.0sxqg",
                "answer_type": "Entity",
                "entity_name": "José Ferrer"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (AND (JOIN (R people.person.spouse_s) m.0h8hk) (JOIN people.marriage.type_of_union m.04ztj)))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (CONS (JOIN (R people.person.spouse_s) m.0h8hk) people.marriage.type_of_union m.04ztj))"
    },
    {
        "qid": "WebQTrn-2561",
        "question": "what are some of the awards taylor swift has won",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0dl567",
                    "class": "common.topic",
                    "friendly_name": "taylor swift",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "award.award_winner.awards_won"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "award.award_honor.award"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dl567)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dl567 ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n}\n",
        "topic_entity": "m.0dl567",
        "answer": [
            {
                "answer_argument": "m.0_vmfsz",
                "answer_type": "Entity",
                "entity_name": "Radio Disney Music Award for Best Musical Collaboration"
            },
            {
                "answer_argument": "m.011lffxx",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Award for Choice Music - Country Song"
            },
            {
                "answer_argument": "m.01by1l",
                "answer_type": "Entity",
                "entity_name": "Grammy Award for Album of the Year"
            },
            {
                "answer_argument": "m.01c9f2",
                "answer_type": "Entity",
                "entity_name": "Grammy Award for Best Country Album"
            },
            {
                "answer_argument": "m.01dk00",
                "answer_type": "Entity",
                "entity_name": "Grammy Award for Best Country Song"
            },
            {
                "answer_argument": "m.025m8l",
                "answer_type": "Entity",
                "entity_name": "Grammy Award for Best Song Written for Visual Media"
            },
            {
                "answer_argument": "m.026m9w",
                "answer_type": "Entity",
                "entity_name": "Grammy Award for Best Female Country Vocal Performance"
            },
            {
                "answer_argument": "m.02f6ym",
                "answer_type": "Entity",
                "entity_name": "MTV Video Music Award for Best Female Video"
            },
            {
                "answer_argument": "m.04dxjjz",
                "answer_type": "Entity",
                "entity_name": "Billboard Music Award for Top Billboard 200 Artist"
            },
            {
                "answer_argument": "m.04dy0sf",
                "answer_type": "Entity",
                "entity_name": "People's Choice Award for Favorite Female Artist"
            },
            {
                "answer_argument": "m.04fnq6m",
                "answer_type": "Entity",
                "entity_name": "Country Music Association Horizon Award"
            },
            {
                "answer_argument": "m.04fnq79",
                "answer_type": "Entity",
                "entity_name": "Country Music Association Award for Female Vocalist of the Year"
            },
            {
                "answer_argument": "m.05kfv8x",
                "answer_type": "Entity",
                "entity_name": "Academy of Country Music Award for Album of the Year"
            },
            {
                "answer_argument": "m.05kfvnc",
                "answer_type": "Entity",
                "entity_name": "Academy of Country Music Award for Entertainer of the Year"
            },
            {
                "answer_argument": "m.05kfvsx",
                "answer_type": "Entity",
                "entity_name": "Academy of Country Music Award for New Female Vocalist of the Year"
            },
            {
                "answer_argument": "m.07_506c",
                "answer_type": "Entity",
                "entity_name": "MTV Europe Music Award for Best Female"
            },
            {
                "answer_argument": "m.07_52dv",
                "answer_type": "Entity",
                "entity_name": "MTV Europe Music Award for Best Live Act"
            },
            {
                "answer_argument": "m.08clnvk",
                "answer_type": "Entity",
                "entity_name": "Academy of Country Music Award for Video of the Year"
            },
            {
                "answer_argument": "m.09qd02_",
                "answer_type": "Entity",
                "entity_name": "Billboard Music Award for Top Artist"
            },
            {
                "answer_argument": "m.0cjw69",
                "answer_type": "Entity",
                "entity_name": "American Music Award for Favorite Pop/Rock Female Artist"
            },
            {
                "answer_argument": "m.0ckh35",
                "answer_type": "Entity",
                "entity_name": "American Music Award for Favorite Country Female Artist"
            },
            {
                "answer_argument": "m.0ckh7c",
                "answer_type": "Entity",
                "entity_name": "American Music Award for Favorite Adult Contemporary Artist"
            },
            {
                "answer_argument": "m.0f4w04",
                "answer_type": "Entity",
                "entity_name": "American Music Award for Favorite Country Album"
            },
            {
                "answer_argument": "m.0gj6x00",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Award for Choice Movie Breakout Star - Female"
            },
            {
                "answer_argument": "m.0gky9c6",
                "answer_type": "Entity",
                "entity_name": "Grammy Award for Best Country Solo Performance"
            },
            {
                "answer_argument": "m.0hj9kq4",
                "answer_type": "Entity",
                "entity_name": "People's Choice Award for Favorite Country Artist"
            },
            {
                "answer_argument": "m.0j8y__n",
                "answer_type": "Entity",
                "entity_name": "Billboard Music Award for Top Country Artist"
            },
            {
                "answer_argument": "m.0j8ythh",
                "answer_type": "Entity",
                "entity_name": "Billboard Music Award for Top Female Artist"
            },
            {
                "answer_argument": "m.0j8yxq6",
                "answer_type": "Entity",
                "entity_name": "Billboard Music Award for Top Digital Songs Artist"
            },
            {
                "answer_argument": "m.0j8z2r3",
                "answer_type": "Entity",
                "entity_name": "Billboard Music Award for Top Billboard 200 Album"
            },
            {
                "answer_argument": "m.0j8zcw2",
                "answer_type": "Entity",
                "entity_name": "Billboard Music Award for Top Country Album"
            },
            {
                "answer_argument": "m.0j912gy",
                "answer_type": "Entity",
                "entity_name": "Billboard Music Award for Top Country Song"
            },
            {
                "answer_argument": "m.0k0811w",
                "answer_type": "Entity",
                "entity_name": "Country Music Association Award for Album of the Year"
            },
            {
                "answer_argument": "m.0k081n1",
                "answer_type": "Entity",
                "entity_name": "Country Music Association Award for Musical Event of the Year"
            },
            {
                "answer_argument": "m.0k081qv",
                "answer_type": "Entity",
                "entity_name": "Country Music Association Award for Music Video of the Year"
            },
            {
                "answer_argument": "m.0n57zzs",
                "answer_type": "Entity",
                "entity_name": "American Music Award for Artist of the Year"
            },
            {
                "answer_argument": "m.0n9z4f7",
                "answer_type": "Entity",
                "entity_name": "Country Music Association Award for Entertainer of the Year"
            },
            {
                "answer_argument": "m.0nh4rr_",
                "answer_type": "Entity",
                "entity_name": "Kids' Choice Award for Favorite Female Singer"
            },
            {
                "answer_argument": "m.0sgkrty",
                "answer_type": "Entity",
                "entity_name": "Kids' Choice Award for Favorite Song"
            },
            {
                "answer_argument": "m.0sgkvz4",
                "answer_type": "Entity",
                "entity_name": "Kids’ Choice Big Help Award"
            },
            {
                "answer_argument": "m.0whp1hc",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Award for Choice Music - Female Country Artist"
            },
            {
                "answer_argument": "m.0whp2_z",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Award for Choice Music - Female Artist"
            },
            {
                "answer_argument": "m.0whp5hq",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Award for Choice Break-Up Song"
            },
            {
                "answer_argument": "m.0whp9zh",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Award for Choice Single: Female Artist"
            },
            {
                "answer_argument": "m.0wzyn4z",
                "answer_type": "Entity",
                "entity_name": "MTV Europe Music Award for Best Look"
            },
            {
                "answer_argument": "m.0y4ppv1",
                "answer_type": "Entity",
                "entity_name": "Radio Disney Music Award for Best Breakup Song"
            },
            {
                "answer_argument": "m.0y4r26d",
                "answer_type": "Entity",
                "entity_name": "Radio Disney Music Award for Song of the Year"
            },
            {
                "answer_argument": "m.0y554rz",
                "answer_type": "Entity",
                "entity_name": "Young Hollywood Award for Superstar of Tomorrow"
            },
            {
                "answer_argument": "m.0y87xxx",
                "answer_type": "Entity",
                "entity_name": "YouTube Music Awards YouTube Phenomenon"
            },
            {
                "answer_argument": "m.0yqdf3d",
                "answer_type": "Entity",
                "entity_name": "Glamour Award for International Solo Artist"
            },
            {
                "answer_argument": "m.0yszmsf",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Award for Choice Movie: Voice"
            },
            {
                "answer_argument": "m.0yszn3z",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Special Award — Ultimate Choice Award"
            },
            {
                "answer_argument": "m.0yt47m8",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Award for Choice Red Carpet Fashion Icon Female"
            },
            {
                "answer_argument": "m.0yt7tc6",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Award for Choice Music: Breakout Artist"
            },
            {
                "answer_argument": "m.0ytbnfc",
                "answer_type": "Entity",
                "entity_name": "Teen Choice Award for Choice Music: Album Country"
            },
            {
                "answer_argument": "m.0yvqhv_",
                "answer_type": "Entity",
                "entity_name": "Country Music Association Pinnacle Award"
            },
            {
                "answer_argument": "m.0zmx3ly",
                "answer_type": "Entity",
                "entity_name": "Billboard Music Award for Woman of the Year"
            }
        ],
        "s_expression": "(JOIN (R award.award_honor.award) (JOIN (R award.award_winner.awards_won) m.0dl567))",
        "s_expression_processed": "(JOIN (R award.award_honor.award) (JOIN (R award.award_winner.awards_won) m.0dl567))"
    },
    {
        "qid": "WebQTrn-2590",
        "question": "what instrument does ringo starr play",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01vrnsk",
                    "class": "common.topic",
                    "friendly_name": "ringo starr",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.group_member.instruments_played"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vrnsk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vrnsk ns:music.group_member.instruments_played ?x .\n}\n",
        "topic_entity": "m.01vrnsk",
        "answer": [
            {
                "answer_argument": "m.013y1f",
                "answer_type": "Entity",
                "entity_name": "Organ"
            },
            {
                "answer_argument": "m.01wy6",
                "answer_type": "Entity",
                "entity_name": "Clarinet"
            },
            {
                "answer_argument": "m.026t6",
                "answer_type": "Entity",
                "entity_name": "Drums"
            },
            {
                "answer_argument": "m.02fsn",
                "answer_type": "Entity",
                "entity_name": "Double bass"
            },
            {
                "answer_argument": "m.02hnl",
                "answer_type": "Entity",
                "entity_name": "Drums"
            },
            {
                "answer_argument": "m.0342h",
                "answer_type": "Entity",
                "entity_name": "Guitar"
            },
            {
                "answer_argument": "m.03qjg",
                "answer_type": "Entity",
                "entity_name": "Harmonica"
            },
            {
                "answer_argument": "m.04rzd",
                "answer_type": "Entity",
                "entity_name": "Mandolin"
            },
            {
                "answer_argument": "m.05148p4",
                "answer_type": "Entity",
                "entity_name": "Keyboard"
            },
            {
                "answer_argument": "m.05r5c",
                "answer_type": "Entity",
                "entity_name": "Piano"
            },
            {
                "answer_argument": "m.06ncr",
                "answer_type": "Entity",
                "entity_name": "Saxophone"
            },
            {
                "answer_argument": "m.07m2y",
                "answer_type": "Entity",
                "entity_name": "Tuba"
            },
            {
                "answer_argument": "m.0l14j_",
                "answer_type": "Entity",
                "entity_name": "Flute"
            },
            {
                "answer_argument": "m.0l14md",
                "answer_type": "Entity",
                "entity_name": "Percussion"
            }
        ],
        "s_expression": "(JOIN (R music.group_member.instruments_played) m.01vrnsk)",
        "s_expression_processed": "(JOIN (R music.group_member.instruments_played) m.01vrnsk)"
    },
    {
        "qid": "WebQTrn-2649",
        "question": "where is alex smith from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05dfhp",
                    "class": "common.topic",
                    "friendly_name": "alex smith",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.place_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05dfhp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05dfhp ns:people.person.place_of_birth ?x .\n}\n",
        "topic_entity": "m.05dfhp",
        "answer": [
            {
                "answer_argument": "m.010rvx",
                "answer_type": "Entity",
                "entity_name": "Bremerton"
            }
        ],
        "s_expression": "(JOIN (R people.person.place_of_birth) m.05dfhp)",
        "s_expression_processed": "(JOIN (R people.person.place_of_birth) m.05dfhp)"
    },
    {
        "qid": "WebQTrn-2803",
        "question": "when was reagan inaugurated",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06c0j",
                    "class": "common.topic",
                    "friendly_name": "reagan",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.inaugurations.inauguration_speaker.inauguration"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c0j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c0j ns:base.inaugurations.inauguration_speaker.inauguration ?x .\n}\n",
        "topic_entity": "m.06c0j",
        "answer": [
            {
                "answer_argument": "m.05bry73",
                "answer_type": "Entity",
                "entity_name": "Ronald Reagan 1981 presidential inauguration"
            },
            {
                "answer_argument": "m.05bryb8",
                "answer_type": "Entity",
                "entity_name": "Ronald Reagan 1985 presidential inauguration"
            }
        ],
        "s_expression": "(JOIN (R base.inaugurations.inauguration_speaker.inauguration) m.06c0j)",
        "s_expression_processed": "(JOIN (R base.inaugurations.inauguration_speaker.inauguration) m.06c0j)"
    },
    {
        "qid": "WebQTrn-2948",
        "question": "who played princess leia in star wars movies",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0ddqw",
                    "class": "common.topic",
                    "friendly_name": "princess leia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film_character.portrayed_in_films"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddqw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddqw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "topic_entity": "m.0ddqw",
        "answer": [
            {
                "answer_argument": "m.01tnbn",
                "answer_type": "Entity",
                "entity_name": "Carrie Fisher"
            },
            {
                "answer_argument": "m.01wm357",
                "answer_type": "Entity",
                "entity_name": "Eden Espinosa"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (JOIN (R film.film_character.portrayed_in_films) m.0ddqw))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (JOIN (R film.film_character.portrayed_in_films) m.0ddqw))"
    },
    {
        "qid": "WebQTrn-3004",
        "question": "who did the voice of kitt in knight rider",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0bvxv",
                    "class": "common.topic",
                    "friendly_name": "knight rider",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.05_bhx",
                    "class": "common.topic",
                    "friendly_name": "KITT",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 4,
                    "node_type": "entity",
                    "id": "m.02nsjvf",
                    "class": "common.topic",
                    "friendly_name": "Voice",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_program.regular_cast"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "tv.regular_tv_appearance.character"
                },
                {
                    "start": 1,
                    "end": 4,
                    "relation": "tv.regular_tv_appearance.special_performance_type"
                }
            ]
        },
        "function": "none",
        "num_node": 5,
        "num_edge": 4,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0bvxv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0bvxv ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.05_bhx .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n}\n",
        "topic_entity": "m.0bvxv",
        "answer": [
            {
                "answer_argument": "m.0309r1",
                "answer_type": "Entity",
                "entity_name": "William Daniels"
            }
        ],
        "s_expression": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_program.regular_cast) m.0bvxv) (AND (JOIN tv.regular_tv_appearance.character m.05_bhx) (JOIN tv.regular_tv_appearance.special_performance_type m.02nsjvf))))",
        "s_expression_processed": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_program.regular_cast) m.0bvxv) (CONS (JOIN tv.regular_tv_appearance.character m.05_bhx) tv.regular_tv_appearance.special_performance_type m.02nsjvf)))"
    },
    {
        "qid": "WebQTrn-3143",
        "question": "who owns audi 2011",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0k50",
                    "class": "common.topic",
                    "friendly_name": "audi",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "organization.organization.parent"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.organization_relationship.parent"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k50)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k50 ns:organization.organization.parent ?y .\n?y ns:organization.organization_relationship.parent ?x .\n}\n",
        "topic_entity": "m.0k50",
        "answer": [
            {
                "answer_argument": "m.07_zt",
                "answer_type": "Entity",
                "entity_name": "Volkswagen Group"
            }
        ],
        "s_expression": "(JOIN (R organization.organization_relationship.parent) (JOIN (R organization.organization.parent) m.0k50))",
        "s_expression_processed": "(JOIN (R organization.organization_relationship.parent) (JOIN (R organization.organization.parent) m.0k50))"
    },
    {
        "qid": "WebQTrn-3155",
        "question": "what state is barack obama senator for",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02mjmr",
                    "class": "common.topic",
                    "friendly_name": "barack obama",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02_7l8y",
                    "class": "common.topic",
                    "friendly_name": "United States Senator",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.politician.government_positions_held"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.district_represented"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.office_position_or_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.district_represented ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.02_7l8y .\n}\n",
        "topic_entity": "m.02mjmr",
        "answer": [
            {
                "answer_argument": "m.03v0t",
                "answer_type": "Entity",
                "entity_name": "Illinois"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.district_represented) (AND (JOIN (R government.politician.government_positions_held) m.02mjmr) (JOIN government.government_position_held.office_position_or_title m.02_7l8y)))",
        "s_expression_processed": "(JOIN (R government.government_position_held.district_represented) (CONS (JOIN (R government.politician.government_positions_held) m.02mjmr) government.government_position_held.office_position_or_title m.02_7l8y))"
    },
    {
        "qid": "WebQTrn-3158",
        "question": "what boudicca do",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01fz6",
                    "class": "common.topic",
                    "friendly_name": "boudicca",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "common.topic.notable_types"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fz6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fz6 ns:common.topic.notable_types ?x .\n}\n",
        "topic_entity": "m.01fz6",
        "answer": [
            {
                "answer_argument": "m.02h77nv",
                "answer_type": "Entity",
                "entity_name": "Military Commander"
            }
        ],
        "s_expression": "(JOIN (R common.topic.notable_types) m.01fz6)",
        "s_expression_processed": "(JOIN (R common.topic.notable_types) m.01fz6)"
    },
    {
        "qid": "WebQTrn-3232",
        "question": "who was the first actor to play edward quartermaine",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.026plrr",
                    "class": "common.topic",
                    "friendly_name": "edward quartermaine",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_character.appeared_in_tv_program"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "tv.regular_tv_appearance.from"
                }
            ]
        },
        "function": "argmin",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026plrr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026plrr ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "topic_entity": "m.026plrr",
        "answer": [
            {
                "answer_argument": "m.0c_996",
                "answer_type": "Entity",
                "entity_name": "David Lewis"
            }
        ],
        "s_expression": "(ARGMIN (JOIN (R tv.regular_tv_appearance.actor) (JOIN (R tv.tv_character.appeared_in_tv_program) m.026plrr)) (JOIN (R tv.regular_tv_appearance.actor) tv.regular_tv_appearance.from))",
        "s_expression_processed": "(ARGMIN (JOIN (R tv.regular_tv_appearance.actor) (JOIN (R tv.tv_character.appeared_in_tv_program) m.026plrr)) (JOIN (R tv.regular_tv_appearance.actor) tv.regular_tv_appearance.from))"
    },
    {
        "qid": "WebQTrn-3255",
        "question": "where is pyramids located in egypt",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03jmj1",
                    "class": "common.topic",
                    "friendly_name": "pyramids",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03jmj1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03jmj1 ns:location.location.containedby ?x .\n}\n",
        "topic_entity": "m.03jmj1",
        "answer": [
            {
                "answer_argument": "m.02k54",
                "answer_type": "Entity",
                "entity_name": "Egypt"
            }
        ],
        "s_expression": "(JOIN (R location.location.containedby) m.03jmj1)",
        "s_expression_processed": "(JOIN (R location.location.containedby) m.03jmj1)"
    },
    {
        "qid": "WebQTrn-3294",
        "question": "who does sonny bill williams play for 2012",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07_658",
                    "class": "common.topic",
                    "friendly_name": "sonny bill williams",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2012,
                        "sports.sports_team_roster.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_658)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_658 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.07_658",
        "answer": [
            {
                "answer_argument": "m.02_8_7",
                "answer_type": "Entity",
                "entity_name": "Chiefs"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.07_658) sports.sports_team_roster.from 2012))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.07_658) sports.sports_team_roster.from 2012))"
    },
    {
        "qid": "WebQTrn-3339",
        "question": "who plays lola bunny on the looney tunes show",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0534r8",
                    "class": "common.topic",
                    "friendly_name": "lola bunny",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04j2p8f",
                    "class": "common.topic",
                    "friendly_name": "looney tunes show",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film_character.portrayed_in_films"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0534r8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0534r8 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.04j2p8f .\n}\n",
        "topic_entity": "m.0534r8",
        "answer": [
            {
                "answer_argument": "m.0fm5ld",
                "answer_type": "Entity",
                "entity_name": "Britt McKillip"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film_character.portrayed_in_films) m.0534r8) (JOIN film.performance.film m.04j2p8f)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film_character.portrayed_in_films) m.0534r8) (JOIN film.performance.film m.04j2p8f)))"
    },
    {
        "qid": "WebQTrn-3407",
        "question": "what are the mountains in peru called",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "geography.mountain_range",
                    "class": "geography.mountain_range",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.016wzw",
                    "class": "common.topic",
                    "friendly_name": "peru",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.location.partiallycontains"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.partial_containment_relationship.partially_contains"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016wzw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016wzw ns:location.location.partiallycontains ?y .\n?y ns:location.partial_containment_relationship.partially_contains ?x .\n?x ns:common.topic.notable_types ns:m.01xs039 .\n}\n",
        "topic_entity": "m.016wzw",
        "answer": [
            {
                "answer_argument": "m.0p2n",
                "answer_type": "Entity",
                "entity_name": "Andes"
            }
        ],
        "s_expression": "(AND geography.mountain_range (JOIN (R location.partial_containment_relationship.partially_contains) (JOIN (R location.location.partiallycontains) m.016wzw)))",
        "s_expression_processed": "(AND geography.mountain_range (JOIN (R location.partial_containment_relationship.partially_contains) (JOIN (R location.location.partiallycontains) m.016wzw)))"
    },
    {
        "qid": "WebQTrn-3502",
        "question": "what is the capital of oregon",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05kj_",
                    "class": "common.topic",
                    "friendly_name": "oregon",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.aareas.schema.administrative_area.capital"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kj_ ns:base.aareas.schema.administrative_area.capital ?x .\n}\n",
        "topic_entity": "m.05kj_",
        "answer": [
            {
                "answer_argument": "m.0d23k",
                "answer_type": "Entity",
                "entity_name": "Salem"
            }
        ],
        "s_expression": "(JOIN (R base.aareas.schema.administrative_area.capital) m.05kj_)",
        "s_expression_processed": "(JOIN (R base.aareas.schema.administrative_area.capital) m.05kj_)"
    },
    {
        "qid": "WebQTrn-3510",
        "question": "what teams did shaq play 4",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.012xdf",
                    "class": "common.topic",
                    "friendly_name": "shaq",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012xdf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012xdf ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "topic_entity": "m.012xdf",
        "answer": [
            {
                "answer_argument": "m.026dqjm",
                "answer_type": "Entity",
                "entity_name": "LSU Tigers men's basketball"
            },
            {
                "answer_argument": "m.0bwjj",
                "answer_type": "Entity",
                "entity_name": "Boston Celtics"
            },
            {
                "answer_argument": "m.0jm2v",
                "answer_type": "Entity",
                "entity_name": "Miami Heat"
            },
            {
                "answer_argument": "m.0jm4b",
                "answer_type": "Entity",
                "entity_name": "Orlando Magic"
            },
            {
                "answer_argument": "m.0jm7n",
                "answer_type": "Entity",
                "entity_name": "Cleveland Cavaliers"
            },
            {
                "answer_argument": "m.0jmk7",
                "answer_type": "Entity",
                "entity_name": "Los Angeles Lakers"
            },
            {
                "answer_argument": "m.0jml5",
                "answer_type": "Entity",
                "entity_name": "Phoenix Suns"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.team) (JOIN (R sports.pro_athlete.teams) m.012xdf))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.team) (JOIN (R sports.pro_athlete.teams) m.012xdf))"
    },
    {
        "qid": "WebQTrn-3533",
        "question": "who was luke skywalker played by",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0f1bg",
                    "class": "common.topic",
                    "friendly_name": "luke skywalker",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film_character.portrayed_in_films"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f1bg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f1bg ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "topic_entity": "m.0f1bg",
        "answer": [
            {
                "answer_argument": "m.0154d7",
                "answer_type": "Entity",
                "entity_name": "Mark Hamill"
            },
            {
                "answer_argument": "m.07l4yc",
                "answer_type": "Entity",
                "entity_name": "Bob Bergen"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (JOIN (R film.film_character.portrayed_in_films) m.0f1bg))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (JOIN (R film.film_character.portrayed_in_films) m.0f1bg))"
    },
    {
        "qid": "WebQTrn-3738",
        "question": "what films did michael clarke duncan star in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02lkcc",
                    "class": "common.topic",
                    "friendly_name": "michael clarke duncan",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02lkcc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02lkcc ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.02lkcc",
        "answer": [
            {
                "answer_argument": "m.0137wc",
                "answer_type": "Entity",
                "entity_name": "A Night at the Roxbury"
            },
            {
                "answer_argument": "m.016rw2",
                "answer_type": "Entity",
                "entity_name": "Friday"
            },
            {
                "answer_argument": "m.01ztp8",
                "answer_type": "Entity",
                "entity_name": "Brother Bear"
            },
            {
                "answer_argument": "m.02772bj",
                "answer_type": "Entity",
                "entity_name": "The Last Mimzy"
            },
            {
                "answer_argument": "m.027tdtt",
                "answer_type": "Entity",
                "entity_name": "The Golden Blaze"
            },
            {
                "answer_argument": "m.02pym58",
                "answer_type": "Entity",
                "entity_name": "D.E.B.S."
            },
            {
                "answer_argument": "m.02rd7cn",
                "answer_type": "Entity",
                "entity_name": "Dinotopia: Quest for the Ruby Sunstone"
            },
            {
                "answer_argument": "m.02v8kmz",
                "answer_type": "Entity",
                "entity_name": "Bulworth"
            },
            {
                "answer_argument": "m.02x0srr",
                "answer_type": "Entity",
                "entity_name": "Welcome Home, Roscoe Jenkins"
            },
            {
                "answer_argument": "m.03s9kp",
                "answer_type": "Entity",
                "entity_name": "The Green Mile"
            },
            {
                "answer_argument": "m.03t95n",
                "answer_type": "Entity",
                "entity_name": "The Scorpion King"
            },
            {
                "answer_argument": "m.03tbg6",
                "answer_type": "Entity",
                "entity_name": "Cats & Dogs"
            },
            {
                "answer_argument": "m.03w9fwk",
                "answer_type": "Entity",
                "entity_name": "Street Fighter: The Legend of Chun-Li"
            },
            {
                "answer_argument": "m.03wccpk",
                "answer_type": "Entity",
                "entity_name": "The Slammin' Salmon"
            },
            {
                "answer_argument": "m.0435vm",
                "answer_type": "Entity",
                "entity_name": "The Island"
            },
            {
                "answer_argument": "m.047wh1",
                "answer_type": "Entity",
                "entity_name": "Planet of the Apes"
            },
            {
                "answer_argument": "m.048vhl",
                "answer_type": "Entity",
                "entity_name": "Daredevil"
            },
            {
                "answer_argument": "m.04b4pq",
                "answer_type": "Entity",
                "entity_name": "Delgo"
            },
            {
                "answer_argument": "m.04j2sl_",
                "answer_type": "Entity",
                "entity_name": "They Call Me Sirr"
            },
            {
                "answer_argument": "m.04n1s9m",
                "answer_type": "Entity",
                "entity_name": "Cats & Dogs: The Revenge of Kitty Galore"
            },
            {
                "answer_argument": "m.04tqtl",
                "answer_type": "Entity",
                "entity_name": "Sin City"
            },
            {
                "answer_argument": "m.04xx51",
                "answer_type": "Entity",
                "entity_name": "Racing Stripes"
            },
            {
                "answer_argument": "m.05zn3t_",
                "answer_type": "Entity",
                "entity_name": "Caught Up"
            },
            {
                "answer_argument": "m.064nstb",
                "answer_type": "Entity",
                "entity_name": "One Way"
            },
            {
                "answer_argument": "m.072hxn",
                "answer_type": "Entity",
                "entity_name": "The Players Club"
            },
            {
                "answer_argument": "m.08952r",
                "answer_type": "Entity",
                "entity_name": "Talladega Nights: The Ballad of Ricky Bobby"
            },
            {
                "answer_argument": "m.08f3y0",
                "answer_type": "Entity",
                "entity_name": "See Spot Run"
            },
            {
                "answer_argument": "m.08zjv6",
                "answer_type": "Entity",
                "entity_name": "Breakfast of Champions"
            },
            {
                "answer_argument": "m.09146g",
                "answer_type": "Entity",
                "entity_name": "Kung Fu Panda"
            },
            {
                "answer_argument": "m.099p23",
                "answer_type": "Entity",
                "entity_name": "Kim Possible: A Sitch in Time"
            },
            {
                "answer_argument": "m.09c_s1",
                "answer_type": "Entity",
                "entity_name": "George of the Jungle 2"
            },
            {
                "answer_argument": "m.0bh8yn3",
                "answer_type": "Entity",
                "entity_name": "Green Lantern"
            },
            {
                "answer_argument": "m.0bk2k2",
                "answer_type": "Entity",
                "entity_name": "Brother Bear 2"
            },
            {
                "answer_argument": "m.0bk2pk",
                "answer_type": "Entity",
                "entity_name": "Invasion of the Tinysauruses"
            },
            {
                "answer_argument": "m.0c4yqd4",
                "answer_type": "Entity",
                "entity_name": "Redemption Road"
            },
            {
                "answer_argument": "m.0crs593",
                "answer_type": "Entity",
                "entity_name": "American Crude"
            },
            {
                "answer_argument": "m.0crwmhk",
                "answer_type": "Entity",
                "entity_name": "Pursued"
            },
            {
                "answer_argument": "m.0crzh7b",
                "answer_type": "Entity",
                "entity_name": "R. Kelly: The R. in R&B: The Video Collection"
            },
            {
                "answer_argument": "m.0d1dcw",
                "answer_type": "Entity",
                "entity_name": "Air Buddies"
            },
            {
                "answer_argument": "m.0dgq12n",
                "answer_type": "Entity",
                "entity_name": "Cross"
            },
            {
                "answer_argument": "m.0ds33",
                "answer_type": "Entity",
                "entity_name": "Armageddon"
            },
            {
                "answer_argument": "m.0dsb4b",
                "answer_type": "Entity",
                "entity_name": "The Underground Comedy Movie"
            },
            {
                "answer_argument": "m.0fk5t4",
                "answer_type": "Entity",
                "entity_name": "Back in Business"
            },
            {
                "answer_argument": "m.0fzz_c",
                "answer_type": "Entity",
                "entity_name": "Operation: Jet Fusion"
            },
            {
                "answer_argument": "m.0g_1sj",
                "answer_type": "Entity",
                "entity_name": "School for Scoundrels"
            },
            {
                "answer_argument": "m.0g5qvj",
                "answer_type": "Entity",
                "entity_name": "The Whole Nine Yards"
            },
            {
                "answer_argument": "m.0gfzfj",
                "answer_type": "Entity",
                "entity_name": "Family Guy Presents: Stewie Griffin: The Untold Story"
            },
            {
                "answer_argument": "m.0gjs8p",
                "answer_type": "Entity",
                "entity_name": "George and the Dragon"
            },
            {
                "answer_argument": "m.0gwz12g",
                "answer_type": "Entity",
                "entity_name": "A Resurrection"
            },
            {
                "answer_argument": "m.0gy5rt9",
                "answer_type": "Entity",
                "entity_name": "From the Rough"
            },
            {
                "answer_argument": "m.0h15c4x",
                "answer_type": "Entity",
                "entity_name": "In the Hive"
            },
            {
                "answer_argument": "m.0h2cyp5",
                "answer_type": "Entity",
                "entity_name": "A Crush on You"
            },
            {
                "answer_argument": "m.0h646fd",
                "answer_type": "Entity",
                "entity_name": "Criminal Empire for Dummies"
            },
            {
                "answer_argument": "m.0hntz2g",
                "answer_type": "Entity",
                "entity_name": "Legend of a Rabbit"
            },
            {
                "answer_argument": "m.0kv36n",
                "answer_type": "Entity",
                "entity_name": "Slipstream"
            },
            {
                "answer_argument": "m.0y7tq_4",
                "answer_type": "Entity",
                "entity_name": "D.E.B.S."
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.02lkcc))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.02lkcc))"
    },
    {
        "qid": "WebQTrn-3750",
        "question": "what team rasheed wallace",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02hdjz",
                    "class": "common.topic",
                    "friendly_name": "rasheed wallace",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hdjz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hdjz ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n}\n",
        "topic_entity": "m.02hdjz",
        "answer": [
            {
                "answer_argument": "m.0bwjj",
                "answer_type": "Entity",
                "entity_name": "Boston Celtics"
            },
            {
                "answer_argument": "m.0jm3v",
                "answer_type": "Entity",
                "entity_name": "New York Knicks"
            },
            {
                "answer_argument": "m.0jm5b",
                "answer_type": "Entity",
                "entity_name": "Washington Wizards"
            },
            {
                "answer_argument": "m.0jm64",
                "answer_type": "Entity",
                "entity_name": "Atlanta Hawks"
            },
            {
                "answer_argument": "m.0jm8l",
                "answer_type": "Entity",
                "entity_name": "Detroit Pistons"
            },
            {
                "answer_argument": "m.0jmm4",
                "answer_type": "Entity",
                "entity_name": "Portland Trail Blazers"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.team) (JOIN (R sports.pro_athlete.teams) m.02hdjz))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.team) (JOIN (R sports.pro_athlete.teams) m.02hdjz))"
    }
]