[
    {
        "qid": "WebQTest-12",
        "question": "who is governor of ohio 2011",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05kkh",
                    "class": "common.topic",
                    "friendly_name": "ohio",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2011,
                        "government.government_position_held.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0fkvn",
                    "class": "common.topic",
                    "friendly_name": "Governor",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.basic_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05kkh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05kkh ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.05kkh",
        "answer": [
            {
                "answer_argument": "m.02zzm_",
                "answer_type": "Entity",
                "entity_name": "John Kasich"
            },
            {
                "answer_argument": "m.0340r0",
                "answer_type": "Entity",
                "entity_name": "Return J. Meigs, Jr."
            },
            {
                "answer_argument": "m.039rqy",
                "answer_type": "Entity",
                "entity_name": "Ted Strickland"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (AND (JOIN (R government.governmental_jurisdiction.governing_officials) m.05kkh) (JOIN government.government_position_held.basic_title m.0fkvn)) government.government_position_held.from 2011))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (CONS (JOIN (R government.governmental_jurisdiction.governing_officials) m.05kkh) government.government_position_held.basic_title m.0fkvn) government.government_position_held.from 2011))"
    },
    {
        "qid": "WebQTest-23",
        "question": "what town was martin luther king assassinated in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.051cc",
                    "class": "common.topic",
                    "friendly_name": "martin luther king",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.place_of_death"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.deceased_person.place_of_death ?x .\n}\n",
        "topic_entity": "m.051cc",
        "answer": [
            {
                "answer_argument": "m.0c_m3",
                "answer_type": "Entity",
                "entity_name": "Memphis"
            }
        ],
        "s_expression": "(JOIN (R people.deceased_person.place_of_death) m.051cc)",
        "s_expression_processed": "(JOIN (R people.deceased_person.place_of_death) m.051cc)"
    },
    {
        "qid": "WebQTest-28",
        "question": "what electorate does anna bligh represent",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.072_m3",
                    "class": "common.topic",
                    "friendly_name": "anna bligh",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.politician.government_positions_held"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.district_represented"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.072_m3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.072_m3 ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.district_represented ?x .\n}\n",
        "topic_entity": "m.072_m3",
        "answer": [
            {
                "answer_argument": "m.026q11g",
                "answer_type": "Entity",
                "entity_name": "Electoral district of South Brisbane"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.district_represented) (JOIN (R government.politician.government_positions_held) m.072_m3))",
        "s_expression_processed": "(JOIN (R government.government_position_held.district_represented) (JOIN (R government.politician.government_positions_held) m.072_m3))"
    },
    {
        "qid": "WebQTest-36",
        "question": "what highschool did harper lee go to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01bq7x",
                    "class": "common.topic",
                    "friendly_name": "harper lee",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0bpgx",
                    "class": "common.topic",
                    "friendly_name": "Highschool",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "education.educational_institution.school_type"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01bq7x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01bq7x ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:education.educational_institution.school_type ns:m.0bpgx .\n}\n",
        "topic_entity": "m.01bq7x",
        "answer": [
            {
                "answer_argument": "m.0crdc8g",
                "answer_type": "Entity",
                "entity_name": "Monroe County High School"
            }
        ],
        "s_expression": "(AND (JOIN (R education.education.institution) (JOIN (R people.person.education) m.01bq7x)) (JOIN education.educational_institution.school_type m.0bpgx))",
        "s_expression_processed": "(CONS (JOIN (R education.education.institution) (JOIN (R people.person.education) m.01bq7x)) education.educational_institution.school_type m.0bpgx)"
    },
    {
        "qid": "WebQTest-42",
        "question": "what are the songs that justin bieber wrote",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06w2sn5",
                    "class": "common.topic",
                    "friendly_name": "justin bieber",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.composer.compositions"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06w2sn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06w2sn5 ns:music.composer.compositions ?x .\n}\n",
        "topic_entity": "m.06w2sn5",
        "answer": [
            {
                "answer_argument": "m.0116pj4q",
                "answer_type": "Entity",
                "entity_name": "Lolly"
            },
            {
                "answer_argument": "m.012k_48s",
                "answer_type": "Entity",
                "entity_name": "Home to Mama"
            },
            {
                "answer_argument": "m.09v3gb4",
                "answer_type": "Entity",
                "entity_name": "Baby"
            },
            {
                "answer_argument": "m.0bbvzq2",
                "answer_type": "Entity",
                "entity_name": "Never Let You Go"
            },
            {
                "answer_argument": "m.0bbz4p9",
                "answer_type": "Entity",
                "entity_name": "Eenie Meenie"
            },
            {
                "answer_argument": "m.0bmc2ql",
                "answer_type": "Entity",
                "entity_name": "Somebody to Love"
            },
            {
                "answer_argument": "m.0c3vvnk",
                "answer_type": "Entity",
                "entity_name": "Never Say Never"
            },
            {
                "answer_argument": "m.0fqlv5l",
                "answer_type": "Entity",
                "entity_name": "Bigger"
            },
            {
                "answer_argument": "m.0g5b0p2",
                "answer_type": "Entity",
                "entity_name": "Pray"
            },
            {
                "answer_argument": "m.0g5q9ky",
                "answer_type": "Entity",
                "entity_name": "First Dance"
            },
            {
                "answer_argument": "m.0j4453t",
                "answer_type": "Entity",
                "entity_name": "Live My Life"
            },
            {
                "answer_argument": "m.0j64n8c",
                "answer_type": "Entity",
                "entity_name": "Boyfriend"
            },
            {
                "answer_argument": "m.0jwqwyx",
                "answer_type": "Entity",
                "entity_name": "Turn to You (Mother's Day Dedication)"
            },
            {
                "answer_argument": "m.0jwx2_w",
                "answer_type": "Entity",
                "entity_name": "Die in Your Arms"
            },
            {
                "answer_argument": "m.0jxk_hq",
                "answer_type": "Entity",
                "entity_name": "Thought Of You"
            },
            {
                "answer_argument": "m.0jxk_kq",
                "answer_type": "Entity",
                "entity_name": "Beauty And A Beat"
            },
            {
                "answer_argument": "m.0jxkzb9",
                "answer_type": "Entity",
                "entity_name": "All Around The World"
            },
            {
                "answer_argument": "m.0k0l2vf",
                "answer_type": "Entity",
                "entity_name": "As Long as You Love Me"
            },
            {
                "answer_argument": "m.0qfpkqq",
                "answer_type": "Entity",
                "entity_name": "Right Here"
            },
            {
                "answer_argument": "m.0rytzvz",
                "answer_type": "Entity",
                "entity_name": "#thatPower"
            },
            {
                "answer_argument": "m.0y6b7k5",
                "answer_type": "Entity",
                "entity_name": "Heartbreaker"
            },
            {
                "answer_argument": "m.0ynrkyl",
                "answer_type": "Entity",
                "entity_name": "All That Matters"
            },
            {
                "answer_argument": "m.0yt1lb9",
                "answer_type": "Entity",
                "entity_name": "Hold Tight"
            },
            {
                "answer_argument": "m.0yt3yyw",
                "answer_type": "Entity",
                "entity_name": "Wait for a Minute"
            },
            {
                "answer_argument": "m.0yt3zg2",
                "answer_type": "Entity",
                "entity_name": "Recovery"
            },
            {
                "answer_argument": "m.0z6sgcx",
                "answer_type": "Entity",
                "entity_name": "Bad Day"
            },
            {
                "answer_argument": "m.0zbv_v0",
                "answer_type": "Entity",
                "entity_name": "All Bad"
            },
            {
                "answer_argument": "m.0zdkrym",
                "answer_type": "Entity",
                "entity_name": "PYD"
            },
            {
                "answer_argument": "m.0zg6nnd",
                "answer_type": "Entity",
                "entity_name": "Change Me"
            },
            {
                "answer_argument": "m.0zgb5ny",
                "answer_type": "Entity",
                "entity_name": "Roller Coaster"
            },
            {
                "answer_argument": "m.0zmzvrc",
                "answer_type": "Entity",
                "entity_name": "Confident"
            }
        ],
        "s_expression": "(JOIN (R music.composer.compositions) m.06w2sn5)",
        "s_expression_processed": "(JOIN (R music.composer.compositions) m.06w2sn5)"
    },
    {
        "qid": "WebQTest-45",
        "question": "where was rihanna born and raised",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06mt91",
                    "class": "common.topic",
                    "friendly_name": "rihanna",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.place_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mt91)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mt91 ns:people.person.place_of_birth ?x .\n}\n",
        "topic_entity": "m.06mt91",
        "answer": [
            {
                "answer_argument": "m.02p5kp",
                "answer_type": "Entity",
                "entity_name": "Saint Michael Parish"
            }
        ],
        "s_expression": "(JOIN (R people.person.place_of_birth) m.06mt91)",
        "s_expression_processed": "(JOIN (R people.person.place_of_birth) m.06mt91)"
    },
    {
        "qid": "WebQTest-47",
        "question": "where george lopez was born",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02xfj0",
                    "class": "common.topic",
                    "friendly_name": "george lopez",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.place_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xfj0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xfj0 ns:people.person.place_of_birth ?x .\n}\n",
        "topic_entity": "m.02xfj0",
        "answer": [
            {
                "answer_argument": "m.01kfz0",
                "answer_type": "Entity",
                "entity_name": "Mission Hills"
            }
        ],
        "s_expression": "(JOIN (R people.person.place_of_birth) m.02xfj0)",
        "s_expression_processed": "(JOIN (R people.person.place_of_birth) m.02xfj0)"
    },
    {
        "qid": "WebQTest-51",
        "question": "who will play mr gray in the film",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0nfjvrm",
                    "class": "common.topic",
                    "friendly_name": "mr gray",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film_character.portrayed_in_films"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nfjvrm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nfjvrm ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
        "topic_entity": "m.0nfjvrm",
        "answer": [
            {
                "answer_argument": "m.0fs4kv",
                "answer_type": "Entity",
                "entity_name": "Jamie Dornan"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (JOIN (R film.film_character.portrayed_in_films) m.0nfjvrm))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (JOIN (R film.film_character.portrayed_in_films) m.0nfjvrm))"
    },
    {
        "qid": "WebQTest-54",
        "question": "what country did adolf hitler control",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07_m9_",
                    "class": "common.topic",
                    "friendly_name": "adolf hitler",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.politician.government_positions_held"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.jurisdiction_of_office"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.jurisdiction_of_office ?x .\n}\n",
        "topic_entity": "m.07_m9_",
        "answer": [
            {
                "answer_argument": "m.059z0",
                "answer_type": "Entity",
                "entity_name": "Nazi Germany"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.jurisdiction_of_office) (JOIN (R government.politician.government_positions_held) m.07_m9_))",
        "s_expression_processed": "(JOIN (R government.government_position_held.jurisdiction_of_office) (JOIN (R government.politician.government_positions_held) m.07_m9_))"
    },
    {
        "qid": "WebQTest-61",
        "question": "what are the religions practiced in indonesia",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03ryn",
                    "class": "common.topic",
                    "friendly_name": "indonesia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.statistical_region.religions"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.religion_percentage.religion"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ryn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ryn ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "topic_entity": "m.03ryn",
        "answer": [
            {
                "answer_argument": "m.03j6c",
                "answer_type": "Entity",
                "entity_name": "Hinduism"
            },
            {
                "answer_argument": "m.05sfs",
                "answer_type": "Entity",
                "entity_name": "Protestantism"
            },
            {
                "answer_argument": "m.0c8wxp",
                "answer_type": "Entity",
                "entity_name": "Catholicism"
            },
            {
                "answer_argument": "m.0flw86",
                "answer_type": "Entity",
                "entity_name": "Islam"
            }
        ],
        "s_expression": "(JOIN (R location.religion_percentage.religion) (JOIN (R location.statistical_region.religions) m.03ryn))",
        "s_expression_processed": "(JOIN (R location.religion_percentage.religion) (JOIN (R location.statistical_region.religions) m.03ryn))"
    },
    {
        "qid": "WebQTest-72",
        "question": "what battles did stonewall jackson fight in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07r8h",
                    "class": "common.topic",
                    "friendly_name": "stonewall jackson",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "military.military_commander.military_commands"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "military.military_command.military_conflict"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07r8h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07r8h ns:military.military_commander.military_commands ?y .\n?y ns:military.military_command.military_conflict ?x .\n}\n",
        "topic_entity": "m.07r8h",
        "answer": [
            {
                "answer_argument": "m.01_nvh",
                "answer_type": "Entity",
                "entity_name": "First Battle of Winchester"
            },
            {
                "answer_argument": "m.01xvgq",
                "answer_type": "Entity",
                "entity_name": "How Few Remain"
            },
            {
                "answer_argument": "m.021h20",
                "answer_type": "Entity",
                "entity_name": "Jackson's Valley Campaign"
            },
            {
                "answer_argument": "m.02bckn",
                "answer_type": "Entity",
                "entity_name": "Battle of Chantilly"
            },
            {
                "answer_argument": "m.02p037",
                "answer_type": "Entity",
                "entity_name": "Battle of Harpers Ferry"
            },
            {
                "answer_argument": "m.02q5_1r",
                "answer_type": "Entity",
                "entity_name": "Romney Expedition"
            },
            {
                "answer_argument": "m.04v_mz",
                "answer_type": "Entity",
                "entity_name": "Battle of Cedar Mountain"
            },
            {
                "answer_argument": "m.04v_qr",
                "answer_type": "Entity",
                "entity_name": "First Battle of Rappahannock Station"
            },
            {
                "answer_argument": "m.04v_xx",
                "answer_type": "Entity",
                "entity_name": "Manassas Station Operations"
            },
            {
                "answer_argument": "m.04vqvv",
                "answer_type": "Entity",
                "entity_name": "Battle of White Oak Swamp"
            },
            {
                "answer_argument": "m.04vt8k",
                "answer_type": "Entity",
                "entity_name": "Battle of Hoke's Run"
            },
            {
                "answer_argument": "m.04vyf2",
                "answer_type": "Entity",
                "entity_name": "Battle of Hancock"
            },
            {
                "answer_argument": "m.04vyvq",
                "answer_type": "Entity",
                "entity_name": "First Battle of Kernstown"
            },
            {
                "answer_argument": "m.04vyw1",
                "answer_type": "Entity",
                "entity_name": "Battle of McDowell"
            },
            {
                "answer_argument": "m.04vyxv",
                "answer_type": "Entity",
                "entity_name": "Battle of Front Royal"
            },
            {
                "answer_argument": "m.04vz0r",
                "answer_type": "Entity",
                "entity_name": "Battle of Port Republic"
            },
            {
                "answer_argument": "m.0d0mw",
                "answer_type": "Entity",
                "entity_name": "Battle of Chancellorsville"
            },
            {
                "answer_argument": "m.0f777",
                "answer_type": "Entity",
                "entity_name": "Second Battle of Bull Run"
            },
            {
                "answer_argument": "m.0kbq",
                "answer_type": "Entity",
                "entity_name": "American Civil War"
            }
        ],
        "s_expression": "(JOIN (R military.military_command.military_conflict) (JOIN (R military.military_commander.military_commands) m.07r8h))",
        "s_expression_processed": "(JOIN (R military.military_command.military_conflict) (JOIN (R military.military_commander.military_commands) m.07r8h))"
    },
    {
        "qid": "WebQTest-73",
        "question": "what language do the maasai tribe speak",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.054vv",
                    "class": "common.topic",
                    "friendly_name": "maasai",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.ethnicity.languages_spoken"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054vv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054vv ns:people.ethnicity.languages_spoken ?x .\n}\n",
        "topic_entity": "m.054vv",
        "answer": [
            {
                "answer_argument": "m.064kl7",
                "answer_type": "Entity",
                "entity_name": "Maasai Language"
            }
        ],
        "s_expression": "(JOIN (R people.ethnicity.languages_spoken) m.054vv)",
        "s_expression_processed": "(JOIN (R people.ethnicity.languages_spoken) m.054vv)"
    },
    {
        "qid": "WebQTest-77",
        "question": "what capital of austria",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0h7x",
                    "class": "common.topic",
                    "friendly_name": "austria",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.capital"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h7x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h7x ns:location.country.capital ?x .\n}\n",
        "topic_entity": "m.0h7x",
        "answer": [
            {
                "answer_argument": "m.0fhp9",
                "answer_type": "Entity",
                "entity_name": "Vienna"
            }
        ],
        "s_expression": "(JOIN (R location.country.capital) m.0h7x)",
        "s_expression_processed": "(JOIN (R location.country.capital) m.0h7x)"
    },
    {
        "qid": "WebQTest-79",
        "question": "what country did buddha come from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.015k7",
                    "class": "common.topic",
                    "friendly_name": "buddha",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.nationality"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015k7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015k7 ns:people.person.nationality ?x .\n}\n",
        "topic_entity": "m.015k7",
        "answer": [
            {
                "answer_argument": "m.016zwt",
                "answer_type": "Entity",
                "entity_name": "Nepal"
            }
        ],
        "s_expression": "(JOIN (R people.person.nationality) m.015k7)",
        "s_expression_processed": "(JOIN (R people.person.nationality) m.015k7)"
    },
    {
        "qid": "WebQTest-89",
        "question": "what do you call the chinese writing system",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01r2l",
                    "class": "common.topic",
                    "friendly_name": "chinese",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "language.human_language.writing_system"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r2l ns:language.human_language.writing_system ?x .\n}\n",
        "topic_entity": "m.01r2l",
        "answer": [
            {
                "answer_argument": "m.014lbg",
                "answer_type": "Entity",
                "entity_name": "Nüshu script"
            },
            {
                "answer_argument": "m.01mw7r",
                "answer_type": "Entity",
                "entity_name": "Simplified Chinese character"
            },
            {
                "answer_argument": "m.01nf5z",
                "answer_type": "Entity",
                "entity_name": "Traditional Chinese characters"
            },
            {
                "answer_argument": "m.050fyz",
                "answer_type": "Entity",
                "entity_name": "'Phags-pa script"
            },
            {
                "answer_argument": "m.0mmzb",
                "answer_type": "Entity",
                "entity_name": "Chinese characters"
            }
        ],
        "s_expression": "(JOIN (R language.human_language.writing_system) m.01r2l)",
        "s_expression_processed": "(JOIN (R language.human_language.writing_system) m.01r2l)"
    },
    {
        "qid": "WebQTest-99",
        "question": "what is serbian language called",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.077qn",
                    "class": "common.topic",
                    "friendly_name": "serbian",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.official_language"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.077qn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.077qn ns:location.country.official_language ?x .\n}\n",
        "topic_entity": "m.077qn",
        "answer": [
            {
                "answer_argument": "m.0k0sb",
                "answer_type": "Entity",
                "entity_name": "Serbian language"
            }
        ],
        "s_expression": "(JOIN (R location.country.official_language) m.077qn)",
        "s_expression_processed": "(JOIN (R location.country.official_language) m.077qn)"
    },
    {
        "qid": "WebQTest-103",
        "question": "what basketball teams has shaq played for",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.012xdf",
                    "class": "common.topic",
                    "friendly_name": "shaq",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.018w8",
                    "class": "common.topic",
                    "friendly_name": "Basketball",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "sports.sports_team.sport"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012xdf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012xdf ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\n?x ns:sports.sports_team.sport ns:m.018w8 .\n}\n",
        "topic_entity": "m.012xdf",
        "answer": [
            {
                "answer_argument": "m.026dqjm",
                "answer_type": "Entity",
                "entity_name": "LSU Tigers men's basketball"
            },
            {
                "answer_argument": "m.0bwjj",
                "answer_type": "Entity",
                "entity_name": "Boston Celtics"
            },
            {
                "answer_argument": "m.0jm2v",
                "answer_type": "Entity",
                "entity_name": "Miami Heat"
            },
            {
                "answer_argument": "m.0jm4b",
                "answer_type": "Entity",
                "entity_name": "Orlando Magic"
            },
            {
                "answer_argument": "m.0jm7n",
                "answer_type": "Entity",
                "entity_name": "Cleveland Cavaliers"
            },
            {
                "answer_argument": "m.0jmk7",
                "answer_type": "Entity",
                "entity_name": "Los Angeles Lakers"
            },
            {
                "answer_argument": "m.0jml5",
                "answer_type": "Entity",
                "entity_name": "Phoenix Suns"
            }
        ],
        "s_expression": "(AND (JOIN (R sports.sports_team_roster.team) (JOIN (R sports.pro_athlete.teams) m.012xdf)) (JOIN sports.sports_team.sport m.018w8))",
        "s_expression_processed": "(AND (JOIN (R sports.sports_team_roster.team) (JOIN (R sports.pro_athlete.teams) m.012xdf)) (JOIN sports.sports_team.sport m.018w8))"
    },
    {
        "qid": "WebQTest-106",
        "question": "who did armie hammer play in the social network",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07s846j",
                    "class": "common.topic",
                    "friendly_name": "social network",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.03y9941",
                    "class": "common.topic",
                    "friendly_name": "Armie Hammer",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film.starring"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.actor"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07s846j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07s846j ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.03y9941 .\n}\n",
        "topic_entity": "m.07s846j",
        "answer": [
            {
                "answer_argument": "m.09tb_f3",
                "answer_type": "Entity",
                "entity_name": "Tyler Winklevoss"
            },
            {
                "answer_argument": "m.09tbj8d",
                "answer_type": "Entity",
                "entity_name": "Cameron Winklevoss"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.film.starring) m.07s846j) (JOIN film.performance.actor m.03y9941)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.film.starring) m.07s846j) (JOIN film.performance.actor m.03y9941)))"
    },
    {
        "qid": "WebQTest-112",
        "question": "what was robert burns",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09482",
                    "class": "common.topic",
                    "friendly_name": "robert burns",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.profession"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09482)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09482 ns:people.person.profession ?x .\n}\n",
        "topic_entity": "m.09482",
        "answer": [
            {
                "answer_argument": "m.05z96",
                "answer_type": "Entity",
                "entity_name": "Poet"
            },
            {
                "answer_argument": "m.0cbd2",
                "answer_type": "Entity",
                "entity_name": "Writer"
            },
            {
                "answer_argument": "m.0knj1",
                "answer_type": "Entity",
                "entity_name": "Bard"
            },
            {
                "answer_argument": "m.0kyk",
                "answer_type": "Entity",
                "entity_name": "Author"
            }
        ],
        "s_expression": "(JOIN (R people.person.profession) m.09482)",
        "s_expression_processed": "(JOIN (R people.person.profession) m.09482)"
    },
    {
        "qid": "WebQTest-119",
        "question": "who plays london tipton in suite life on deck",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03mj4jm",
                    "class": "common.topic",
                    "friendly_name": "suite life on deck",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07g8r3",
                    "class": "common.topic",
                    "friendly_name": "London Tipton",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_program.regular_cast"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "tv.regular_tv_appearance.character"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03mj4jm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03mj4jm ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.07g8r3 .\n}\n",
        "topic_entity": "m.03mj4jm",
        "answer": [
            {
                "answer_argument": "m.05pmzb",
                "answer_type": "Entity",
                "entity_name": "Brenda Song"
            }
        ],
        "s_expression": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_program.regular_cast) m.03mj4jm) (JOIN tv.regular_tv_appearance.character m.07g8r3)))",
        "s_expression_processed": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_program.regular_cast) m.03mj4jm) (JOIN tv.regular_tv_appearance.character m.07g8r3)))"
    },
    {
        "qid": "WebQTest-121",
        "question": "what team did david beckham play for in 2011",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02d9k",
                    "class": "common.topic",
                    "friendly_name": "david beckham",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2011,
                        "sports.sports_team_roster.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02d9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02d9k ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.02d9k",
        "answer": [
            {
                "answer_argument": "m.01k2yr",
                "answer_type": "Entity",
                "entity_name": "LA Galaxy"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.02d9k) sports.sports_team_roster.from 2011))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.02d9k) sports.sports_team_roster.from 2011))"
    },
    {
        "qid": "WebQTest-132",
        "question": "who is michael j fox wife",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0hz_1",
                    "class": "common.topic",
                    "friendly_name": "michael j fox",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hz_1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hz_1 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "topic_entity": "m.0hz_1",
        "answer": [
            {
                "answer_argument": "m.03gpck",
                "answer_type": "Entity",
                "entity_name": "Tracy Pollan"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (AND (JOIN (R people.person.spouse_s) m.0hz_1) (JOIN people.marriage.type_of_union m.04ztj)))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (CONS (JOIN (R people.person.spouse_s) m.0hz_1) people.marriage.type_of_union m.04ztj))"
    },
    {
        "qid": "WebQTest-134",
        "question": "what type of books did agatha christie wrote",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0ldd",
                    "class": "common.topic",
                    "friendly_name": "agatha christie",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.profession"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ldd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ldd ns:people.person.profession ?x .\n}\n",
        "topic_entity": "m.0ldd",
        "answer": [
            {
                "answer_argument": "m.02hv44_",
                "answer_type": "Entity",
                "entity_name": "Playwright"
            },
            {
                "answer_argument": "m.02xhgwq",
                "answer_type": "Entity",
                "entity_name": "Novelist"
            },
            {
                "answer_argument": "m.05z96",
                "answer_type": "Entity",
                "entity_name": "Poet"
            },
            {
                "answer_argument": "m.0cbd2",
                "answer_type": "Entity",
                "entity_name": "Writer"
            },
            {
                "answer_argument": "m.0dxtg",
                "answer_type": "Entity",
                "entity_name": "Screenwriter"
            }
        ],
        "s_expression": "(JOIN (R people.person.profession) m.0ldd)",
        "s_expression_processed": "(JOIN (R people.person.profession) m.0ldd)"
    },
    {
        "qid": "WebQTest-138",
        "question": "what are the four main languages spoken in spain",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06mkj",
                    "class": "common.topic",
                    "friendly_name": "spain",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.languages_spoken"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.languages_spoken ?x .\n}\n",
        "topic_entity": "m.06mkj",
        "answer": [
            {
                "answer_argument": "m.017k6",
                "answer_type": "Entity",
                "entity_name": "Basque Language"
            },
            {
                "answer_argument": "m.01m69",
                "answer_type": "Entity",
                "entity_name": "Catalan language"
            },
            {
                "answer_argument": "m.01q5d9",
                "answer_type": "Entity",
                "entity_name": "Galician Language"
            },
            {
                "answer_argument": "m.05l0r",
                "answer_type": "Entity",
                "entity_name": "Occitan language"
            },
            {
                "answer_argument": "m.06nm1",
                "answer_type": "Entity",
                "entity_name": "Spanish Language"
            }
        ],
        "s_expression": "(JOIN (R location.country.languages_spoken) m.06mkj)",
        "s_expression_processed": "(JOIN (R location.country.languages_spoken) m.06mkj)"
    },
    {
        "qid": "WebQTest-160",
        "question": "where did rudolf virchow conduct his research",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.011kz4",
                    "class": "common.topic",
                    "friendly_name": "rudolf virchow",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.employment_history"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "business.employment_tenure.company"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.011kz4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.011kz4 ns:people.person.employment_history ?y .\n?y ns:business.employment_tenure.company ?x .\n}\n",
        "topic_entity": "m.011kz4",
        "answer": [
            {
                "answer_argument": "m.01stzp",
                "answer_type": "Entity",
                "entity_name": "Humboldt University of Berlin"
            },
            {
                "answer_argument": "m.03563j",
                "answer_type": "Entity",
                "entity_name": "University of Würzburg"
            }
        ],
        "s_expression": "(JOIN (R business.employment_tenure.company) (JOIN (R people.person.employment_history) m.011kz4))",
        "s_expression_processed": "(JOIN (R business.employment_tenure.company) (JOIN (R people.person.employment_history) m.011kz4))"
    },
    {
        "qid": "WebQTest-167",
        "question": "where did queensland get its name from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0g39h",
                    "class": "common.topic",
                    "friendly_name": "queensland",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.namesake.named_after"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g39h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g39h ns:symbols.namesake.named_after ?x .\n}\n",
        "topic_entity": "m.0g39h",
        "answer": [
            {
                "answer_argument": "m.0cw10",
                "answer_type": "Entity",
                "entity_name": "Queen Victoria"
            }
        ],
        "s_expression": "(JOIN (R symbols.namesake.named_after) m.0g39h)",
        "s_expression_processed": "(JOIN (R symbols.namesake.named_after) m.0g39h)"
    },
    {
        "qid": "WebQTest-168",
        "question": "what document did james madison write",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0424m",
                    "class": "common.topic",
                    "friendly_name": "james madison",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.author.works_written"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0424m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0424m ns:book.author.works_written ?x .\n}\n",
        "topic_entity": "m.0424m",
        "answer": [
            {
                "answer_argument": "m.067vb8j",
                "answer_type": "Entity",
                "entity_name": "The forging of American federalism"
            },
            {
                "answer_argument": "m.068vl9d",
                "answer_type": "Entity",
                "entity_name": "Jonathan Bull and Mary Bull"
            },
            {
                "answer_argument": "m.06crwm8",
                "answer_type": "Entity",
                "entity_name": "James Madison: Writings"
            },
            {
                "answer_argument": "m.06cxcmz",
                "answer_type": "Entity",
                "entity_name": "The complete Madison"
            },
            {
                "answer_argument": "m.06czk99",
                "answer_type": "Entity",
                "entity_name": "Letters and other writings of James Madison"
            },
            {
                "answer_argument": "m.06dp2p9",
                "answer_type": "Entity",
                "entity_name": "Calendar of the correspondence of James Madison"
            },
            {
                "answer_argument": "m.06dzpv4",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison Congressional Series, Vol. 12: 2 October 1789 - 20 January 1790"
            },
            {
                "answer_argument": "m.06rh5rn",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Vol. 4"
            },
            {
                "answer_argument": "m.07dvb2",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 10"
            },
            {
                "answer_argument": "m.07trmk",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 39"
            },
            {
                "answer_argument": "m.07ty1r",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 42"
            },
            {
                "answer_argument": "m.07vg3d",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 14"
            },
            {
                "answer_argument": "m.07vg5t",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 18"
            },
            {
                "answer_argument": "m.07vg64",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 19"
            },
            {
                "answer_argument": "m.07vg6h",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 20"
            },
            {
                "answer_argument": "m.07vgpd",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 51"
            },
            {
                "answer_argument": "m.07vgpr",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 63"
            },
            {
                "answer_argument": "m.07vmf4",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 37"
            },
            {
                "answer_argument": "m.07vmfv",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 38"
            },
            {
                "answer_argument": "m.07vmgk",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 40"
            },
            {
                "answer_argument": "m.07vmgx",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 41"
            },
            {
                "answer_argument": "m.07vmhy",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 43"
            },
            {
                "answer_argument": "m.07vmj8",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 44"
            },
            {
                "answer_argument": "m.07vmjm",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 45"
            },
            {
                "answer_argument": "m.07vmjz",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 47"
            },
            {
                "answer_argument": "m.07vmkp",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 48"
            },
            {
                "answer_argument": "m.07vml0",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 46"
            },
            {
                "answer_argument": "m.07vmmr",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 49"
            },
            {
                "answer_argument": "m.07vmn2",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 50"
            },
            {
                "answer_argument": "m.07vmnf",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 52"
            },
            {
                "answer_argument": "m.07vmns",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 53"
            },
            {
                "answer_argument": "m.07vmp3",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 54"
            },
            {
                "answer_argument": "m.07vmpg",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 56"
            },
            {
                "answer_argument": "m.07vmqj",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 55"
            },
            {
                "answer_argument": "m.07vmrk",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 57"
            },
            {
                "answer_argument": "m.07vms7",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 58"
            },
            {
                "answer_argument": "m.07vmtz",
                "answer_type": "Entity",
                "entity_name": "Federalist No. 62"
            },
            {
                "answer_argument": "m.0bbhbct",
                "answer_type": "Entity",
                "entity_name": "Religious freedom"
            },
            {
                "answer_argument": "m.0bqqzvs",
                "answer_type": "Entity",
                "entity_name": "An address delivered before the Agricultural Society of Albemarle, on Tuesday, May 12, 1818"
            },
            {
                "answer_argument": "m.0bqqzvy",
                "answer_type": "Entity",
                "entity_name": "All impressments unlawful and inadmissible"
            },
            {
                "answer_argument": "m.0bqqzw_",
                "answer_type": "Entity",
                "entity_name": "President Madison's inaugural speech"
            },
            {
                "answer_argument": "m.0bqqzw3",
                "answer_type": "Entity",
                "entity_name": "Equal religious liberty stated and defended"
            },
            {
                "answer_argument": "m.0bqqzw8",
                "answer_type": "Entity",
                "entity_name": "An examination of the British doctrine"
            },
            {
                "answer_argument": "m.0bqqzwg",
                "answer_type": "Entity",
                "entity_name": "An examination of the British doctrine, which subjects to capture a neutral trade, not open in time of peace"
            },
            {
                "answer_argument": "m.0bqqzwk",
                "answer_type": "Entity",
                "entity_name": "Extract of a letter from the Secretary of State to Mr. Monroe, relative to impressments"
            },
            {
                "answer_argument": "m.0bqqzwn",
                "answer_type": "Entity",
                "entity_name": "Letters from the Secretary of State to Messrs. Monroe and Pinkney, on subjects committed to their joint negotiations"
            },
            {
                "answer_argument": "m.0bqqzws",
                "answer_type": "Entity",
                "entity_name": "Letters from the Secretary of State to Mr. Monroe, on the subject of impressments, &c"
            },
            {
                "answer_argument": "m.0bqqzww",
                "answer_type": "Entity",
                "entity_name": "Mr. Madison's motion for commercial restrictions"
            },
            {
                "answer_argument": "m.0bqqzx4",
                "answer_type": "Entity",
                "entity_name": "The reply of Mr. Madison, in answer to Mr. Rose, in discussing the affair of the Chesapeake"
            },
            {
                "answer_argument": "m.0bqqzxb",
                "answer_type": "Entity",
                "entity_name": "Selections from the private correspondence of James Madison, from 1813 to 1836"
            },
            {
                "answer_argument": "m.0c1t4vr",
                "answer_type": "Entity",
                "entity_name": "James Madison, 1751-1836"
            },
            {
                "answer_argument": "m.0c1t4vv",
                "answer_type": "Entity",
                "entity_name": "The mind of the founder"
            },
            {
                "answer_argument": "m.0c1t4vy",
                "answer_type": "Entity",
                "entity_name": "Papers of James Madison Volume 10: May 27, 1787-March 3, 1788"
            },
            {
                "answer_argument": "m.0c1t4w0",
                "answer_type": "Entity",
                "entity_name": "A vocabulary of New Jersey Delaware"
            },
            {
                "answer_argument": "m.0cmsl",
                "answer_type": "Entity",
                "entity_name": "The Federalist Papers"
            },
            {
                "answer_argument": "m.0dz4phw",
                "answer_type": "Entity",
                "entity_name": "The James Madison Papers, 1723 - 1836"
            },
            {
                "answer_argument": "m.0fpq85q",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison Retirement Series, Volume 1: 4 March 1817-31 January 1820"
            },
            {
                "answer_argument": "m.0y5g38x",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Presidential Series Vol. 1"
            },
            {
                "answer_argument": "m.0y5g39x",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Presidential Series Vol. 2"
            },
            {
                "answer_argument": "m.0y5g3dq",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Presidential Series Vol. 3"
            },
            {
                "answer_argument": "m.0y5g3gq",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Presidential Series Vol. 4"
            },
            {
                "answer_argument": "m.0y5g3h9",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Presidential Series Vol. 5"
            },
            {
                "answer_argument": "m.0y5g3j8",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Presidential Series Vol. 6"
            },
            {
                "answer_argument": "m.0y5g3kr",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Presidential Series Vol. 7"
            },
            {
                "answer_argument": "m.0y5js_7",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Secretary of State Series, Vol. 2"
            },
            {
                "answer_argument": "m.0y5jsmt",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Secretary of State Series, Vol. 1"
            },
            {
                "answer_argument": "m.0y5jt66",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Secretary of State Series, Vol. 3"
            },
            {
                "answer_argument": "m.0y5jt8w",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Secretary of State Series, Vol. 4"
            },
            {
                "answer_argument": "m.0y5jt9f",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Secretary of State Series, Vol. 5"
            },
            {
                "answer_argument": "m.0y5jt9r",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Secretary of State Series, Vol. 6"
            },
            {
                "answer_argument": "m.0y5jtc4",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Secretary of State Series, Vol. 7"
            },
            {
                "answer_argument": "m.0y5jtdl",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Secretary of State Series, Vol. 8"
            },
            {
                "answer_argument": "m.0y5jtfx",
                "answer_type": "Entity",
                "entity_name": "The Papers of James Madison, Secretary of State Series, Vol. 9"
            }
        ],
        "s_expression": "(JOIN (R book.author.works_written) m.0424m)",
        "s_expression_processed": "(JOIN (R book.author.works_written) m.0424m)"
    },
    {
        "qid": "WebQTest-171",
        "question": "what airport do you fly into to get to destin fl",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0rp8x",
                    "class": "common.topic",
                    "friendly_name": "destin fl",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.nearby_airports"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rp8x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rp8x ns:location.location.nearby_airports ?x .\n}\n",
        "topic_entity": "m.0rp8x",
        "answer": [
            {
                "answer_argument": "m.01q6d0",
                "answer_type": "Entity",
                "entity_name": "Destin–Fort Walton Beach Airport"
            },
            {
                "answer_argument": "m.02qzm7_",
                "answer_type": "Entity",
                "entity_name": "Destin Executive Airport"
            }
        ],
        "s_expression": "(JOIN (R location.location.nearby_airports) m.0rp8x)",
        "s_expression_processed": "(JOIN (R location.location.nearby_airports) m.0rp8x)"
    },
    {
        "qid": "WebQTest-174",
        "question": "what team does colin kaepernick play for",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03cm6b3",
                    "class": "common.topic",
                    "friendly_name": "colin kaepernick",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "sports.sports_team_roster.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03cm6b3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03cm6b3 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.03cm6b3",
        "answer": [
            {
                "answer_argument": "m.06rny",
                "answer_type": "Entity",
                "entity_name": "San Francisco 49ers"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.03cm6b3) sports.sports_team_roster.from NOW))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.03cm6b3) sports.sports_team_roster.from NOW))"
    },
    {
        "qid": "WebQTest-179",
        "question": "what artistic movement did henri matisse belong to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0gct_",
                    "class": "common.topic",
                    "friendly_name": "henri matisse",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "visual_art.visual_artist.associated_periods_or_movements"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gct_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gct_ ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "topic_entity": "m.0gct_",
        "answer": [
            {
                "answer_argument": "m.015r61",
                "answer_type": "Entity",
                "entity_name": "Modern art"
            },
            {
                "answer_argument": "m.03xj1",
                "answer_type": "Entity",
                "entity_name": "Impressionism"
            },
            {
                "answer_argument": "m.049xrv",
                "answer_type": "Entity",
                "entity_name": "Neo-impressionism"
            },
            {
                "answer_argument": "m.04lx1",
                "answer_type": "Entity",
                "entity_name": "Fauvism"
            },
            {
                "answer_argument": "m.04y41",
                "answer_type": "Entity",
                "entity_name": "Modernism"
            }
        ],
        "s_expression": "(JOIN (R visual_art.visual_artist.associated_periods_or_movements) m.0gct_)",
        "s_expression_processed": "(JOIN (R visual_art.visual_artist.associated_periods_or_movements) m.0gct_)"
    },
    {
        "qid": "WebQTest-186",
        "question": "who rules denmark right now",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0k6nt",
                    "class": "common.topic",
                    "friendly_name": "denmark",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "government.government_position_held.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k6nt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k6nt ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.0k6nt",
        "answer": [
            {
                "answer_argument": "m.05rn5r",
                "answer_type": "Entity",
                "entity_name": "Helle Thorning-Schmidt"
            },
            {
                "answer_argument": "m.05ysvw",
                "answer_type": "Entity",
                "entity_name": "Margrethe Vestager"
            },
            {
                "answer_argument": "m.0g2kv",
                "answer_type": "Entity",
                "entity_name": "Margrethe II of Denmark"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (JOIN (R government.governmental_jurisdiction.governing_officials) m.0k6nt) government.government_position_held.from NOW))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (JOIN (R government.governmental_jurisdiction.governing_officials) m.0k6nt) government.government_position_held.from NOW))"
    },
    {
        "qid": "WebQTest-187",
        "question": "what did stephen hawking study",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01tdnyh",
                    "class": "common.topic",
                    "friendly_name": "stephen hawking",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.major_field_of_study"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tdnyh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tdnyh ns:people.person.education ?y .\n?y ns:education.education.major_field_of_study ?x .\n}\n",
        "topic_entity": "m.01tdnyh",
        "answer": [
            {
                "answer_argument": "m.05qjt",
                "answer_type": "Entity",
                "entity_name": "Physics"
            }
        ],
        "s_expression": "(JOIN (R education.education.major_field_of_study) (JOIN (R people.person.education) m.01tdnyh))",
        "s_expression_processed": "(JOIN (R education.education.major_field_of_study) (JOIN (R people.person.education) m.01tdnyh))"
    },
    {
        "qid": "WebQTest-188",
        "question": "where did bristol palin go to school",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04jg1kh",
                    "class": "common.topic",
                    "friendly_name": "bristol palin",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04jg1kh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04jg1kh ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.04jg1kh",
        "answer": [
            {
                "answer_argument": "m.02fqd7",
                "answer_type": "Entity",
                "entity_name": "Juneau-Douglas High School"
            },
            {
                "answer_argument": "m.04jdv0r",
                "answer_type": "Entity",
                "entity_name": "Wasilla High School"
            },
            {
                "answer_argument": "m.08r1_d",
                "answer_type": "Entity",
                "entity_name": "West Anchorage High School"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.04jg1kh))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.04jg1kh))"
    },
    {
        "qid": "WebQTest-191",
        "question": "where did drew brees go to college wikianswers",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.030bdd",
                    "class": "common.topic",
                    "friendly_name": "drew brees",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030bdd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030bdd ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.030bdd",
        "answer": [
            {
                "answer_argument": "m.02bb47",
                "answer_type": "Entity",
                "entity_name": "Stanford Graduate School of Business"
            },
            {
                "answer_argument": "m.05x_5",
                "answer_type": "Entity",
                "entity_name": "Purdue University"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.030bdd)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.030bdd)))"
    },
    {
        "qid": "WebQTest-197",
        "question": "what places make up new england",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.029jpy",
                    "class": "common.topic",
                    "friendly_name": "new england",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "State",
                    "class": "common.topic",
                    "friendly_name": "State",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.contains"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "base.biblioness.bibs_location.loc_type"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.029jpy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.029jpy ns:location.location.contains ?x .\n?x ns:base.biblioness.bibs_location.loc_type ?sk0 .\nFILTER (str(?sk0) = \"State\")\n}\n",
        "topic_entity": "m.029jpy",
        "answer": [
            {
                "answer_argument": "m.01x73",
                "answer_type": "Entity",
                "entity_name": "Connecticut"
            },
            {
                "answer_argument": "m.050ks",
                "answer_type": "Entity",
                "entity_name": "Maine"
            },
            {
                "answer_argument": "m.059f4",
                "answer_type": "Entity",
                "entity_name": "New Hampshire"
            },
            {
                "answer_argument": "m.05k7sb",
                "answer_type": "Entity",
                "entity_name": "Massachusetts"
            },
            {
                "answer_argument": "m.06btq",
                "answer_type": "Entity",
                "entity_name": "Rhode Island"
            },
            {
                "answer_argument": "m.07_f2",
                "answer_type": "Entity",
                "entity_name": "Vermont"
            }
        ],
        "s_expression": "(AND (JOIN (R location.location.contains) m.029jpy) (JOIN base.biblioness.bibs_location.loc_type State))",
        "s_expression_processed": "(CONS (JOIN (R location.location.contains) m.029jpy) base.biblioness.bibs_location.loc_type State)"
    },
    {
        "qid": "WebQTest-205",
        "question": "what school did sir ernest rutherford go to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02m7r",
                    "class": "common.topic",
                    "friendly_name": "sir ernest rutherford",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02m7r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02m7r ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.02m7r",
        "answer": [
            {
                "answer_argument": "m.013tch",
                "answer_type": "Entity",
                "entity_name": "Nelson College"
            },
            {
                "answer_argument": "m.02722n",
                "answer_type": "Entity",
                "entity_name": "University of New Zealand"
            },
            {
                "answer_argument": "m.07tg4",
                "answer_type": "Entity",
                "entity_name": "University of Cambridge"
            },
            {
                "answer_argument": "m.07tk7",
                "answer_type": "Entity",
                "entity_name": "Trinity College, Cambridge"
            },
            {
                "answer_argument": "m.07xpm",
                "answer_type": "Entity",
                "entity_name": "University of Canterbury"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.02m7r))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.02m7r))"
    },
    {
        "qid": "WebQTest-214",
        "question": "which continents were part of the roman empire",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06cmp",
                    "class": "common.topic",
                    "friendly_name": "roman empire",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.location.partially_contained_by"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.partial_containment_relationship.partially_contained_by"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06cmp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06cmp ns:location.location.partially_contained_by ?y .\n?y ns:location.partial_containment_relationship.partially_contained_by ?x .\n}\n",
        "topic_entity": "m.06cmp",
        "answer": [
            {
                "answer_argument": "m.02j9z",
                "answer_type": "Entity",
                "entity_name": "Europe"
            },
            {
                "answer_argument": "m.04wsz",
                "answer_type": "Entity",
                "entity_name": "Middle East"
            },
            {
                "answer_argument": "m.05g2v",
                "answer_type": "Entity",
                "entity_name": "North Africa"
            }
        ],
        "s_expression": "(JOIN (R location.partial_containment_relationship.partially_contained_by) (JOIN (R location.location.partially_contained_by) m.06cmp))",
        "s_expression_processed": "(JOIN (R location.partial_containment_relationship.partially_contained_by) (JOIN (R location.location.partially_contained_by) m.06cmp))"
    },
    {
        "qid": "WebQTest-222",
        "question": "where is the seychelles on world map",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06sw9",
                    "class": "common.topic",
                    "friendly_name": "seychelles",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.locations.countries.continent"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06sw9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06sw9 ns:base.locations.countries.continent ?x .\n}\n",
        "topic_entity": "m.06sw9",
        "answer": [
            {
                "answer_argument": "m.0dg3n1",
                "answer_type": "Entity",
                "entity_name": "Africa"
            }
        ],
        "s_expression": "(JOIN (R base.locations.countries.continent) m.06sw9)",
        "s_expression_processed": "(JOIN (R base.locations.countries.continent) m.06sw9)"
    },
    {
        "qid": "WebQTest-246",
        "question": "what was nikola tesla inventions",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05d1y",
                    "class": "common.topic",
                    "friendly_name": "nikola tesla",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.inventor.inventions"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05d1y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05d1y ns:law.inventor.inventions ?x .\n}\n",
        "topic_entity": "m.05d1y",
        "answer": [
            {
                "answer_argument": "m.01s499",
                "answer_type": "Entity",
                "entity_name": "Neon lamp"
            },
            {
                "answer_argument": "m.02p196m",
                "answer_type": "Entity",
                "entity_name": "Induction motor"
            },
            {
                "answer_argument": "m.08262",
                "answer_type": "Entity",
                "entity_name": "Wireless telegraphy"
            },
            {
                "answer_argument": "m.09pf_",
                "answer_type": "Entity",
                "entity_name": "Three-phase electric power"
            },
            {
                "answer_argument": "m.09rh1",
                "answer_type": "Entity",
                "entity_name": "Tesla coil"
            },
            {
                "answer_argument": "m.0bt33",
                "answer_type": "Entity",
                "entity_name": "Alternating current"
            },
            {
                "answer_argument": "m.0qjjc",
                "answer_type": "Entity",
                "entity_name": "Remote control"
            }
        ],
        "s_expression": "(JOIN (R law.inventor.inventions) m.05d1y)",
        "s_expression_processed": "(JOIN (R law.inventor.inventions) m.05d1y)"
    },
    {
        "qid": "WebQTest-252",
        "question": "where was benjamin franklin educated",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.019fz",
                    "class": "common.topic",
                    "friendly_name": "benjamin franklin",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.019fz",
        "answer": [
            {
                "answer_argument": "m.02kj7g",
                "answer_type": "Entity",
                "entity_name": "Boston Latin School"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.019fz))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.019fz))"
    },
    {
        "qid": "WebQTest-264",
        "question": "what does australia use for currency",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0chghy",
                    "class": "common.topic",
                    "friendly_name": "australia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.0chghy",
        "answer": [
            {
                "answer_argument": "m.0kz1h",
                "answer_type": "Entity",
                "entity_name": "Australian dollar"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.0chghy)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.0chghy)"
    },
    {
        "qid": "WebQTest-281",
        "question": "what type of sports do japanese play",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03_3d",
                    "class": "common.topic",
                    "friendly_name": "japanese",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_location.teams"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:sports.sports_team_location.teams ?x .\n}\n",
        "topic_entity": "m.03_3d",
        "answer": [
            {
                "answer_argument": "m.02ppd68",
                "answer_type": "Entity",
                "entity_name": "Japan women's national volleyball team"
            },
            {
                "answer_argument": "m.02rkd3c",
                "answer_type": "Entity",
                "entity_name": "Japan men's national volleyball team"
            },
            {
                "answer_argument": "m.03xh50",
                "answer_type": "Entity",
                "entity_name": "Japan national football team"
            },
            {
                "answer_argument": "m.05p71j1",
                "answer_type": "Entity",
                "entity_name": "Japan women's national handball team"
            },
            {
                "answer_argument": "m.09gqcv",
                "answer_type": "Entity",
                "entity_name": "Japan national baseball team"
            },
            {
                "answer_argument": "m.0f9d97",
                "answer_type": "Entity",
                "entity_name": "Japan national handball team"
            },
            {
                "answer_argument": "m.0qfps15",
                "answer_type": "Entity",
                "entity_name": "Bridgestone-Anchor"
            },
            {
                "answer_argument": "m.0t_dl1j",
                "answer_type": "Entity",
                "entity_name": "Burning"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_location.teams) m.03_3d)",
        "s_expression_processed": "(JOIN (R sports.sports_team_location.teams) m.03_3d)"
    },
    {
        "qid": "WebQTest-287",
        "question": "what movies has carmen electra been in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01lbp",
                    "class": "common.topic",
                    "friendly_name": "carmen electra",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lbp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lbp ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.01lbp",
        "answer": [
            {
                "answer_argument": "m.0110g35j",
                "answer_type": "Entity",
                "entity_name": "Dragula"
            },
            {
                "answer_argument": "m.01265cw2",
                "answer_type": "Entity",
                "entity_name": "Chocolate City"
            },
            {
                "answer_argument": "m.01hjwf",
                "answer_type": "Entity",
                "entity_name": "Good Burger"
            },
            {
                "answer_argument": "m.01pj_5",
                "answer_type": "Entity",
                "entity_name": "Scary Movie"
            },
            {
                "answer_argument": "m.026hxwx",
                "answer_type": "Entity",
                "entity_name": "Epic Movie"
            },
            {
                "answer_argument": "m.02ntb8",
                "answer_type": "Entity",
                "entity_name": "Starsky & Hutch"
            },
            {
                "answer_argument": "m.02pjfgv",
                "answer_type": "Entity",
                "entity_name": "Full of It"
            },
            {
                "answer_argument": "m.02q5hqz",
                "answer_type": "Entity",
                "entity_name": "I Want Candy"
            },
            {
                "answer_argument": "m.02q674n",
                "answer_type": "Entity",
                "entity_name": "Lil' Pimp"
            },
            {
                "answer_argument": "m.02qdrjx",
                "answer_type": "Entity",
                "entity_name": "Bedtime Stories"
            },
            {
                "answer_argument": "m.03ck20l",
                "answer_type": "Entity",
                "entity_name": "Meet the Spartans"
            },
            {
                "answer_argument": "m.03cn85q",
                "answer_type": "Entity",
                "entity_name": "Christmas in Wonderland"
            },
            {
                "answer_argument": "m.03qhxn_",
                "answer_type": "Entity",
                "entity_name": "Perfume"
            },
            {
                "answer_argument": "m.03ywfs",
                "answer_type": "Entity",
                "entity_name": "Mr. 3000"
            },
            {
                "answer_argument": "m.040_ypz",
                "answer_type": "Entity",
                "entity_name": "Sol Goode"
            },
            {
                "answer_argument": "m.0479qny",
                "answer_type": "Entity",
                "entity_name": "Disaster Movie"
            },
            {
                "answer_argument": "m.04gbj8",
                "answer_type": "Entity",
                "entity_name": "Baywatch: Hawaiian Wedding"
            },
            {
                "answer_argument": "m.04j08hn",
                "answer_type": "Entity",
                "entity_name": "Naked Movie"
            },
            {
                "answer_argument": "m.04j0wxq",
                "answer_type": "Entity",
                "entity_name": "Hot Tamale"
            },
            {
                "answer_argument": "m.04j1hm9",
                "answer_type": "Entity",
                "entity_name": "30 Days Until I'm Famous"
            },
            {
                "answer_argument": "m.04j2m_x",
                "answer_type": "Entity",
                "entity_name": "Whacked!"
            },
            {
                "answer_argument": "m.04rk7s",
                "answer_type": "Entity",
                "entity_name": "Uptown Girls"
            },
            {
                "answer_argument": "m.056p3k",
                "answer_type": "Entity",
                "entity_name": "Get Over It"
            },
            {
                "answer_argument": "m.05nd09x",
                "answer_type": "Entity",
                "entity_name": "Searching for Bobby D"
            },
            {
                "answer_argument": "m.066b_n",
                "answer_type": "Entity",
                "entity_name": "Cheaper by the Dozen 2"
            },
            {
                "answer_argument": "m.072txz",
                "answer_type": "Entity",
                "entity_name": "National Lampoon's Pledge This!"
            },
            {
                "answer_argument": "m.07h9gp",
                "answer_type": "Entity",
                "entity_name": "Scary Movie 4"
            },
            {
                "answer_argument": "m.07zm5t",
                "answer_type": "Entity",
                "entity_name": "The Chosen One: Legend of the Raven"
            },
            {
                "answer_argument": "m.080kmxp",
                "answer_type": "Entity",
                "entity_name": "Oy Vey! My Son Is Gay!!"
            },
            {
                "answer_argument": "m.08pqpg",
                "answer_type": "Entity",
                "entity_name": "Date Movie"
            },
            {
                "answer_argument": "m.09t10b",
                "answer_type": "Entity",
                "entity_name": "American Dreamz"
            },
            {
                "answer_argument": "m.0b5mw7",
                "answer_type": "Entity",
                "entity_name": "Dirty Love"
            },
            {
                "answer_argument": "m.0b64qt1",
                "answer_type": "Entity",
                "entity_name": "Starstruck"
            },
            {
                "answer_argument": "m.0bh8xz2",
                "answer_type": "Entity",
                "entity_name": "Barry Munday"
            },
            {
                "answer_argument": "m.0c02882",
                "answer_type": "Entity",
                "entity_name": "American Vampire"
            },
            {
                "answer_argument": "m.0cr_bqp",
                "answer_type": "Entity",
                "entity_name": "Carmen Electra's Fit to Strip"
            },
            {
                "answer_argument": "m.0crrvj7",
                "answer_type": "Entity",
                "entity_name": "Rent Control"
            },
            {
                "answer_argument": "m.0crv9zg",
                "answer_type": "Entity",
                "entity_name": "BThere Dvd Magazine"
            },
            {
                "answer_argument": "m.0crvchf",
                "answer_type": "Entity",
                "entity_name": "We Are Family"
            },
            {
                "answer_argument": "m.0crw06",
                "answer_type": "Entity",
                "entity_name": "Monster Island"
            },
            {
                "answer_argument": "m.0d042l",
                "answer_type": "Entity",
                "entity_name": "Max Havoc: Curse of the Dragon"
            },
            {
                "answer_argument": "m.0d2l2_",
                "answer_type": "Entity",
                "entity_name": "My Boss's Daughter"
            },
            {
                "answer_argument": "m.0d9z_7",
                "answer_type": "Entity",
                "entity_name": "Getting Played"
            },
            {
                "answer_argument": "m.0f0sjn",
                "answer_type": "Entity",
                "entity_name": "The Mating Habits of the Earthbound Human"
            },
            {
                "answer_argument": "m.0gxsyb5",
                "answer_type": "Entity",
                "entity_name": "The Back Nine"
            },
            {
                "answer_argument": "m.0h3w444",
                "answer_type": "Entity",
                "entity_name": "2-Headed Shark Attack"
            },
            {
                "answer_argument": "m.0h944f1",
                "answer_type": "Entity",
                "entity_name": "Mardi Gras: Spring Break"
            },
            {
                "answer_argument": "m.0tl8nwg",
                "answer_type": "Entity",
                "entity_name": "Lap Dance"
            },
            {
                "answer_argument": "m.0tl8ql6",
                "answer_type": "Entity",
                "entity_name": "Book of Fire"
            },
            {
                "answer_argument": "m.0tl8srv",
                "answer_type": "Entity",
                "entity_name": "The Axe Boat"
            },
            {
                "answer_argument": "m.0tl8vtw",
                "answer_type": "Entity",
                "entity_name": "Lolo's Cafe"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.01lbp))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.01lbp))"
    },
    {
        "qid": "WebQTest-289",
        "question": "when do world war ii end",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.081pw",
                    "class": "common.topic",
                    "friendly_name": "world war",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "time.event.end_date"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.081pw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.081pw ns:time.event.end_date ?x .\n}\n",
        "topic_entity": "m.081pw",
        "answer": [
            {
                "answer_argument": "1945-09-02",
                "answer_type": "Value",
                "entity_name": null
            }
        ],
        "s_expression": "(JOIN (R time.event.end_date) m.081pw)",
        "s_expression_processed": "(JOIN (R time.event.end_date) m.081pw)"
    },
    {
        "qid": "WebQTest-294",
        "question": "who was carolus linnaeus",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01lwd",
                    "class": "common.topic",
                    "friendly_name": "carolus linnaeus",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.profession"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwd ns:people.person.profession ?x .\n}\n",
        "topic_entity": "m.01lwd",
        "answer": [
            {
                "answer_argument": "m.02h6p1f",
                "answer_type": "Entity",
                "entity_name": "Botanist"
            },
            {
                "answer_argument": "m.05t4q",
                "answer_type": "Entity",
                "entity_name": "Physician"
            },
            {
                "answer_argument": "m.06q2q",
                "answer_type": "Entity",
                "entity_name": "Scientist"
            },
            {
                "answer_argument": "m.07lqg0",
                "answer_type": "Entity",
                "entity_name": "Biologist"
            }
        ],
        "s_expression": "(JOIN (R people.person.profession) m.01lwd)",
        "s_expression_processed": "(JOIN (R people.person.profession) m.01lwd)"
    },
    {
        "qid": "WebQTest-313",
        "question": "who does albert pujols play for 2012",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.035gcb",
                    "class": "common.topic",
                    "friendly_name": "albert pujols",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2012,
                        "sports.sports_team_roster.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035gcb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035gcb ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.035gcb",
        "answer": [
            {
                "answer_argument": "m.04wmvz",
                "answer_type": "Entity",
                "entity_name": "Los Angeles Angels of Anaheim"
            },
            {
                "answer_argument": "m.0f3wm2",
                "answer_type": "Entity",
                "entity_name": "Scottsdale Scorpions"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.035gcb) sports.sports_team_roster.from 2012))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.035gcb) sports.sports_team_roster.from 2012))"
    },
    {
        "qid": "WebQTest-335",
        "question": "what type of money to take to cuba",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d04z6",
                    "class": "common.topic",
                    "friendly_name": "cuba",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d04z6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d04z6 ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.0d04z6",
        "answer": [
            {
                "answer_argument": "m.049p2z",
                "answer_type": "Entity",
                "entity_name": "Cuban peso"
            },
            {
                "answer_argument": "m.049p6c",
                "answer_type": "Entity",
                "entity_name": "Cuban convertible peso"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.0d04z6)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.0d04z6)"
    },
    {
        "qid": "WebQTest-356",
        "question": "what airport is near arlington tx",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0nqph",
                    "class": "common.topic",
                    "friendly_name": "arlington tx",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.nearby_airports"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nqph)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nqph ns:location.location.nearby_airports ?x .\n}\n",
        "topic_entity": "m.0nqph",
        "answer": [
            {
                "answer_argument": "m.02pq2d8",
                "answer_type": "Entity",
                "entity_name": "Arlington Municipal Airport"
            }
        ],
        "s_expression": "(JOIN (R location.location.nearby_airports) m.0nqph)",
        "s_expression_processed": "(JOIN (R location.location.nearby_airports) m.0nqph)"
    },
    {
        "qid": "WebQTest-360",
        "question": "where did emperor hirohito live",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02sm8",
                    "class": "common.topic",
                    "friendly_name": "emperor hirohito",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.place_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02sm8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02sm8 ns:people.person.place_of_birth ?x .\n}\n",
        "topic_entity": "m.02sm8",
        "answer": [
            {
                "answer_argument": "m.03xm9l",
                "answer_type": "Entity",
                "entity_name": "Aoyama, Minato, Tokyo"
            }
        ],
        "s_expression": "(JOIN (R people.person.place_of_birth) m.02sm8)",
        "s_expression_processed": "(JOIN (R people.person.place_of_birth) m.02sm8)"
    },
    {
        "qid": "WebQTest-375",
        "question": "what was the first book charles dickens wrote",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "book.book",
                    "class": "book.book",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01v9724",
                    "class": "common.topic",
                    "friendly_name": "charles dickens",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.author.works_written"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "book.written_work.copyright_date"
                }
            ]
        },
        "function": "argmin",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01v9724)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01v9724 ns:book.author.works_written ?x .\n?x ns:common.topic.notable_types ns:m.01xryvm .\n?x ns:book.written_work.copyright_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "topic_entity": "m.01v9724",
        "answer": [
            {
                "answer_argument": "m.015cf8",
                "answer_type": "Entity",
                "entity_name": "Oliver Twist"
            }
        ],
        "s_expression": "(ARGMIN (AND book.book (JOIN (R book.author.works_written) m.01v9724)) book.written_work.copyright_date)",
        "s_expression_processed": "(ARGMIN (AND book.book (JOIN (R book.author.works_written) m.01v9724)) book.written_work.copyright_date)"
    },
    {
        "qid": "WebQTest-376",
        "question": "what books did agatha christie wrote",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0ldd",
                    "class": "common.topic",
                    "friendly_name": "agatha christie",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.author.book_editions_published"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ldd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ldd ns:book.author.book_editions_published ?x .\n}\n",
        "topic_entity": "m.0ldd",
        "answer": [
            {
                "answer_argument": "m.028xw99",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery"
            },
            {
                "answer_argument": "m.028xy2v",
                "answer_type": "Entity",
                "entity_name": "The Hound of Death"
            },
            {
                "answer_argument": "m.028xyps",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.028y5cy",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy"
            },
            {
                "answer_argument": "m.028yc88",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.028ym09",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.028yq8_",
                "answer_type": "Entity",
                "entity_name": "Hercule Poirot’s Christmas"
            },
            {
                "answer_argument": "m.04t_7_1",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence"
            },
            {
                "answer_argument": "m.04t_7_v",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence"
            },
            {
                "answer_argument": "m.04t_7vw",
                "answer_type": "Entity",
                "entity_name": "Ordeal by innocence"
            },
            {
                "answer_argument": "m.04t_7wl",
                "answer_type": "Entity",
                "entity_name": "Ordeal By Innocence"
            },
            {
                "answer_argument": "m.04t_7wv",
                "answer_type": "Entity",
                "entity_name": "Ordeal By Innocence"
            },
            {
                "answer_argument": "m.04t_7x2",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence"
            },
            {
                "answer_argument": "m.04t_7xb",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence"
            },
            {
                "answer_argument": "m.04t_7xl",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence"
            },
            {
                "answer_argument": "m.04t_7xw",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence"
            },
            {
                "answer_argument": "m.04t_7y3",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence"
            },
            {
                "answer_argument": "m.04t_7yc",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence"
            },
            {
                "answer_argument": "m.04t_7yn",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence"
            },
            {
                "answer_argument": "m.04t_7yx",
                "answer_type": "Entity",
                "entity_name": "Ordeal by innocence"
            },
            {
                "answer_argument": "m.04t_7zc",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence"
            },
            {
                "answer_argument": "m.04t_7zm",
                "answer_type": "Entity",
                "entity_name": "Ordeal by innocence"
            },
            {
                "answer_argument": "m.04t_8jf",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04t_8jz",
                "answer_type": "Entity",
                "entity_name": "Ordeal by innocence"
            },
            {
                "answer_argument": "m.04t_8kv",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence (Signature Editions)"
            },
            {
                "answer_argument": "m.04t_8n2",
                "answer_type": "Entity",
                "entity_name": "Ordeal by Innocence (Agatha Christie Mysteries Collection)"
            },
            {
                "answer_argument": "m.04t_j7h",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_j8l",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_j9l",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_j9v",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_jb2",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_jbc",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_jbm",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_jbw",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_jc3",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_jcc",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia."
            },
            {
                "answer_argument": "m.04t_jcm",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_jcw",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_jd3",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_jdc",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_jdt",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia"
            },
            {
                "answer_argument": "m.04t_l_j",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04t_l8w",
                "answer_type": "Entity",
                "entity_name": "The Hollow"
            },
            {
                "answer_argument": "m.04t_l93",
                "answer_type": "Entity",
                "entity_name": "The Hollow"
            },
            {
                "answer_argument": "m.04t_l9c",
                "answer_type": "Entity",
                "entity_name": "The hollow"
            },
            {
                "answer_argument": "m.04t_l9v",
                "answer_type": "Entity",
                "entity_name": "The Hollow"
            },
            {
                "answer_argument": "m.04t_lb3",
                "answer_type": "Entity",
                "entity_name": "The Hollow"
            },
            {
                "answer_argument": "m.04t_lbc",
                "answer_type": "Entity",
                "entity_name": "The Hollow"
            },
            {
                "answer_argument": "m.04t_lbn",
                "answer_type": "Entity",
                "entity_name": "The Hollow"
            },
            {
                "answer_argument": "m.04t_lbx",
                "answer_type": "Entity",
                "entity_name": "The Hollow."
            },
            {
                "answer_argument": "m.04t_lc4",
                "answer_type": "Entity",
                "entity_name": "The Hollow"
            },
            {
                "answer_argument": "m.04t_lcd",
                "answer_type": "Entity",
                "entity_name": "The Hollow"
            },
            {
                "answer_argument": "m.04t_lcp",
                "answer_type": "Entity",
                "entity_name": "The hollow"
            },
            {
                "answer_argument": "m.04t_m0b",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04t_m0w",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04t_m13",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia (Poirot)"
            },
            {
                "answer_argument": "m.04t_m1c",
                "answer_type": "Entity",
                "entity_name": "Murder In Mesopotamia (Agatha Christie Mystery Collection) Bantam Blue Leatherette Edition"
            },
            {
                "answer_argument": "m.04t_m2c",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04t_m2m",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04t_m2w",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia (BBC Radio Presents)"
            },
            {
                "answer_argument": "m.04t_m3n",
                "answer_type": "Entity",
                "entity_name": "Murder in Mesopotamia (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04t_m7z",
                "answer_type": "Entity",
                "entity_name": "The Hollow"
            },
            {
                "answer_argument": "m.04t_m8d",
                "answer_type": "Entity",
                "entity_name": "The Hollow (Poirot)"
            },
            {
                "answer_argument": "m.04t_m8n",
                "answer_type": "Entity",
                "entity_name": "The Hollow (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04t_m8x",
                "answer_type": "Entity",
                "entity_name": "The Hollow (Winterbrook Edition)"
            },
            {
                "answer_argument": "m.04t_m94",
                "answer_type": "Entity",
                "entity_name": "The Hollow (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04t_m9f",
                "answer_type": "Entity",
                "entity_name": "The Hollow (A Hercule Poirot Novel)"
            },
            {
                "answer_argument": "m.04t_m9p",
                "answer_type": "Entity",
                "entity_name": "The Hollow (Ulverscroft Large Print)"
            },
            {
                "answer_argument": "m.04t_npl",
                "answer_type": "Entity",
                "entity_name": "The Clocks"
            },
            {
                "answer_argument": "m.04t_npv",
                "answer_type": "Entity",
                "entity_name": "The Clocks"
            },
            {
                "answer_argument": "m.04t_nq2",
                "answer_type": "Entity",
                "entity_name": "The Clocks"
            },
            {
                "answer_argument": "m.04t_nqb",
                "answer_type": "Entity",
                "entity_name": "CLOCKS"
            },
            {
                "answer_argument": "m.04t_nqm",
                "answer_type": "Entity",
                "entity_name": "The Clocks"
            },
            {
                "answer_argument": "m.04t_nqw",
                "answer_type": "Entity",
                "entity_name": "The Clocks"
            },
            {
                "answer_argument": "m.04t_nr3",
                "answer_type": "Entity",
                "entity_name": "The Clocks"
            },
            {
                "answer_argument": "m.04t_nrc",
                "answer_type": "Entity",
                "entity_name": "The Clocks"
            },
            {
                "answer_argument": "m.04t_nrm",
                "answer_type": "Entity",
                "entity_name": "Clocks"
            },
            {
                "answer_argument": "m.04t_nrw",
                "answer_type": "Entity",
                "entity_name": "The Clocks"
            },
            {
                "answer_argument": "m.04t_nt9",
                "answer_type": "Entity",
                "entity_name": "Clocks"
            },
            {
                "answer_argument": "m.04t_pw7",
                "answer_type": "Entity",
                "entity_name": "The Clocks (Poirot)"
            },
            {
                "answer_argument": "m.04t_pxr",
                "answer_type": "Entity",
                "entity_name": "Clocks (Hc Collection)"
            },
            {
                "answer_argument": "m.04t_py0",
                "answer_type": "Entity",
                "entity_name": "The Clocks (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04t_py8",
                "answer_type": "Entity",
                "entity_name": "The Clocks (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04t_pyj",
                "answer_type": "Entity",
                "entity_name": "The Clocks (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04t_pys",
                "answer_type": "Entity",
                "entity_name": "Clocks (Ulverscroft Large Print)"
            },
            {
                "answer_argument": "m.04t_pzb",
                "answer_type": "Entity",
                "entity_name": "The Clocks (A Hercule Poirot Murder Mystery)"
            },
            {
                "answer_argument": "m.04t_w88",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death"
            },
            {
                "answer_argument": "m.04t_w8j",
                "answer_type": "Entity",
                "entity_name": "Appointment With Death"
            },
            {
                "answer_argument": "m.04t_w91",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death"
            },
            {
                "answer_argument": "m.04t_w99",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death"
            },
            {
                "answer_argument": "m.04t_w9k",
                "answer_type": "Entity",
                "entity_name": "Appointment with death"
            },
            {
                "answer_argument": "m.04t_wb0",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death"
            },
            {
                "answer_argument": "m.04t_wb9",
                "answer_type": "Entity",
                "entity_name": "Appointment With Death"
            },
            {
                "answer_argument": "m.04t_wbl",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death"
            },
            {
                "answer_argument": "m.04t_wbv",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death"
            },
            {
                "answer_argument": "m.04t_wc2",
                "answer_type": "Entity",
                "entity_name": "Appointment With Death"
            },
            {
                "answer_argument": "m.04t_wcc",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death"
            },
            {
                "answer_argument": "m.04t_wdp",
                "answer_type": "Entity",
                "entity_name": "Appointment with death."
            },
            {
                "answer_argument": "m.04t_y10",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death (The Christie Collection)"
            },
            {
                "answer_argument": "m.04t_y18",
                "answer_type": "Entity",
                "entity_name": "Appointment with death"
            },
            {
                "answer_argument": "m.04t_y1p",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death (Dell; 10246)"
            },
            {
                "answer_argument": "m.04t_y1y",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04t_y2f",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04t_y2p",
                "answer_type": "Entity",
                "entity_name": "Appointment with Death (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04t_y2y",
                "answer_type": "Entity",
                "entity_name": "Appointment With Death (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04t_y52",
                "answer_type": "Entity",
                "entity_name": "Appointment With Death (G K Hall Large Print Book Series)"
            },
            {
                "answer_argument": "m.04t_z02",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington"
            },
            {
                "answer_argument": "m.04t_z0b",
                "answer_type": "Entity",
                "entity_name": "4.50 From Paddington"
            },
            {
                "answer_argument": "m.04t_z0l",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington"
            },
            {
                "answer_argument": "m.04t_z0v",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington"
            },
            {
                "answer_argument": "m.04t_z12",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington."
            },
            {
                "answer_argument": "m.04t_z1b",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington"
            },
            {
                "answer_argument": "m.04tsx_1",
                "answer_type": "Entity",
                "entity_name": "Hickory dickory dock"
            },
            {
                "answer_argument": "m.04tsx_h",
                "answer_type": "Entity",
                "entity_name": "The thirteen problems"
            },
            {
                "answer_argument": "m.04tsx_y",
                "answer_type": "Entity",
                "entity_name": "Dead man's folly"
            },
            {
                "answer_argument": "m.04tsxr2",
                "answer_type": "Entity",
                "entity_name": "Elephants can remember"
            },
            {
                "answer_argument": "m.04tsxrj",
                "answer_type": "Entity",
                "entity_name": "The murder at the vicarage"
            },
            {
                "answer_argument": "m.04tsxrz",
                "answer_type": "Entity",
                "entity_name": "Sleeping murder"
            },
            {
                "answer_argument": "m.04tsxsd",
                "answer_type": "Entity",
                "entity_name": "Sad cypress"
            },
            {
                "answer_argument": "m.04tsxsv",
                "answer_type": "Entity",
                "entity_name": "The big four"
            },
            {
                "answer_argument": "m.04tsxt8",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tsxtq",
                "answer_type": "Entity",
                "entity_name": "The murder on the links"
            },
            {
                "answer_argument": "m.04tsxv4",
                "answer_type": "Entity",
                "entity_name": "The regatta mystery and other stories"
            },
            {
                "answer_argument": "m.04tsxvl",
                "answer_type": "Entity",
                "entity_name": "Taken at the flood"
            },
            {
                "answer_argument": "m.04tsxw0",
                "answer_type": "Entity",
                "entity_name": "At Bertram's Hotel"
            },
            {
                "answer_argument": "m.04tsxwg",
                "answer_type": "Entity",
                "entity_name": "Third girl"
            },
            {
                "answer_argument": "m.04tsxwx",
                "answer_type": "Entity",
                "entity_name": "Poirot investigates"
            },
            {
                "answer_argument": "m.04tsxxb",
                "answer_type": "Entity",
                "entity_name": "Cards on the table"
            },
            {
                "answer_argument": "m.04tsxxs",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04tsxy6",
                "answer_type": "Entity",
                "entity_name": "While the light lasts and other stories"
            },
            {
                "answer_argument": "m.04tsxyp",
                "answer_type": "Entity",
                "entity_name": "Death in the clouds"
            },
            {
                "answer_argument": "m.04tsxz5",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04tsxzm",
                "answer_type": "Entity",
                "entity_name": "Hallowe'en party"
            },
            {
                "answer_argument": "m.04tsy0c",
                "answer_type": "Entity",
                "entity_name": "Mrs. McGinty's dead"
            },
            {
                "answer_argument": "m.04tsy0t",
                "answer_type": "Entity",
                "entity_name": "Destination unknown"
            },
            {
                "answer_argument": "m.04tsy17",
                "answer_type": "Entity",
                "entity_name": "Five little pigs"
            },
            {
                "answer_argument": "m.04tsy1x",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04tsy2b",
                "answer_type": "Entity",
                "entity_name": "Murder on the Orient Express"
            },
            {
                "answer_argument": "m.04tsy2s",
                "answer_type": "Entity",
                "entity_name": "A pocket full of rye"
            },
            {
                "answer_argument": "m.04tsy36",
                "answer_type": "Entity",
                "entity_name": "A murder is announced"
            },
            {
                "answer_argument": "m.04tsy3n",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04tsy42",
                "answer_type": "Entity",
                "entity_name": "Dumb witness"
            },
            {
                "answer_argument": "m.04tsy4j",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware dies"
            },
            {
                "answer_argument": "m.04tsy4z",
                "answer_type": "Entity",
                "entity_name": "The seven dials mystery"
            },
            {
                "answer_argument": "m.04tsy5d",
                "answer_type": "Entity",
                "entity_name": "The secret adversary"
            },
            {
                "answer_argument": "m.04tsy5v",
                "answer_type": "Entity",
                "entity_name": "The mystery of the blue train"
            },
            {
                "answer_argument": "m.04tsy68",
                "answer_type": "Entity",
                "entity_name": "The harlequin tea set and other stories"
            },
            {
                "answer_argument": "m.04tsy6q",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04tsy74",
                "answer_type": "Entity",
                "entity_name": "Evil under the sun"
            },
            {
                "answer_argument": "m.04tsy7l",
                "answer_type": "Entity",
                "entity_name": "One, two, buckle my shoe"
            },
            {
                "answer_argument": "m.04tsy80",
                "answer_type": "Entity",
                "entity_name": "Cat among the pigeons"
            },
            {
                "answer_argument": "m.04tsy8g",
                "answer_type": "Entity",
                "entity_name": "Partners in crime"
            },
            {
                "answer_argument": "m.04tz_0n",
                "answer_type": "Entity",
                "entity_name": "The Pale Horse (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04tz_0x",
                "answer_type": "Entity",
                "entity_name": "The Pale Horse (The Agatha Christie mystery collection)"
            },
            {
                "answer_argument": "m.04tz_15",
                "answer_type": "Entity",
                "entity_name": "Pale Horse (R)"
            },
            {
                "answer_argument": "m.04tz_1f",
                "answer_type": "Entity",
                "entity_name": "The Pale Horse (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04tz_qt",
                "answer_type": "Entity",
                "entity_name": "Death On The Nile (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04tz_rm",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04tz_rw",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04tz_s3",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (Hercule Poirot Mysteries (Audio))"
            },
            {
                "answer_argument": "m.04tz_sc",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04tz_sm",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04tz_tk",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04tz_wr",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04tzmk1",
                "answer_type": "Entity",
                "entity_name": "The A.B.C. murders"
            },
            {
                "answer_argument": "m.04tzml0",
                "answer_type": "Entity",
                "entity_name": "The A.B.C. murders"
            },
            {
                "answer_argument": "m.04tzmlr",
                "answer_type": "Entity",
                "entity_name": "The A.B.C. Murders"
            },
            {
                "answer_argument": "m.04tzmm0",
                "answer_type": "Entity",
                "entity_name": "The A.B.C. Murders"
            },
            {
                "answer_argument": "m.04tzmm8",
                "answer_type": "Entity",
                "entity_name": "The A.B.C. Murders"
            },
            {
                "answer_argument": "m.04tzmmj",
                "answer_type": "Entity",
                "entity_name": "The A.B.C. Murders"
            },
            {
                "answer_argument": "m.04tzmms",
                "answer_type": "Entity",
                "entity_name": "The A.B.C. Murders"
            },
            {
                "answer_argument": "m.04tzmn0",
                "answer_type": "Entity",
                "entity_name": "The A.B.C. Murders"
            },
            {
                "answer_argument": "m.04tzmn8",
                "answer_type": "Entity",
                "entity_name": "The A. B. C. Murders"
            },
            {
                "answer_argument": "m.04tzmnk",
                "answer_type": "Entity",
                "entity_name": "The A. B. C. Murders"
            },
            {
                "answer_argument": "m.04tzmnv",
                "answer_type": "Entity",
                "entity_name": "The A.B.C. Murders (The Christie Collection)"
            },
            {
                "answer_argument": "m.04tzmpj",
                "answer_type": "Entity",
                "entity_name": "The A.B.C. murders"
            },
            {
                "answer_argument": "m.04tznqp",
                "answer_type": "Entity",
                "entity_name": "Death Comes as the End"
            },
            {
                "answer_argument": "m.04tznqy",
                "answer_type": "Entity",
                "entity_name": "Death Comes as the End"
            },
            {
                "answer_argument": "m.04tznsk",
                "answer_type": "Entity",
                "entity_name": "Death Comes as the End"
            },
            {
                "answer_argument": "m.04tznt2",
                "answer_type": "Entity",
                "entity_name": "Death Comes as the End"
            },
            {
                "answer_argument": "m.04tzntb",
                "answer_type": "Entity",
                "entity_name": "Death Comes as the End"
            },
            {
                "answer_argument": "m.04tzntl",
                "answer_type": "Entity",
                "entity_name": "Death Comes As the End"
            },
            {
                "answer_argument": "m.04tznv3",
                "answer_type": "Entity",
                "entity_name": "Death Comes as the End"
            },
            {
                "answer_argument": "m.04tznvc",
                "answer_type": "Entity",
                "entity_name": "Death Comes As the End"
            },
            {
                "answer_argument": "m.04tznvx",
                "answer_type": "Entity",
                "entity_name": "Death Comes as the End"
            },
            {
                "answer_argument": "m.04tznw4",
                "answer_type": "Entity",
                "entity_name": "Death Comes As the End"
            },
            {
                "answer_argument": "m.04tznwp",
                "answer_type": "Entity",
                "entity_name": "Death Comes as the End"
            },
            {
                "answer_argument": "m.04tznwy",
                "answer_type": "Entity",
                "entity_name": "Death Comes as the End"
            },
            {
                "answer_argument": "m.04tzps5",
                "answer_type": "Entity",
                "entity_name": "Death Comes as the End (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04tzpsf",
                "answer_type": "Entity",
                "entity_name": "Death Comes As the End (The Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04tzpsq",
                "answer_type": "Entity",
                "entity_name": "Death Comes As the End (Mystery Masters)"
            },
            {
                "answer_argument": "m.04tzpsz",
                "answer_type": "Entity",
                "entity_name": "Death comes as the end"
            },
            {
                "answer_argument": "m.04tzpv2",
                "answer_type": "Entity",
                "entity_name": "Death Comes As the End (Mystery Masters)"
            },
            {
                "answer_argument": "m.04tzql3",
                "answer_type": "Entity",
                "entity_name": "After the Funeral"
            },
            {
                "answer_argument": "m.04tzqlc",
                "answer_type": "Entity",
                "entity_name": "After the Funeral"
            },
            {
                "answer_argument": "m.04tzqlm",
                "answer_type": "Entity",
                "entity_name": "After the Funeral"
            },
            {
                "answer_argument": "m.04tzqlw",
                "answer_type": "Entity",
                "entity_name": "After the Funeral"
            },
            {
                "answer_argument": "m.04tzqm3",
                "answer_type": "Entity",
                "entity_name": "After the Funeral"
            },
            {
                "answer_argument": "m.04tzqmc",
                "answer_type": "Entity",
                "entity_name": "After the Funeral"
            },
            {
                "answer_argument": "m.04tzqmn",
                "answer_type": "Entity",
                "entity_name": "After the funeral."
            },
            {
                "answer_argument": "m.04tzqmx",
                "answer_type": "Entity",
                "entity_name": "After The Funeral"
            },
            {
                "answer_argument": "m.04tzqnn",
                "answer_type": "Entity",
                "entity_name": "After the Funeral"
            },
            {
                "answer_argument": "m.04tzqnx",
                "answer_type": "Entity",
                "entity_name": "After the funeral."
            },
            {
                "answer_argument": "m.04tzqpf",
                "answer_type": "Entity",
                "entity_name": "After the Funeral (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04tzscv",
                "answer_type": "Entity",
                "entity_name": "After the Funeral (BBC Audio Crime)"
            },
            {
                "answer_argument": "m.04tzsd2",
                "answer_type": "Entity",
                "entity_name": "After the Funeral (BBC Audio Crime)"
            },
            {
                "answer_argument": "m.04tzsdb",
                "answer_type": "Entity",
                "entity_name": "After the Funeral (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04tzsdl",
                "answer_type": "Entity",
                "entity_name": "After the Funeral (The Christie Collection)"
            },
            {
                "answer_argument": "m.04tzsdv",
                "answer_type": "Entity",
                "entity_name": "After the Funeral (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04tzsf2",
                "answer_type": "Entity",
                "entity_name": "After the Funeral (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04tzsfl",
                "answer_type": "Entity",
                "entity_name": "After the Funeral (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04tzwk8",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwks",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwl7",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwlq",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwlz",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwm6",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwmr",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwn_",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwn6",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwng",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwnr",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwp7",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwpy",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwq5",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwqf",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzwqp",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile."
            },
            {
                "answer_argument": "m.04tzyh6",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzyhn",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile"
            },
            {
                "answer_argument": "m.04tzyj2",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04tzyjc",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (The Christie Collection)"
            },
            {
                "answer_argument": "m.04tzyjn",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04tzyk4",
                "answer_type": "Entity",
                "entity_name": "Death on the Nile (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04tzyq5",
                "answer_type": "Entity",
                "entity_name": "The pale horse"
            },
            {
                "answer_argument": "m.04tzyqn",
                "answer_type": "Entity",
                "entity_name": "The Pale Horse"
            },
            {
                "answer_argument": "m.04tzyqx",
                "answer_type": "Entity",
                "entity_name": "The Pale Horse"
            },
            {
                "answer_argument": "m.04tzyr4",
                "answer_type": "Entity",
                "entity_name": "The Pale Horse"
            },
            {
                "answer_argument": "m.04tzyrn",
                "answer_type": "Entity",
                "entity_name": "Pale Horse"
            },
            {
                "answer_argument": "m.04tzyry",
                "answer_type": "Entity",
                "entity_name": "The Pale Horse"
            },
            {
                "answer_argument": "m.04tzys5",
                "answer_type": "Entity",
                "entity_name": "Pale Horse"
            },
            {
                "answer_argument": "m.04tzysg",
                "answer_type": "Entity",
                "entity_name": "The Pale Horse"
            },
            {
                "answer_argument": "m.04tzysq",
                "answer_type": "Entity",
                "entity_name": "The pale horse."
            },
            {
                "answer_argument": "m.04tzysz",
                "answer_type": "Entity",
                "entity_name": "The Pale Horse"
            },
            {
                "answer_argument": "m.04tzyt6",
                "answer_type": "Entity",
                "entity_name": "The pale horse"
            },
            {
                "answer_argument": "m.04tzytn",
                "answer_type": "Entity",
                "entity_name": "Pale horse"
            },
            {
                "answer_argument": "m.04tzyv1",
                "answer_type": "Entity",
                "entity_name": "The Pale Horse"
            },
            {
                "answer_argument": "m.04tzyvw",
                "answer_type": "Entity",
                "entity_name": "The pale horse"
            },
            {
                "answer_argument": "m.04v_14g",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04v_15_",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04v_150",
                "answer_type": "Entity",
                "entity_name": "Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04v_16f",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles."
            },
            {
                "answer_argument": "m.04v_16p",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04v_174",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04v_17f",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04v_17w",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04v_18_",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04v_189",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04v_2s4",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04v_2tc",
                "answer_type": "Entity",
                "entity_name": "Mysterious Affair at Styles/Cassettes (1362)"
            },
            {
                "answer_argument": "m.04v_2tx",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles (Dodo Press)"
            },
            {
                "answer_argument": "m.04v_2v5",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles (Large Print Edition)"
            },
            {
                "answer_argument": "m.04v_2vg",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles (Hercule Poirot Mysteries (Audio))"
            },
            {
                "answer_argument": "m.04v_2vq",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair At Styles (Classic Books on Cassettes Collection) (Classic Books on Cassettes Collection)"
            },
            {
                "answer_argument": "m.04v_2vz",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles (Hercule Poirot Mysteries (Audio))"
            },
            {
                "answer_argument": "m.04v_2wg",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles, Large-Print Edition"
            },
            {
                "answer_argument": "m.04v006z",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington"
            },
            {
                "answer_argument": "m.04v007d",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington (Miss Marple)"
            },
            {
                "answer_argument": "m.04v007n",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington (Miss Marple)"
            },
            {
                "answer_argument": "m.04v0084",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v008p",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington (BBC Audio Crime)"
            },
            {
                "answer_argument": "m.04v008y",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington (Agatha Christie Signature Edition)"
            },
            {
                "answer_argument": "m.04v0095",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington (Miss Marple)"
            },
            {
                "answer_argument": "m.04v00bc",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v01wm",
                "answer_type": "Entity",
                "entity_name": "4.50 from Paddington (Miss Marple Mysteries (Audio))"
            },
            {
                "answer_argument": "m.04v0vs1",
                "answer_type": "Entity",
                "entity_name": "The Witness for the Prosecution and Other Stories"
            },
            {
                "answer_argument": "m.04v0vs9",
                "answer_type": "Entity",
                "entity_name": "The Witness for the Prosecution and Other Stories (Mystery Masters Series)"
            },
            {
                "answer_argument": "m.04v0vsk",
                "answer_type": "Entity",
                "entity_name": "The Witness for the Prosecution and Other Stories (Mystery Masters Series)"
            },
            {
                "answer_argument": "m.04v0vst",
                "answer_type": "Entity",
                "entity_name": "The witness for the prosecution and other stories"
            },
            {
                "answer_argument": "m.04v0vvh",
                "answer_type": "Entity",
                "entity_name": "Witness for the Prosecution and Other Stories (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04v0vwx",
                "answer_type": "Entity",
                "entity_name": "Witness for the prosecution, and other stories"
            },
            {
                "answer_argument": "m.04v11lk",
                "answer_type": "Entity",
                "entity_name": "The under dog and other stories"
            },
            {
                "answer_argument": "m.04v11m_",
                "answer_type": "Entity",
                "entity_name": "The Under Dog and Other Stories (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04v11n_",
                "answer_type": "Entity",
                "entity_name": "The Under Dog and Other Stories"
            },
            {
                "answer_argument": "m.04v11p7",
                "answer_type": "Entity",
                "entity_name": "The Under Dog and Other Stories"
            },
            {
                "answer_argument": "m.04v11qf",
                "answer_type": "Entity",
                "entity_name": "The Under Dog and Other Stories"
            },
            {
                "answer_argument": "m.04v13_4",
                "answer_type": "Entity",
                "entity_name": "The adventure of the Christmas pudding"
            },
            {
                "answer_argument": "m.04v13_l",
                "answer_type": "Entity",
                "entity_name": "The Adventure of the Christmas Pudding (Poirot)"
            },
            {
                "answer_argument": "m.04v13_v",
                "answer_type": "Entity",
                "entity_name": "The Adventure of the Christmas Pudding (The Crime Club)"
            },
            {
                "answer_argument": "m.04v13zc",
                "answer_type": "Entity",
                "entity_name": "The adventure of the Christmas pudding"
            },
            {
                "answer_argument": "m.04v13zm",
                "answer_type": "Entity",
                "entity_name": "The Adventure of the Christmas Pudding and Other Stories"
            },
            {
                "answer_argument": "m.04v13zw",
                "answer_type": "Entity",
                "entity_name": "The Adventure of the Christmas Pudding"
            },
            {
                "answer_argument": "m.04v1402",
                "answer_type": "Entity",
                "entity_name": "The Adventure of the Christmas Pudding and The Mystery of the Spanish Chest"
            },
            {
                "answer_argument": "m.04v140b",
                "answer_type": "Entity",
                "entity_name": "The adventure of the Christmas pudding and a selection of entrées."
            },
            {
                "answer_argument": "m.04v140l",
                "answer_type": "Entity",
                "entity_name": "The adventure of the Christmas pudding, and a selection of entrées"
            },
            {
                "answer_argument": "m.04v144x",
                "answer_type": "Entity",
                "entity_name": "The Golden Ball and Other Stories"
            },
            {
                "answer_argument": "m.04v146c",
                "answer_type": "Entity",
                "entity_name": "The golden ball and other stories"
            },
            {
                "answer_argument": "m.04v1473",
                "answer_type": "Entity",
                "entity_name": "The Golden Ball and Other Stories"
            },
            {
                "answer_argument": "m.04v147c",
                "answer_type": "Entity",
                "entity_name": "The golden ball and other stories"
            },
            {
                "answer_argument": "m.04v147m",
                "answer_type": "Entity",
                "entity_name": "The Golden Ball and Other Stories"
            },
            {
                "answer_argument": "m.04v1483",
                "answer_type": "Entity",
                "entity_name": "The Golden Ball and Other Stories"
            },
            {
                "answer_argument": "m.04v148c",
                "answer_type": "Entity",
                "entity_name": "The Golden Ball and Other Stories"
            },
            {
                "answer_argument": "m.04v148n",
                "answer_type": "Entity",
                "entity_name": "Golden Ball and Other Stories (Agatha Christie Mysteries Collection)"
            },
            {
                "answer_argument": "m.04v14bc",
                "answer_type": "Entity",
                "entity_name": "The Golden Ball and Other Stories (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04v14yb",
                "answer_type": "Entity",
                "entity_name": "Problem at Pollensa Bay & Other Stories"
            },
            {
                "answer_argument": "m.04v171_",
                "answer_type": "Entity",
                "entity_name": "Three blind mice and other stories"
            },
            {
                "answer_argument": "m.04v1717",
                "answer_type": "Entity",
                "entity_name": "Three blind mice and other stories"
            },
            {
                "answer_argument": "m.04v172g",
                "answer_type": "Entity",
                "entity_name": "Three blind mice and other stories (Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04v17ry",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin"
            },
            {
                "answer_argument": "m.04v17sg",
                "answer_type": "Entity",
                "entity_name": "The mysterious Mr. Quin"
            },
            {
                "answer_argument": "m.04v17sq",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin"
            },
            {
                "answer_argument": "m.04v17t_",
                "answer_type": "Entity",
                "entity_name": "The \\\"Mysterious Mr Quin\\\""
            },
            {
                "answer_argument": "m.04v17t7",
                "answer_type": "Entity",
                "entity_name": "The mysterious Mr. Quin."
            },
            {
                "answer_argument": "m.04v17th",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr.Quin"
            },
            {
                "answer_argument": "m.04v17tr",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin"
            },
            {
                "answer_argument": "m.04v17v_",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr Quin"
            },
            {
                "answer_argument": "m.04v17vh",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin"
            },
            {
                "answer_argument": "m.04v17w7",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin"
            },
            {
                "answer_argument": "m.04v17x1",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin"
            },
            {
                "answer_argument": "m.04v17xb",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin"
            },
            {
                "answer_argument": "m.04v17xv",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin"
            },
            {
                "answer_argument": "m.04v17yc",
                "answer_type": "Entity",
                "entity_name": "The mysterious Mr Quin"
            },
            {
                "answer_argument": "m.04v17yt",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin"
            },
            {
                "answer_argument": "m.04v1800",
                "answer_type": "Entity",
                "entity_name": "The Listerdale Mystery"
            },
            {
                "answer_argument": "m.04v180q",
                "answer_type": "Entity",
                "entity_name": "The Listerdale Mystery"
            },
            {
                "answer_argument": "m.04v180z",
                "answer_type": "Entity",
                "entity_name": "The Listerdale Mystery"
            },
            {
                "answer_argument": "m.04v1817",
                "answer_type": "Entity",
                "entity_name": "The Listerdale Mystery"
            },
            {
                "answer_argument": "m.04v181h",
                "answer_type": "Entity",
                "entity_name": "The Listerdale Mystery"
            },
            {
                "answer_argument": "m.04v181r",
                "answer_type": "Entity",
                "entity_name": "The Listerdale mystery."
            },
            {
                "answer_argument": "m.04v182f",
                "answer_type": "Entity",
                "entity_name": "The Listerdale Mystery"
            },
            {
                "answer_argument": "m.04v182z",
                "answer_type": "Entity",
                "entity_name": "The Listerdale Mystery"
            },
            {
                "answer_argument": "m.04v1839",
                "answer_type": "Entity",
                "entity_name": "The Listerdale Mystery"
            },
            {
                "answer_argument": "m.04v183k",
                "answer_type": "Entity",
                "entity_name": "The Listerdale mystery"
            },
            {
                "answer_argument": "m.04v184g",
                "answer_type": "Entity",
                "entity_name": "The Listerdale mystery"
            },
            {
                "answer_argument": "m.04v18lh",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin (Ulverscroft Large Print)"
            },
            {
                "answer_argument": "m.04v18m0",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr.Quin (Agatha Christie Signature Edition)"
            },
            {
                "answer_argument": "m.04v18mr",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Mr. Quin (Paperback)) (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04v18nr",
                "answer_type": "Entity",
                "entity_name": "The Listerdale Mystery (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v195h",
                "answer_type": "Entity",
                "entity_name": "Murder in the Mews"
            },
            {
                "answer_argument": "m.04v1968",
                "answer_type": "Entity",
                "entity_name": "Murder in the Mews"
            },
            {
                "answer_argument": "m.04v196j",
                "answer_type": "Entity",
                "entity_name": "Murder in the mews"
            },
            {
                "answer_argument": "m.04v196y",
                "answer_type": "Entity",
                "entity_name": "Murder in the mews."
            },
            {
                "answer_argument": "m.04v1975",
                "answer_type": "Entity",
                "entity_name": "Murder in the Mews"
            },
            {
                "answer_argument": "m.04v197f",
                "answer_type": "Entity",
                "entity_name": "Murder in the mews"
            },
            {
                "answer_argument": "m.04v197v",
                "answer_type": "Entity",
                "entity_name": "Murder in the Mews"
            },
            {
                "answer_argument": "m.04v1982",
                "answer_type": "Entity",
                "entity_name": "Murder in the Mews"
            },
            {
                "answer_argument": "m.04v198b",
                "answer_type": "Entity",
                "entity_name": "Murder in the mews"
            },
            {
                "answer_argument": "m.04v198s",
                "answer_type": "Entity",
                "entity_name": "Murder in the Mews (Poirot)"
            },
            {
                "answer_argument": "m.04v1999",
                "answer_type": "Entity",
                "entity_name": "Murder in the Mews"
            },
            {
                "answer_argument": "m.04v199k",
                "answer_type": "Entity",
                "entity_name": "Murder in the Mews (Ulverscroft Large Print)"
            },
            {
                "answer_argument": "m.04v19cw",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19d3",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19dc",
                "answer_type": "Entity",
                "entity_name": "Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19dm",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19f3",
                "answer_type": "Entity",
                "entity_name": "Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19g3",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19gd",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19gn",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19gx",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19h4",
                "answer_type": "Entity",
                "entity_name": "The labours of Hercules"
            },
            {
                "answer_argument": "m.04v19hl",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19j2",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19jb",
                "answer_type": "Entity",
                "entity_name": "The labours of Hercules"
            },
            {
                "answer_argument": "m.04v19k6",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19ll",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules"
            },
            {
                "answer_argument": "m.04v19nr",
                "answer_type": "Entity",
                "entity_name": "Double Sin and Other Stories"
            },
            {
                "answer_argument": "m.04v19pf",
                "answer_type": "Entity",
                "entity_name": "Double sin and other stories"
            },
            {
                "answer_argument": "m.04v19qx",
                "answer_type": "Entity",
                "entity_name": "Double Sin and Other Stories"
            },
            {
                "answer_argument": "m.04v19rl",
                "answer_type": "Entity",
                "entity_name": "Double Sin and other stories"
            },
            {
                "answer_argument": "m.04v19s8",
                "answer_type": "Entity",
                "entity_name": "Double Sin and Other Stories"
            },
            {
                "answer_argument": "m.04v19vm",
                "answer_type": "Entity",
                "entity_name": "Double Sin and Other Stories"
            },
            {
                "answer_argument": "m.04v1b6g",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules (Poirot)"
            },
            {
                "answer_argument": "m.04v1bb3",
                "answer_type": "Entity",
                "entity_name": "The Labours of Hercules (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v1bbc",
                "answer_type": "Entity",
                "entity_name": "Murder in the Mews (Agatha Christie Signature Edition)"
            },
            {
                "answer_argument": "m.04v1bs_",
                "answer_type": "Entity",
                "entity_name": "Problem at Pollensa Bay"
            },
            {
                "answer_argument": "m.04v1bs8",
                "answer_type": "Entity",
                "entity_name": "Problem at Pollensa Bay"
            },
            {
                "answer_argument": "m.04v1bt7",
                "answer_type": "Entity",
                "entity_name": "Problem at Pollensa Bay"
            },
            {
                "answer_argument": "m.04v1bth",
                "answer_type": "Entity",
                "entity_name": "Problem at Pollensa Bay"
            },
            {
                "answer_argument": "m.04v1bty",
                "answer_type": "Entity",
                "entity_name": "Problem at Pollensa Bay"
            },
            {
                "answer_argument": "m.04v1bvb",
                "answer_type": "Entity",
                "entity_name": "Problem at Pollensa Bay and 7 Other Mysteries"
            },
            {
                "answer_argument": "m.04v1bw0",
                "answer_type": "Entity",
                "entity_name": "Problem at Pollensa Bay and 7 Other Mysteries"
            },
            {
                "answer_argument": "m.04v1bw8",
                "answer_type": "Entity",
                "entity_name": "Problem At Pollensa Bay and Seven Other Mysteries"
            },
            {
                "answer_argument": "m.04v1cbz",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne Investigates"
            },
            {
                "answer_argument": "m.04v1cc_",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne Investigates"
            },
            {
                "answer_argument": "m.04v1cc6",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne Investigates"
            },
            {
                "answer_argument": "m.04v1cch",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne Investigates"
            },
            {
                "answer_argument": "m.04v1ccr",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne Investigates"
            },
            {
                "answer_argument": "m.04v1cd7",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne Investigates"
            },
            {
                "answer_argument": "m.04v1cdh",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne investigates"
            },
            {
                "answer_argument": "m.04v1cdy",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne investigates"
            },
            {
                "answer_argument": "m.04v1cfm",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne investigates"
            },
            {
                "answer_argument": "m.04v1cfw",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne Investigates (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v1cg4",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne Investigates"
            },
            {
                "answer_argument": "m.04v1cgd",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne Investigates (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v1chk",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne investigates"
            },
            {
                "answer_argument": "m.04v1cjg",
                "answer_type": "Entity",
                "entity_name": "Parker Pyne Investigates"
            },
            {
                "answer_argument": "m.04v1w10",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs"
            },
            {
                "answer_argument": "m.04v1w18",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs"
            },
            {
                "answer_argument": "m.04v1w1j",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of my Thumbs"
            },
            {
                "answer_argument": "m.04v1w1s",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs"
            },
            {
                "answer_argument": "m.04v1w20",
                "answer_type": "Entity",
                "entity_name": "By the pricking of my thumbs"
            },
            {
                "answer_argument": "m.04v1w2h",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs"
            },
            {
                "answer_argument": "m.04v1w2s",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs"
            },
            {
                "answer_argument": "m.04v1w30",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs"
            },
            {
                "answer_argument": "m.04v1w38",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs"
            },
            {
                "answer_argument": "m.04v1w3j",
                "answer_type": "Entity",
                "entity_name": "By The Pricking Of My Thumbs (Tommy and Tuppence Mysteries)"
            },
            {
                "answer_argument": "m.04v1w3s",
                "answer_type": "Entity",
                "entity_name": "By the pricking of my thumbs"
            },
            {
                "answer_argument": "m.04v1w45",
                "answer_type": "Entity",
                "entity_name": "By the pricking of my thumbs"
            },
            {
                "answer_argument": "m.04v1w52",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs"
            },
            {
                "answer_argument": "m.04v1w5b",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs (Tommy & Tuppence Chronology)"
            },
            {
                "answer_argument": "m.04v1w69",
                "answer_type": "Entity",
                "entity_name": "Postern of fate"
            },
            {
                "answer_argument": "m.04v1w71",
                "answer_type": "Entity",
                "entity_name": "Postern of fate"
            },
            {
                "answer_argument": "m.04v1w7j",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1w7s",
                "answer_type": "Entity",
                "entity_name": "Postern of fate"
            },
            {
                "answer_argument": "m.04v1w87",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1w8j",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1w8s",
                "answer_type": "Entity",
                "entity_name": "Postern of fate"
            },
            {
                "answer_argument": "m.04v1w9z",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1wcg",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1wcq",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1wcz",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1wd6",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1wdg",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1wdq",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1wf6",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1wfr",
                "answer_type": "Entity",
                "entity_name": "Postern of fate"
            },
            {
                "answer_argument": "m.04v1whf",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wj3",
                "answer_type": "Entity",
                "entity_name": "Postern of fate"
            },
            {
                "answer_argument": "m.04v1wjk",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wjv",
                "answer_type": "Entity",
                "entity_name": "Endless night"
            },
            {
                "answer_argument": "m.04v1wk_",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wkr",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wl_",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wl7",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wlj",
                "answer_type": "Entity",
                "entity_name": "Endless night"
            },
            {
                "answer_argument": "m.04v1wm_",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wm7",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wmh",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wmr",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wn7",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wp6",
                "answer_type": "Entity",
                "entity_name": "Endless Night"
            },
            {
                "answer_argument": "m.04v1wqg",
                "answer_type": "Entity",
                "entity_name": "Endless night."
            },
            {
                "answer_argument": "m.04v1wtp",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04v1wvc",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs (Tommy and Tuppence Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04v1ww2",
                "answer_type": "Entity",
                "entity_name": "By the Pricking of My Thumbs (Tommy and Tuppence Mysteries)"
            },
            {
                "answer_argument": "m.04v1x1f",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate (Tommy & Tuppence Chronology)"
            },
            {
                "answer_argument": "m.04v1x1p",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate (G K Hall Large Print Book Series)"
            },
            {
                "answer_argument": "m.04v1x1z",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04v1x26",
                "answer_type": "Entity",
                "entity_name": "Endless Night (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v1x2g",
                "answer_type": "Entity",
                "entity_name": "Postern of Fate"
            },
            {
                "answer_argument": "m.04v1x2r",
                "answer_type": "Entity",
                "entity_name": "Endless night"
            },
            {
                "answer_argument": "m.04v1x35",
                "answer_type": "Entity",
                "entity_name": "Endless Night (Ulverscroft Large Print)"
            },
            {
                "answer_argument": "m.04v21_3",
                "answer_type": "Entity",
                "entity_name": "The Secret of Chimneys"
            },
            {
                "answer_argument": "m.04v21_c",
                "answer_type": "Entity",
                "entity_name": "The secret of Chimneys"
            },
            {
                "answer_argument": "m.04v21_t",
                "answer_type": "Entity",
                "entity_name": "Secret of Chimneys"
            },
            {
                "answer_argument": "m.04v21zc",
                "answer_type": "Entity",
                "entity_name": "The Secret of Chimneys"
            },
            {
                "answer_argument": "m.04v21zm",
                "answer_type": "Entity",
                "entity_name": "The Secret of Chimneys"
            },
            {
                "answer_argument": "m.04v21zw",
                "answer_type": "Entity",
                "entity_name": "The Secret of Chimneys"
            },
            {
                "answer_argument": "m.04v2201",
                "answer_type": "Entity",
                "entity_name": "The secret of chimneys"
            },
            {
                "answer_argument": "m.04v220j",
                "answer_type": "Entity",
                "entity_name": "The Secret of Chimneys"
            },
            {
                "answer_argument": "m.04v220s",
                "answer_type": "Entity",
                "entity_name": "The secret of chimneys."
            },
            {
                "answer_argument": "m.04v2216",
                "answer_type": "Entity",
                "entity_name": "The secret of Chimneys"
            },
            {
                "answer_argument": "m.04v221n",
                "answer_type": "Entity",
                "entity_name": "The secret of chimneys."
            },
            {
                "answer_argument": "m.04v221x",
                "answer_type": "Entity",
                "entity_name": "The Secret of Chimneys (Ulverscroft Mystery)"
            },
            {
                "answer_argument": "m.04v2225",
                "answer_type": "Entity",
                "entity_name": "The Secret of Chimneys (Mystery Masters Series)"
            },
            {
                "answer_argument": "m.04v222f",
                "answer_type": "Entity",
                "entity_name": "The Secret of Chimneys (Agatha Christie Signature Edition)"
            },
            {
                "answer_argument": "m.04v224w",
                "answer_type": "Entity",
                "entity_name": "The Secret of Chimneys (Mystery Masters Series)"
            },
            {
                "answer_argument": "m.04v22w4",
                "answer_type": "Entity",
                "entity_name": "The Secret Of Chimneys (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v22wd",
                "answer_type": "Entity",
                "entity_name": "Secret of Chimneys (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v24_5",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad"
            },
            {
                "answer_argument": "m.04v24_x",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad"
            },
            {
                "answer_argument": "m.04v24zg",
                "answer_type": "Entity",
                "entity_name": "They came to Baghdad"
            },
            {
                "answer_argument": "m.04v24zy",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad"
            },
            {
                "answer_argument": "m.04v2504",
                "answer_type": "Entity",
                "entity_name": "They came to Baghdad"
            },
            {
                "answer_argument": "m.04v250m",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad"
            },
            {
                "answer_argument": "m.04v250w",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad"
            },
            {
                "answer_argument": "m.04v2513",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad"
            },
            {
                "answer_argument": "m.04v251c",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad"
            },
            {
                "answer_argument": "m.04v251m",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad"
            },
            {
                "answer_argument": "m.04v251w",
                "answer_type": "Entity",
                "entity_name": "They came to Baghdad."
            },
            {
                "answer_argument": "m.04v252w",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad"
            },
            {
                "answer_argument": "m.04v256b",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad"
            },
            {
                "answer_argument": "m.04v25l9",
                "answer_type": "Entity",
                "entity_name": "Towards Zero"
            },
            {
                "answer_argument": "m.04v25m7",
                "answer_type": "Entity",
                "entity_name": "Towards Zero"
            },
            {
                "answer_argument": "m.04v25mh",
                "answer_type": "Entity",
                "entity_name": "Towards zero"
            },
            {
                "answer_argument": "m.04v25mz",
                "answer_type": "Entity",
                "entity_name": "Towards Zero"
            },
            {
                "answer_argument": "m.04v25n6",
                "answer_type": "Entity",
                "entity_name": "Towards Zero"
            },
            {
                "answer_argument": "m.04v25nh",
                "answer_type": "Entity",
                "entity_name": "Towards Zero"
            },
            {
                "answer_argument": "m.04v25ns",
                "answer_type": "Entity",
                "entity_name": "Towards zero"
            },
            {
                "answer_argument": "m.04v25p6",
                "answer_type": "Entity",
                "entity_name": "Towards zero"
            },
            {
                "answer_argument": "m.04v25pp",
                "answer_type": "Entity",
                "entity_name": "Towards zero."
            },
            {
                "answer_argument": "m.04v25py",
                "answer_type": "Entity",
                "entity_name": "Sittaford Mystery"
            },
            {
                "answer_argument": "m.04v25q5",
                "answer_type": "Entity",
                "entity_name": "Towards Zero"
            },
            {
                "answer_argument": "m.04v25qg",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery"
            },
            {
                "answer_argument": "m.04v25qq",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery"
            },
            {
                "answer_argument": "m.04v25qz",
                "answer_type": "Entity",
                "entity_name": "Towards zero."
            },
            {
                "answer_argument": "m.04v25rd",
                "answer_type": "Entity",
                "entity_name": "Towards zero"
            },
            {
                "answer_argument": "m.04v25rt",
                "answer_type": "Entity",
                "entity_name": "Towards zero"
            },
            {
                "answer_argument": "m.04v25s_",
                "answer_type": "Entity",
                "entity_name": "The Sittaford mystery"
            },
            {
                "answer_argument": "m.04v25s7",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery"
            },
            {
                "answer_argument": "m.04v25sh",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery"
            },
            {
                "answer_argument": "m.04v25sr",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery (BBC Radio Presents)"
            },
            {
                "answer_argument": "m.04v25tf",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery"
            },
            {
                "answer_argument": "m.04v25tp",
                "answer_type": "Entity",
                "entity_name": "The Sittaford mystery"
            },
            {
                "answer_argument": "m.04v25v3",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v25vc",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery (Mystery Masters Series)"
            },
            {
                "answer_argument": "m.04v25vm",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide"
            },
            {
                "answer_argument": "m.04v25vw",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide"
            },
            {
                "answer_argument": "m.04v25w3",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide"
            },
            {
                "answer_argument": "m.04v25wc",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide"
            },
            {
                "answer_argument": "m.04v25wm",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide"
            },
            {
                "answer_argument": "m.04v25ww",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide"
            },
            {
                "answer_argument": "m.04v25x3",
                "answer_type": "Entity",
                "entity_name": "Sparkling cyanide"
            },
            {
                "answer_argument": "m.04v25xc",
                "answer_type": "Entity",
                "entity_name": "Sparkling cyanide."
            },
            {
                "answer_argument": "m.04v25xm",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v25xw",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide"
            },
            {
                "answer_argument": "m.04v25y4",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide"
            },
            {
                "answer_argument": "m.04v25yd",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide"
            },
            {
                "answer_argument": "m.04v25yn",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide"
            },
            {
                "answer_argument": "m.04v25yx",
                "answer_type": "Entity",
                "entity_name": "Sparkling cyanide"
            },
            {
                "answer_argument": "m.04v25zb",
                "answer_type": "Entity",
                "entity_name": "Sparkling cyanide"
            },
            {
                "answer_argument": "m.04v26_2",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery (Agatha Christie Signature Edition)"
            },
            {
                "answer_argument": "m.04v26_b",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery (Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04v26kk",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad (Dell Book)"
            },
            {
                "answer_argument": "m.04v26lr",
                "answer_type": "Entity",
                "entity_name": "They came to Baghdad"
            },
            {
                "answer_argument": "m.04v26n2",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v26nn",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad (Mystery Masters)"
            },
            {
                "answer_argument": "m.04v26p_",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad (Mystery Masters)"
            },
            {
                "answer_argument": "m.04v26pq",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04v26qr",
                "answer_type": "Entity",
                "entity_name": "They Came to Baghdad (The Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04v2701",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v2709",
                "answer_type": "Entity",
                "entity_name": "Sittaford Mystery (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v270k",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v270t",
                "answer_type": "Entity",
                "entity_name": "The Sittaford Mystery (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v272n",
                "answer_type": "Entity",
                "entity_name": "Sittaford Mystery (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v2759",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide (Variant Title = Remembered Death)"
            },
            {
                "answer_argument": "m.04v275k",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide (Mystery Masters Series)"
            },
            {
                "answer_argument": "m.04v275t",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v2762",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide (Audio Editions Mystery Masters)"
            },
            {
                "answer_argument": "m.04v276t",
                "answer_type": "Entity",
                "entity_name": "Sparkling Cyanide (Agatha Christie Signature Edition)"
            },
            {
                "answer_argument": "m.04v277k",
                "answer_type": "Entity",
                "entity_name": "Towards zero"
            },
            {
                "answer_argument": "m.04v277z",
                "answer_type": "Entity",
                "entity_name": "Towards Zero (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v2796",
                "answer_type": "Entity",
                "entity_name": "Towards zero"
            },
            {
                "answer_argument": "m.04v279m",
                "answer_type": "Entity",
                "entity_name": "Towards Zero (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v279w",
                "answer_type": "Entity",
                "entity_name": "Towards Zero."
            },
            {
                "answer_argument": "m.04v27b4",
                "answer_type": "Entity",
                "entity_name": "Towards Zero (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v27bn",
                "answer_type": "Entity",
                "entity_name": "Towards Zero (Audio Editions Mystery Masters)"
            },
            {
                "answer_argument": "m.04v27cc",
                "answer_type": "Entity",
                "entity_name": "Towards Zero (The Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04v27cm",
                "answer_type": "Entity",
                "entity_name": "Towards Zero (Agatha Christie Mysteries Collection (Paperback))"
            },
            {
                "answer_argument": "m.04v27cw",
                "answer_type": "Entity",
                "entity_name": "Towards Zero (Audio Editions Mystery Masters)"
            },
            {
                "answer_argument": "m.04v2rq8",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rqr",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rr_",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rr0",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rr8",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rrj",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rs_",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rs7",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rsj",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rt8",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rtj",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rts",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rv0",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rv9",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rvk",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2rxc",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2ryx",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2s3b",
                "answer_type": "Entity",
                "entity_name": "Murder is easy"
            },
            {
                "answer_argument": "m.04v2s3t",
                "answer_type": "Entity",
                "entity_name": "Murder Is Easy"
            },
            {
                "answer_argument": "m.04v2s41",
                "answer_type": "Entity",
                "entity_name": "Murder Is Easy"
            },
            {
                "answer_argument": "m.04v2s49",
                "answer_type": "Entity",
                "entity_name": "Murder Is Easy"
            },
            {
                "answer_argument": "m.04v2s4k",
                "answer_type": "Entity",
                "entity_name": "Murder Is Easy"
            },
            {
                "answer_argument": "m.04v2s4t",
                "answer_type": "Entity",
                "entity_name": "Murder Is Easy"
            },
            {
                "answer_argument": "m.04v2s51",
                "answer_type": "Entity",
                "entity_name": "Murder Is Easy"
            },
            {
                "answer_argument": "m.04v2s59",
                "answer_type": "Entity",
                "entity_name": "Murder is easy"
            },
            {
                "answer_argument": "m.04v2s5r",
                "answer_type": "Entity",
                "entity_name": "Murder is easy."
            },
            {
                "answer_argument": "m.04v2s64",
                "answer_type": "Entity",
                "entity_name": "Murder is easy."
            },
            {
                "answer_argument": "m.04v2s6d",
                "answer_type": "Entity",
                "entity_name": "Murder is easy"
            },
            {
                "answer_argument": "m.04v2s6v",
                "answer_type": "Entity",
                "entity_name": "Murder is easy"
            },
            {
                "answer_argument": "m.04v2s78",
                "answer_type": "Entity",
                "entity_name": "Murder is easy"
            },
            {
                "answer_argument": "m.04v2skk",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2skt",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2sl2",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2slb",
                "answer_type": "Entity",
                "entity_name": "CROOKED HOUSE"
            },
            {
                "answer_argument": "m.04v2sll",
                "answer_type": "Entity",
                "entity_name": "Crooked house"
            },
            {
                "answer_argument": "m.04v2sm1",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2sm9",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2smk",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2smv",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2sn2",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2snb",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2snl",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2snv",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2sp2",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2spb",
                "answer_type": "Entity",
                "entity_name": "Crooked House"
            },
            {
                "answer_argument": "m.04v2spl",
                "answer_type": "Entity",
                "entity_name": "The crooked house"
            },
            {
                "answer_argument": "m.04v2t45",
                "answer_type": "Entity",
                "entity_name": "Murder Is Easy (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v2t4f",
                "answer_type": "Entity",
                "entity_name": "Murder is Easy (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v2t4q",
                "answer_type": "Entity",
                "entity_name": "Murder Is Easy (Audio Editions Mystery Masters)"
            },
            {
                "answer_argument": "m.04v2t64",
                "answer_type": "Entity",
                "entity_name": "Murder Is Easy (Audio Editions Mystery Masters)"
            },
            {
                "answer_argument": "m.04v2t6d",
                "answer_type": "Entity",
                "entity_name": "Nemesis (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v2t6n",
                "answer_type": "Entity",
                "entity_name": "Nemesis (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v2t6x",
                "answer_type": "Entity",
                "entity_name": "Nemesis (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04v2t7n",
                "answer_type": "Entity",
                "entity_name": "Murder Is Easy (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v2t7x",
                "answer_type": "Entity",
                "entity_name": "Nemesis (Cover to Cover Classics)"
            },
            {
                "answer_argument": "m.04v2t84",
                "answer_type": "Entity",
                "entity_name": "Nemesis (Miss Marple)"
            },
            {
                "answer_argument": "m.04v2t8d",
                "answer_type": "Entity",
                "entity_name": "Nemesis"
            },
            {
                "answer_argument": "m.04v2tbp",
                "answer_type": "Entity",
                "entity_name": "Nemesis (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v2tdl",
                "answer_type": "Entity",
                "entity_name": "The murder at the vicarage"
            },
            {
                "answer_argument": "m.04v2tf_",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2tf1",
                "answer_type": "Entity",
                "entity_name": "The murder at the vicarage"
            },
            {
                "answer_argument": "m.04v2tfj",
                "answer_type": "Entity",
                "entity_name": "The murder at the vicarage"
            },
            {
                "answer_argument": "m.04v2tg7",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2tgh",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2tgs",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2th0",
                "answer_type": "Entity",
                "entity_name": "The Murder At the Vicarage"
            },
            {
                "answer_argument": "m.04v2th8",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2thj",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2ths",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2tjj",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2tjs",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2tk0",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2tk8",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2v5p",
                "answer_type": "Entity",
                "entity_name": "Man in the Brown Suit"
            },
            {
                "answer_argument": "m.04v2v6c",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit"
            },
            {
                "answer_argument": "m.04v2v6m",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit"
            },
            {
                "answer_argument": "m.04v2v6x",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit"
            },
            {
                "answer_argument": "m.04v2v74",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit"
            },
            {
                "answer_argument": "m.04v2v7n",
                "answer_type": "Entity",
                "entity_name": "The Man In The Brown Suit"
            },
            {
                "answer_argument": "m.04v2v88",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit"
            },
            {
                "answer_argument": "m.04v2v8t",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit"
            },
            {
                "answer_argument": "m.04v2v92",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v2v9b",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit (Mystery Masters)"
            },
            {
                "answer_argument": "m.04v2v9l",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit"
            },
            {
                "answer_argument": "m.04v2v9v",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit (Agatha Christie Mysteries Collection)"
            },
            {
                "answer_argument": "m.04v2vb2",
                "answer_type": "Entity",
                "entity_name": "Man in the Brown Suit (Ulverscroft Mystery)"
            },
            {
                "answer_argument": "m.04v2vbc",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit (Mystery Masters)"
            },
            {
                "answer_argument": "m.04v2vby",
                "answer_type": "Entity",
                "entity_name": "Man in the Brown Suit (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v2vk4",
                "answer_type": "Entity",
                "entity_name": "Crooked house."
            },
            {
                "answer_argument": "m.04v2vkd",
                "answer_type": "Entity",
                "entity_name": "Crooked House (Winterbrook Edition)"
            },
            {
                "answer_argument": "m.04v2vkn",
                "answer_type": "Entity",
                "entity_name": "Crooked house"
            },
            {
                "answer_argument": "m.04v2vll",
                "answer_type": "Entity",
                "entity_name": "Crooked House (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v2vlv",
                "answer_type": "Entity",
                "entity_name": "Crooked House (Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v2vmd",
                "answer_type": "Entity",
                "entity_name": "Crooked House (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v2vvt",
                "answer_type": "Entity",
                "entity_name": "Crooked House (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04v2w79",
                "answer_type": "Entity",
                "entity_name": "The Man In The Brown Suit (Agatha Christie Mystery Collection) Bantam Blue Leatherette Edition"
            },
            {
                "answer_argument": "m.04v2w81",
                "answer_type": "Entity",
                "entity_name": "The Man In The Brown Suit (Classic Books on Cassettes Collection)"
            },
            {
                "answer_argument": "m.04v2wb4",
                "answer_type": "Entity",
                "entity_name": "The Man in the Brown Suit (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04v2wft",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04v2wh1",
                "answer_type": "Entity",
                "entity_name": "The murder at the vicarage."
            },
            {
                "answer_argument": "m.04v2wj0",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage (Miss Marple)"
            },
            {
                "answer_argument": "m.04v2wj9",
                "answer_type": "Entity",
                "entity_name": "The murder at the vicarage"
            },
            {
                "answer_argument": "m.04v2wjq",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage (Acting Edition)"
            },
            {
                "answer_argument": "m.04v2wjz",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (Miss Marple Mystery Series)"
            },
            {
                "answer_argument": "m.04v2wk6",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage (Miss Marple)"
            },
            {
                "answer_argument": "m.04v2wkg",
                "answer_type": "Entity",
                "entity_name": "Murder at the vicarage."
            },
            {
                "answer_argument": "m.04v2wkq",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v2wkz",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (BBC Radio Presents)"
            },
            {
                "answer_argument": "m.04v2wlp",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (Miss Marple Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04v2wly",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (Agatha Christie Mysteries Collection)"
            },
            {
                "answer_argument": "m.04v2wmf",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04v2wsw",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v2x7b",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage (BBC Full Cast Dramatization)"
            },
            {
                "answer_argument": "m.04v2x7l",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04v3_fr",
                "answer_type": "Entity",
                "entity_name": "They Do It with Mirrors (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v3_g_",
                "answer_type": "Entity",
                "entity_name": "They Do It With Mirrors (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v3_gh",
                "answer_type": "Entity",
                "entity_name": "They Do It With Mirrors (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v3_h_",
                "answer_type": "Entity",
                "entity_name": "They Do It With Mirrors (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v3_hr",
                "answer_type": "Entity",
                "entity_name": "They Do It with Mirrors (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v3_j7",
                "answer_type": "Entity",
                "entity_name": "They Do It with Mirrors (Miss Marple Mysteries (Audio Partners))"
            },
            {
                "answer_argument": "m.04v3_k0",
                "answer_type": "Entity",
                "entity_name": "They Do It With Mirrors (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04v3jgy",
                "answer_type": "Entity",
                "entity_name": "The murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jhd",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jhn",
                "answer_type": "Entity",
                "entity_name": "The murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jj3",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jjc",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd (Poirot)"
            },
            {
                "answer_argument": "m.04v3jjm",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jk4",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jkd",
                "answer_type": "Entity",
                "entity_name": "The murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jkw",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jld",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jlp",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jly",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jm5",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jnn",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jp9",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd. (Lernmaterialien)"
            },
            {
                "answer_argument": "m.04v3jpl",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jpw",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3jq3",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3l7t",
                "answer_type": "Entity",
                "entity_name": "Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3l81",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3l89",
                "answer_type": "Entity",
                "entity_name": "Murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3l8q",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd (Hercule Poirot Mystery)"
            },
            {
                "answer_argument": "m.04v3l8z",
                "answer_type": "Entity",
                "entity_name": "The murder of Roger Ackroyd"
            },
            {
                "answer_argument": "m.04v3l9d",
                "answer_type": "Entity",
                "entity_name": "The murder of Roger Ackroyd."
            },
            {
                "answer_argument": "m.04v3l9t",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v3lb1",
                "answer_type": "Entity",
                "entity_name": "The Murder of Roger Ackroyd (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04v3s3z",
                "answer_type": "Entity",
                "entity_name": "Absent in the Spring"
            },
            {
                "answer_argument": "m.04v3s47",
                "answer_type": "Entity",
                "entity_name": "Absent in the Spring"
            },
            {
                "answer_argument": "m.04v3s4s",
                "answer_type": "Entity",
                "entity_name": "Absent in the Spring"
            },
            {
                "answer_argument": "m.04v3s68",
                "answer_type": "Entity",
                "entity_name": "Absent in the Spring (Westmacott)"
            },
            {
                "answer_argument": "m.04v3s71",
                "answer_type": "Entity",
                "entity_name": "Absent in the Spring"
            },
            {
                "answer_argument": "m.04v3svs",
                "answer_type": "Entity",
                "entity_name": "The Rose and the Yew Tree (Westmacott)"
            },
            {
                "answer_argument": "m.04v3sww",
                "answer_type": "Entity",
                "entity_name": "Rose and the Yew Tree"
            },
            {
                "answer_argument": "m.04v3sxf",
                "answer_type": "Entity",
                "entity_name": "The Rose and the Yew Tree"
            },
            {
                "answer_argument": "m.04v3sy4",
                "answer_type": "Entity",
                "entity_name": "Rose and the Yew Tree"
            },
            {
                "answer_argument": "m.04v3v_p",
                "answer_type": "Entity",
                "entity_name": "The Burden"
            },
            {
                "answer_argument": "m.04v3w0w",
                "answer_type": "Entity",
                "entity_name": "Burden"
            },
            {
                "answer_argument": "m.04v3w14",
                "answer_type": "Entity",
                "entity_name": "Burden"
            },
            {
                "answer_argument": "m.04v3w1f",
                "answer_type": "Entity",
                "entity_name": "The Burden"
            },
            {
                "answer_argument": "m.04v3w34",
                "answer_type": "Entity",
                "entity_name": "Burden"
            },
            {
                "answer_argument": "m.04v3w3y",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library"
            },
            {
                "answer_argument": "m.04v3w45",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library"
            },
            {
                "answer_argument": "m.04v3w4f",
                "answer_type": "Entity",
                "entity_name": "The body in the library"
            },
            {
                "answer_argument": "m.04v3w4x",
                "answer_type": "Entity",
                "entity_name": "The body in the library"
            },
            {
                "answer_argument": "m.04v3w5c",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library"
            },
            {
                "answer_argument": "m.04v3w5m",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library"
            },
            {
                "answer_argument": "m.04v3w5w",
                "answer_type": "Entity",
                "entity_name": "The body in the library"
            },
            {
                "answer_argument": "m.04v3w6b",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library"
            },
            {
                "answer_argument": "m.04v3w6l",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library"
            },
            {
                "answer_argument": "m.04v3w6v",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library"
            },
            {
                "answer_argument": "m.04v3w72",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library"
            },
            {
                "answer_argument": "m.04v3w7c",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library"
            },
            {
                "answer_argument": "m.04v3w7m",
                "answer_type": "Entity",
                "entity_name": "The body in the library"
            },
            {
                "answer_argument": "m.04v3w7x",
                "answer_type": "Entity",
                "entity_name": "Body in the library"
            },
            {
                "answer_argument": "m.04v3w8l",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library"
            },
            {
                "answer_argument": "m.04v3y_p",
                "answer_type": "Entity",
                "entity_name": "The Body In The Library (A Miss Marple Mystery)"
            },
            {
                "answer_argument": "m.04v3ycw",
                "answer_type": "Entity",
                "entity_name": "The body in the library"
            },
            {
                "answer_argument": "m.04v3yf3",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library (Miss Marple)"
            },
            {
                "answer_argument": "m.04v3yfc",
                "answer_type": "Entity",
                "entity_name": "The body in the library"
            },
            {
                "answer_argument": "m.04v3yg2",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library (Miss Marple)"
            },
            {
                "answer_argument": "m.04v3ygn",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v3ygx",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library (BBC Audio Crime)"
            },
            {
                "answer_argument": "m.04v3yh4",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v3yhd",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v3yj2",
                "answer_type": "Entity",
                "entity_name": "Body in the Library (Miss Marple Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04v3yjb",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library (BBC Radio Collection: Crimes and Thrillers)"
            },
            {
                "answer_argument": "m.04v3yk1",
                "answer_type": "Entity",
                "entity_name": "The Body in the Library (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v3z7_",
                "answer_type": "Entity",
                "entity_name": "They Do It with Mirrors"
            },
            {
                "answer_argument": "m.04v3z8_",
                "answer_type": "Entity",
                "entity_name": "They Do It with Mirrors"
            },
            {
                "answer_argument": "m.04v3z8h",
                "answer_type": "Entity",
                "entity_name": "They do it with Mirrors"
            },
            {
                "answer_argument": "m.04v3z8r",
                "answer_type": "Entity",
                "entity_name": "They Do It with Mirrors"
            },
            {
                "answer_argument": "m.04v3z97",
                "answer_type": "Entity",
                "entity_name": "They Do It With Mirrors"
            },
            {
                "answer_argument": "m.04v3z9h",
                "answer_type": "Entity",
                "entity_name": "They Do It with Mirrors"
            },
            {
                "answer_argument": "m.04v3z9r",
                "answer_type": "Entity",
                "entity_name": "They do it with mirrors"
            },
            {
                "answer_argument": "m.04v3zb4",
                "answer_type": "Entity",
                "entity_name": "They Do It With Mirrors"
            },
            {
                "answer_argument": "m.04v3zbf",
                "answer_type": "Entity",
                "entity_name": "They Do It With Mirrors"
            },
            {
                "answer_argument": "m.04v3zbq",
                "answer_type": "Entity",
                "entity_name": "They Do It with Mirrors (Miss Marple)"
            },
            {
                "answer_argument": "m.04v3zbz",
                "answer_type": "Entity",
                "entity_name": "They Do It With Mirrors"
            },
            {
                "answer_argument": "m.04v3zc6",
                "answer_type": "Entity",
                "entity_name": "They Do It With Mirrors"
            },
            {
                "answer_argument": "m.04v4_g9",
                "answer_type": "Entity",
                "entity_name": "Star over Bethlehem and other stories by Agatha Christie Mallowan"
            },
            {
                "answer_argument": "m.04v4_h9",
                "answer_type": "Entity",
                "entity_name": "Star over Bethlehem, and other stories (The Agatha Christie mystery collection)"
            },
            {
                "answer_argument": "m.04v41x5",
                "answer_type": "Entity",
                "entity_name": "Unfinished Portrait"
            },
            {
                "answer_argument": "m.04v41xg",
                "answer_type": "Entity",
                "entity_name": "Unfinished Portrait"
            },
            {
                "answer_argument": "m.04v41xq",
                "answer_type": "Entity",
                "entity_name": "Unfinished Portrait (Westmacott)"
            },
            {
                "answer_argument": "m.04v4wn4",
                "answer_type": "Entity",
                "entity_name": "Come, Tell Me How You Live"
            },
            {
                "answer_argument": "m.04v4wnd",
                "answer_type": "Entity",
                "entity_name": "Come, Tell Me How You Live"
            },
            {
                "answer_argument": "m.04v4wnn",
                "answer_type": "Entity",
                "entity_name": "Come, Tell Me How You Live"
            },
            {
                "answer_argument": "m.04v4wp5",
                "answer_type": "Entity",
                "entity_name": "Come, Tell Me How You Live"
            },
            {
                "answer_argument": "m.04v4wpq",
                "answer_type": "Entity",
                "entity_name": "Come, tell me how you live"
            },
            {
                "answer_argument": "m.04v4wq4",
                "answer_type": "Entity",
                "entity_name": "Come, Tell Me How You Live (Common Reader Editions: Rediscoveries: LONDON)"
            },
            {
                "answer_argument": "m.04v4wqf",
                "answer_type": "Entity",
                "entity_name": "Come, tell me how you live"
            },
            {
                "answer_argument": "m.04v4wrb",
                "answer_type": "Entity",
                "entity_name": "Come tell me how you live"
            },
            {
                "answer_argument": "m.04v4ws8",
                "answer_type": "Entity",
                "entity_name": "Come, Tell Me How You Live"
            },
            {
                "answer_argument": "m.04v5qd1",
                "answer_type": "Entity",
                "entity_name": "Poems"
            },
            {
                "answer_argument": "m.04v5qdt",
                "answer_type": "Entity",
                "entity_name": "Poems"
            },
            {
                "answer_argument": "m.04v5qf8",
                "answer_type": "Entity",
                "entity_name": "Poems (The Agatha Christie mystery collection)"
            },
            {
                "answer_argument": "m.04v5z7n",
                "answer_type": "Entity",
                "entity_name": "Unexpected Guest"
            },
            {
                "answer_argument": "m.04v5z8w",
                "answer_type": "Entity",
                "entity_name": "The Unexpected Guest"
            },
            {
                "answer_argument": "m.04v5z93",
                "answer_type": "Entity",
                "entity_name": "The Unexpected Guest"
            },
            {
                "answer_argument": "m.04v5z9c",
                "answer_type": "Entity",
                "entity_name": "The unexpected guest"
            },
            {
                "answer_argument": "m.04v5zb4",
                "answer_type": "Entity",
                "entity_name": "The Unexpected Guest (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v5zbd",
                "answer_type": "Entity",
                "entity_name": "The Unexpected Guest (Acting Edition)"
            },
            {
                "answer_argument": "m.04v7g_6",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7g_z",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7gzg",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7gzq",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7gzz",
                "answer_type": "Entity",
                "entity_name": "Peril At End House"
            },
            {
                "answer_argument": "m.04v7h0f",
                "answer_type": "Entity",
                "entity_name": "Peril at End House (Poirot)"
            },
            {
                "answer_argument": "m.04v7h0p",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7h0y",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7h1_",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7h16",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7h1g",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7h1q",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7h27",
                "answer_type": "Entity",
                "entity_name": "Peril at End House"
            },
            {
                "answer_argument": "m.04v7jpd",
                "answer_type": "Entity",
                "entity_name": "Peril at end house."
            },
            {
                "answer_argument": "m.04v7jpn",
                "answer_type": "Entity",
                "entity_name": "Peril at End House."
            },
            {
                "answer_argument": "m.04v7jqj",
                "answer_type": "Entity",
                "entity_name": "Peril at End House (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v7jqs",
                "answer_type": "Entity",
                "entity_name": "Peril at End House (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v7jr0",
                "answer_type": "Entity",
                "entity_name": "Peril at End House (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v7jr8",
                "answer_type": "Entity",
                "entity_name": "Peril at End House (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v7jrz",
                "answer_type": "Entity",
                "entity_name": "Peril at End House (The Agatha Christie Mystery Collection) (The Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04v7n91",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7n9j",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7nb7",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7nbs",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7nc8",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7ncr",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7nd9",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7ndl",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7ndv",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7nf3",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7nfm",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7nfx",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7ng4",
                "answer_type": "Entity",
                "entity_name": "CURTAIN"
            },
            {
                "answer_argument": "m.04v7ngf",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7ngp",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7q_4",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7q_y",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7r0l",
                "answer_type": "Entity",
                "entity_name": "Curtain (Poirot)"
            },
            {
                "answer_argument": "m.04v7r0v",
                "answer_type": "Entity",
                "entity_name": "Curtain"
            },
            {
                "answer_argument": "m.04v7r18",
                "answer_type": "Entity",
                "entity_name": "Curtain (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v7r1j",
                "answer_type": "Entity",
                "entity_name": "Curtain (Ulverscroft Large Print Ser.)"
            },
            {
                "answer_argument": "m.04v7r1s",
                "answer_type": "Entity",
                "entity_name": "Curtain (The Agatha Christie mystery collection)"
            },
            {
                "answer_argument": "m.04v7r29",
                "answer_type": "Entity",
                "entity_name": "Curtain (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04v7vf0",
                "answer_type": "Entity",
                "entity_name": "Third girl"
            },
            {
                "answer_argument": "m.04v7vfh",
                "answer_type": "Entity",
                "entity_name": "Third girl"
            },
            {
                "answer_argument": "m.04v7vg6",
                "answer_type": "Entity",
                "entity_name": "Third Girl"
            },
            {
                "answer_argument": "m.04v7vgr",
                "answer_type": "Entity",
                "entity_name": "Third Girl"
            },
            {
                "answer_argument": "m.04v7vh0",
                "answer_type": "Entity",
                "entity_name": "Third Girl"
            },
            {
                "answer_argument": "m.04v7vh8",
                "answer_type": "Entity",
                "entity_name": "Third Girl"
            },
            {
                "answer_argument": "m.04v7vhk",
                "answer_type": "Entity",
                "entity_name": "Third Girl"
            },
            {
                "answer_argument": "m.04v7vhv",
                "answer_type": "Entity",
                "entity_name": "Third girl"
            },
            {
                "answer_argument": "m.04v7vj8",
                "answer_type": "Entity",
                "entity_name": "Third Girl (Poirot)"
            },
            {
                "answer_argument": "m.04v7vjj",
                "answer_type": "Entity",
                "entity_name": "Third Girl"
            },
            {
                "answer_argument": "m.04v7vjs",
                "answer_type": "Entity",
                "entity_name": "Third girl"
            },
            {
                "answer_argument": "m.04v7vk6",
                "answer_type": "Entity",
                "entity_name": "Third Girl"
            },
            {
                "answer_argument": "m.04v7w7x",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery"
            },
            {
                "answer_argument": "m.04v7w8j",
                "answer_type": "Entity",
                "entity_name": "A CARIBBEAN MYSTERY"
            },
            {
                "answer_argument": "m.04v7w8t",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery"
            },
            {
                "answer_argument": "m.04v7w91",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery"
            },
            {
                "answer_argument": "m.04v7w99",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery"
            },
            {
                "answer_argument": "m.04v7w9k",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery"
            },
            {
                "answer_argument": "m.04v7w9t",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery"
            },
            {
                "answer_argument": "m.04v7wb1",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery"
            },
            {
                "answer_argument": "m.04v7wb9",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery"
            },
            {
                "answer_argument": "m.04v7wbl",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery (Greenway E.)"
            },
            {
                "answer_argument": "m.04v7wbw",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery (Miss Marple)"
            },
            {
                "answer_argument": "m.04v7wc3",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery (Audio Editions)"
            },
            {
                "answer_argument": "m.04v7wcc",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v7wcm",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v7wcw",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v7wdn",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04v7wjk",
                "answer_type": "Entity",
                "entity_name": "Third Girl (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v7wjt",
                "answer_type": "Entity",
                "entity_name": "Third Girl (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v7wkh",
                "answer_type": "Entity",
                "entity_name": "Third Girl (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v7wmp",
                "answer_type": "Entity",
                "entity_name": "Third Girl (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04v7wmy",
                "answer_type": "Entity",
                "entity_name": "Third Girl (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v7wn6",
                "answer_type": "Entity",
                "entity_name": "Third Girl (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04v7wnq",
                "answer_type": "Entity",
                "entity_name": "Third Girl (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v7wvs",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v7ww0",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery (BBC Radio Presents: An Audio Dramatization)"
            },
            {
                "answer_argument": "m.04v7ww8",
                "answer_type": "Entity",
                "entity_name": "A Caribbean Mystery (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04v88_2",
                "answer_type": "Entity",
                "entity_name": "Five little pigs (Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04v88_r",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v881_",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs"
            },
            {
                "answer_argument": "m.04v8817",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs"
            },
            {
                "answer_argument": "m.04v881h",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs"
            },
            {
                "answer_argument": "m.04v881r",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs"
            },
            {
                "answer_argument": "m.04v8828",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs (Poirot)"
            },
            {
                "answer_argument": "m.04v882j",
                "answer_type": "Entity",
                "entity_name": "Five little pigs."
            },
            {
                "answer_argument": "m.04v882s",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs."
            },
            {
                "answer_argument": "m.04v8836",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs"
            },
            {
                "answer_argument": "m.04v883g",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs"
            },
            {
                "answer_argument": "m.04v883q",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs (Also published as Murder In Retrospect)"
            },
            {
                "answer_argument": "m.04v883z",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs (Agatha Christie Mysteries Collection)"
            },
            {
                "answer_argument": "m.04v8846",
                "answer_type": "Entity",
                "entity_name": "Five Little Pigs (The Christie Collection)"
            },
            {
                "answer_argument": "m.04v8k2p",
                "answer_type": "Entity",
                "entity_name": "Cards on the table"
            },
            {
                "answer_argument": "m.04v8k34",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table"
            },
            {
                "answer_argument": "m.04v8k3d",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table"
            },
            {
                "answer_argument": "m.04v8k3n",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table"
            },
            {
                "answer_argument": "m.04v8k3x",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table"
            },
            {
                "answer_argument": "m.04v8k44",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table"
            },
            {
                "answer_argument": "m.04v8k4d",
                "answer_type": "Entity",
                "entity_name": "Cards on the table"
            },
            {
                "answer_argument": "m.04v8k4t",
                "answer_type": "Entity",
                "entity_name": "Cards on the table"
            },
            {
                "answer_argument": "m.04v8k57",
                "answer_type": "Entity",
                "entity_name": "Cards on the table"
            },
            {
                "answer_argument": "m.04v8k5n",
                "answer_type": "Entity",
                "entity_name": "Cards on the table"
            },
            {
                "answer_argument": "m.04v8k62",
                "answer_type": "Entity",
                "entity_name": "Cards on the table."
            },
            {
                "answer_argument": "m.04v8k6l",
                "answer_type": "Entity",
                "entity_name": "Cards on the table"
            },
            {
                "answer_argument": "m.04v8l60",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04v8l7h",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v8l80",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v8l88",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table (Mystery Masters)"
            },
            {
                "answer_argument": "m.04v8l8j",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04v8l99",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table (A Hercule Poirot Mystery)"
            },
            {
                "answer_argument": "m.04v8l9k",
                "answer_type": "Entity",
                "entity_name": "Cards on the table (Agatha Christie mystery collection)"
            },
            {
                "answer_argument": "m.04v8l9t",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table (Agatha Christie Mysteries Collection (Paperback))"
            },
            {
                "answer_argument": "m.04v8lb9",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04v8lbk",
                "answer_type": "Entity",
                "entity_name": "Cards on the Table (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v986y",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons"
            },
            {
                "answer_argument": "m.04v987_",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons (Poirot)"
            },
            {
                "answer_argument": "m.04v987r",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons"
            },
            {
                "answer_argument": "m.04v9887",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons"
            },
            {
                "answer_argument": "m.04v988z",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons"
            },
            {
                "answer_argument": "m.04v989_",
                "answer_type": "Entity",
                "entity_name": "Cat among the Pigeons"
            },
            {
                "answer_argument": "m.04v9898",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons"
            },
            {
                "answer_argument": "m.04v989j",
                "answer_type": "Entity",
                "entity_name": "Cat among the pigeons"
            },
            {
                "answer_argument": "m.04v98b7",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons"
            },
            {
                "answer_argument": "m.04v98bh",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons"
            },
            {
                "answer_argument": "m.04v98br",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons"
            },
            {
                "answer_argument": "m.04v9b3d",
                "answer_type": "Entity",
                "entity_name": "Cat among the pigeons."
            },
            {
                "answer_argument": "m.04v9b4c",
                "answer_type": "Entity",
                "entity_name": "Cat among the pigeons."
            },
            {
                "answer_argument": "m.04v9b4w",
                "answer_type": "Entity",
                "entity_name": "Cat among the pigeons"
            },
            {
                "answer_argument": "m.04v9b5b",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04v9b5l",
                "answer_type": "Entity",
                "entity_name": "A Cat Among the Pigeons (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v9b62",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v9b6b",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons ( A Hercule Poirot Mystery)"
            },
            {
                "answer_argument": "m.04v9b73",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v9b8j",
                "answer_type": "Entity",
                "entity_name": "Cat Among the Pigeons (Ulverscroft Mystery)"
            },
            {
                "answer_argument": "m.04v9f_6",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9f_y",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9ftz",
                "answer_type": "Entity",
                "entity_name": "Evil under the sun"
            },
            {
                "answer_argument": "m.04v9fvf",
                "answer_type": "Entity",
                "entity_name": "Evil under the sun"
            },
            {
                "answer_argument": "m.04v9fvx",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun (Poirot)"
            },
            {
                "answer_argument": "m.04v9fwm",
                "answer_type": "Entity",
                "entity_name": "Evil under the sun"
            },
            {
                "answer_argument": "m.04v9fx2",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9fxs",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9fy0",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9fyp",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9fz5",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9fzf",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9fzp",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9fzy",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9g0r",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun"
            },
            {
                "answer_argument": "m.04v9hk8",
                "answer_type": "Entity",
                "entity_name": "Evil under the Sun (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v9hkj",
                "answer_type": "Entity",
                "entity_name": "Evil under the sun"
            },
            {
                "answer_argument": "m.04v9hky",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04v9hl5",
                "answer_type": "Entity",
                "entity_name": "Evil under the sun"
            },
            {
                "answer_argument": "m.04v9hlm",
                "answer_type": "Entity",
                "entity_name": "Evil under the sun."
            },
            {
                "answer_argument": "m.04v9hm4",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04v9hmd",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v9hmn",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04v9hmx",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04v9hn_",
                "answer_type": "Entity",
                "entity_name": "Evil Under the Sun (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04vb8_c",
                "answer_type": "Entity",
                "entity_name": "Elephants can remember"
            },
            {
                "answer_argument": "m.04vb8_n",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember"
            },
            {
                "answer_argument": "m.04vb8_x",
                "answer_type": "Entity",
                "entity_name": "Elephants can remember"
            },
            {
                "answer_argument": "m.04vb8w_",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember (Poirot)"
            },
            {
                "answer_argument": "m.04vb8x7",
                "answer_type": "Entity",
                "entity_name": "Elephants can remember"
            },
            {
                "answer_argument": "m.04vb8xq",
                "answer_type": "Entity",
                "entity_name": "Elephants can remember"
            },
            {
                "answer_argument": "m.04vb8y5",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember"
            },
            {
                "answer_argument": "m.04vb8yx",
                "answer_type": "Entity",
                "entity_name": "Elephants can remember"
            },
            {
                "answer_argument": "m.04vb8zc",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember"
            },
            {
                "answer_argument": "m.04vb8zm",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember"
            },
            {
                "answer_argument": "m.04vb8zx",
                "answer_type": "Entity",
                "entity_name": "Elephants can remember"
            },
            {
                "answer_argument": "m.04vb90b",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember"
            },
            {
                "answer_argument": "m.04vb90l",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember"
            },
            {
                "answer_argument": "m.04vb90w",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember"
            },
            {
                "answer_argument": "m.04vb913",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember"
            },
            {
                "answer_argument": "m.04vb91y",
                "answer_type": "Entity",
                "entity_name": "Elephants can remember."
            },
            {
                "answer_argument": "m.04vbc4q",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vbc5w",
                "answer_type": "Entity",
                "entity_name": "Elephants can remember"
            },
            {
                "answer_argument": "m.04vbc69",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember (The Christie Collection)"
            },
            {
                "answer_argument": "m.04vbc6l",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember (The Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04vbc6v",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember (Agatha Christie Mysteries Collection)"
            },
            {
                "answer_argument": "m.04vbc73",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember (Hercule Poirot Mysteries (Audio))"
            },
            {
                "answer_argument": "m.04vbc89",
                "answer_type": "Entity",
                "entity_name": "Elephants Can Remember (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vbd0s",
                "answer_type": "Entity",
                "entity_name": "One, Two, Buckle My Shoe"
            },
            {
                "answer_argument": "m.04vbd20",
                "answer_type": "Entity",
                "entity_name": "One, Two, Buckle My Shoe"
            },
            {
                "answer_argument": "m.04vbd2r",
                "answer_type": "Entity",
                "entity_name": "One, Two, Buckle My Shoe"
            },
            {
                "answer_argument": "m.04vbd38",
                "answer_type": "Entity",
                "entity_name": "One, Two, Buckle My Shoe (Agatha Christie Mysteries Collection (Paperback))"
            },
            {
                "answer_argument": "m.04vbd3j",
                "answer_type": "Entity",
                "entity_name": "One, Two, Buckle My Shoe (Poirot)"
            },
            {
                "answer_argument": "m.04vbd3s",
                "answer_type": "Entity",
                "entity_name": "One, Two, Buckle My Shoe"
            },
            {
                "answer_argument": "m.04vbd40",
                "answer_type": "Entity",
                "entity_name": "One, Two, Buckle My Shoe"
            },
            {
                "answer_argument": "m.04vbd48",
                "answer_type": "Entity",
                "entity_name": "One, two, buckle my shoe"
            },
            {
                "answer_argument": "m.04vbd4p",
                "answer_type": "Entity",
                "entity_name": "One, Two, Buckle My Shoe (Ulverscroft Mystery)"
            },
            {
                "answer_argument": "m.04vbd4z",
                "answer_type": "Entity",
                "entity_name": "One,two, buckle my shoe"
            },
            {
                "answer_argument": "m.04vbd5d",
                "answer_type": "Entity",
                "entity_name": "One, Two, Buckle My Shoe"
            },
            {
                "answer_argument": "m.04vbd5n",
                "answer_type": "Entity",
                "entity_name": "One, Two Buckle My Shoe (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04vbd64",
                "answer_type": "Entity",
                "entity_name": "One, Two Buckle My Shoe (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04vbk0s",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood"
            },
            {
                "answer_argument": "m.04vbk1s",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood"
            },
            {
                "answer_argument": "m.04vbk20",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood"
            },
            {
                "answer_argument": "m.04vbk28",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood"
            },
            {
                "answer_argument": "m.04vbk2j",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood"
            },
            {
                "answer_argument": "m.04vbk3c",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood"
            },
            {
                "answer_argument": "m.04vbk3m",
                "answer_type": "Entity",
                "entity_name": "Taken at the flood"
            },
            {
                "answer_argument": "m.04vbk40",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood (Poirot)"
            },
            {
                "answer_argument": "m.04vbk51",
                "answer_type": "Entity",
                "entity_name": "Taken at the flood"
            },
            {
                "answer_argument": "m.04vbk5h",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04vbk5r",
                "answer_type": "Entity",
                "entity_name": "Taken at the flood"
            },
            {
                "answer_argument": "m.04vblm_",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vbln7",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood (aka There is a Tide...)"
            },
            {
                "answer_argument": "m.04vblnh",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood (Radio Collection)"
            },
            {
                "answer_argument": "m.04vblpg",
                "answer_type": "Entity",
                "entity_name": "Taken At The Flood (A Hercule Poirot Mystery)"
            },
            {
                "answer_argument": "m.04vblpq",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood (Ulverscroft Large Print)"
            },
            {
                "answer_argument": "m.04vbls4",
                "answer_type": "Entity",
                "entity_name": "Taken at the Flood (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04vbrck",
                "answer_type": "Entity",
                "entity_name": "Dumb Witness"
            },
            {
                "answer_argument": "m.04vbrdr",
                "answer_type": "Entity",
                "entity_name": "Dumb Witness"
            },
            {
                "answer_argument": "m.04vbrf8",
                "answer_type": "Entity",
                "entity_name": "Dumb Witness"
            },
            {
                "answer_argument": "m.04vbrfj",
                "answer_type": "Entity",
                "entity_name": "Dumb Witness"
            },
            {
                "answer_argument": "m.04vbrfs",
                "answer_type": "Entity",
                "entity_name": "Dumb Witness"
            },
            {
                "answer_argument": "m.04vbrg6",
                "answer_type": "Entity",
                "entity_name": "Dumb witness"
            },
            {
                "answer_argument": "m.04vbrgg",
                "answer_type": "Entity",
                "entity_name": "Dumb Witness"
            },
            {
                "answer_argument": "m.04vbrgz",
                "answer_type": "Entity",
                "entity_name": "Dumb witness"
            },
            {
                "answer_argument": "m.04vbrj2",
                "answer_type": "Entity",
                "entity_name": "Dumb witness."
            },
            {
                "answer_argument": "m.04vbrkj",
                "answer_type": "Entity",
                "entity_name": "Hickory Dickory Dock"
            },
            {
                "answer_argument": "m.04vbrl8",
                "answer_type": "Entity",
                "entity_name": "Hickory Dickory Dock"
            },
            {
                "answer_argument": "m.04vbrlj",
                "answer_type": "Entity",
                "entity_name": "Hickory Dickory Dock"
            },
            {
                "answer_argument": "m.04vbrm1",
                "answer_type": "Entity",
                "entity_name": "Hickory Dickory Dock (Poirot)"
            },
            {
                "answer_argument": "m.04vbrm9",
                "answer_type": "Entity",
                "entity_name": "Hickory Dickory Dock"
            },
            {
                "answer_argument": "m.04vbrn3",
                "answer_type": "Entity",
                "entity_name": "Hickory dickory dock"
            },
            {
                "answer_argument": "m.04vbrnk",
                "answer_type": "Entity",
                "entity_name": "Hickory dickory dock."
            },
            {
                "answer_argument": "m.04vbrnt",
                "answer_type": "Entity",
                "entity_name": "Hickory Dickory Dock (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vbrp1",
                "answer_type": "Entity",
                "entity_name": "Hickory Dickory Dock"
            },
            {
                "answer_argument": "m.04vbrpk",
                "answer_type": "Entity",
                "entity_name": "Hickory Dickory Dock (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04vbrwn",
                "answer_type": "Entity",
                "entity_name": "Dumb Witness (Poirot)"
            },
            {
                "answer_argument": "m.04vbt_0",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy"
            },
            {
                "answer_argument": "m.04vbt_8",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy"
            },
            {
                "answer_argument": "m.04vbt_j",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy (Poirot)"
            },
            {
                "answer_argument": "m.04vbt_s",
                "answer_type": "Entity",
                "entity_name": "Three act tragedy"
            },
            {
                "answer_argument": "m.04vbv07",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy"
            },
            {
                "answer_argument": "m.04vbv0j",
                "answer_type": "Entity",
                "entity_name": "Three ACT Tragedy"
            },
            {
                "answer_argument": "m.04vbv0s",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy"
            },
            {
                "answer_argument": "m.04vbv10",
                "answer_type": "Entity",
                "entity_name": "Three act tragedy"
            },
            {
                "answer_argument": "m.04vbv1g",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy"
            },
            {
                "answer_argument": "m.04vbv1q",
                "answer_type": "Entity",
                "entity_name": "Three act tragedy"
            },
            {
                "answer_argument": "m.04vbv24",
                "answer_type": "Entity",
                "entity_name": "Three act tragedy"
            },
            {
                "answer_argument": "m.04vbv2l",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy"
            },
            {
                "answer_argument": "m.04vbwbt",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vbwc1",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vbwd1",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vbwd9",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04vbwdt",
                "answer_type": "Entity",
                "entity_name": "Three Act Tragedy"
            },
            {
                "answer_argument": "m.04vc20s",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc210",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc219",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc21k",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vc220",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc229",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc22l",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vc231",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc23l",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc23w",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc243",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc24c",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc24m",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc24w",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vc26b",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vc26r",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vc274",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc28p",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vc29c",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vc4p2",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vc4ps",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (The Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04vc4qh",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04vc4rn",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (St. Martin's True Crime Library)"
            },
            {
                "answer_argument": "m.04vc4rx",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (The Christie Collection)"
            },
            {
                "answer_argument": "m.04vc4sd",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Ulverscroft Large Print)"
            },
            {
                "answer_argument": "m.04vc4sp",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Audio Editions Mystery Masters)"
            },
            {
                "answer_argument": "m.04vc4sy",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Mystery Masters)"
            },
            {
                "answer_argument": "m.04vc4tf",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None Book (Detective English Readers)"
            },
            {
                "answer_argument": "m.04vc4vf",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Audio Editions Mystery Masters)"
            },
            {
                "answer_argument": "m.04vc6_7",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc6_h",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc6_s",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc6xz",
                "answer_type": "Entity",
                "entity_name": "Death In The Clouds"
            },
            {
                "answer_argument": "m.04vc6y_",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc6yh",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc6yr",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc6z_",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc6z7",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc6zj",
                "answer_type": "Entity",
                "entity_name": "Death in the clouds"
            },
            {
                "answer_argument": "m.04vc700",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc709",
                "answer_type": "Entity",
                "entity_name": "Death In The Clouds"
            },
            {
                "answer_argument": "m.04vc719",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc71n",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc71x",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds"
            },
            {
                "answer_argument": "m.04vc87_",
                "answer_type": "Entity",
                "entity_name": "Death in the clouds"
            },
            {
                "answer_argument": "m.04vc88_",
                "answer_type": "Entity",
                "entity_name": "Death in the clouds"
            },
            {
                "answer_argument": "m.04vc89f",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vc89p",
                "answer_type": "Entity",
                "entity_name": "Death in the clouds"
            },
            {
                "answer_argument": "m.04vc8b3",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds (Agatha Christie Mysteries Collection (Paperback))"
            },
            {
                "answer_argument": "m.04vc8bc",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04vc8bx",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04vc8cn",
                "answer_type": "Entity",
                "entity_name": "Death in the Clouds (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04vc9jx",
                "answer_type": "Entity",
                "entity_name": "The Hound of Death (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vc9k5",
                "answer_type": "Entity",
                "entity_name": "The Hound of Death"
            },
            {
                "answer_argument": "m.04vc9kf",
                "answer_type": "Entity",
                "entity_name": "The hound of death"
            },
            {
                "answer_argument": "m.04vcw37",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies"
            },
            {
                "answer_argument": "m.04vcw3r",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware dies"
            },
            {
                "answer_argument": "m.04vcw4j",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies"
            },
            {
                "answer_argument": "m.04vcw4s",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies"
            },
            {
                "answer_argument": "m.04vcw59",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies (Poirot)"
            },
            {
                "answer_argument": "m.04vcw5k",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies"
            },
            {
                "answer_argument": "m.04vcw5t",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware dies"
            },
            {
                "answer_argument": "m.04vcw6_",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies"
            },
            {
                "answer_argument": "m.04vcw66",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies"
            },
            {
                "answer_argument": "m.04vcw6g",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware dies"
            },
            {
                "answer_argument": "m.04vcw6q",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies"
            },
            {
                "answer_argument": "m.04vcw77",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware dies"
            },
            {
                "answer_argument": "m.04vcw8x",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware dies."
            },
            {
                "answer_argument": "m.04vcwxl",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies (Agatha Christie Collection S.)"
            },
            {
                "answer_argument": "m.04vcwxw",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies (BBC Audio Crime)"
            },
            {
                "answer_argument": "m.04vcwy3",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vcwyc",
                "answer_type": "Entity",
                "entity_name": "Lord Edgware Dies (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04vf1h5",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1hz",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1lc",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1lm",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1nf",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1nq",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1p9",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1px",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1qc",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1qw",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1rp",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1s4",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1t5",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1vx",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime"
            },
            {
                "answer_argument": "m.04vf1w8",
                "answer_type": "Entity",
                "entity_name": "Partners in crime."
            },
            {
                "answer_argument": "m.04vf1wj",
                "answer_type": "Entity",
                "entity_name": "Partners in crime"
            },
            {
                "answer_argument": "m.04vf1x1",
                "answer_type": "Entity",
                "entity_name": "Partners in crime"
            },
            {
                "answer_argument": "m.04vf1xh",
                "answer_type": "Entity",
                "entity_name": "Partners in crime"
            },
            {
                "answer_argument": "m.04vf26z",
                "answer_type": "Entity",
                "entity_name": "The Regatta Mystery"
            },
            {
                "answer_argument": "m.04vf27g",
                "answer_type": "Entity",
                "entity_name": "The Regatta Mystery"
            },
            {
                "answer_argument": "m.04vf27z",
                "answer_type": "Entity",
                "entity_name": "The Regatta Mystery"
            },
            {
                "answer_argument": "m.04vf28h",
                "answer_type": "Entity",
                "entity_name": "The Regatta Mystery"
            },
            {
                "answer_argument": "m.04vf28v",
                "answer_type": "Entity",
                "entity_name": "The Regatta Mystery"
            },
            {
                "answer_argument": "m.04vf33q",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime (Listen for Pleasure)"
            },
            {
                "answer_argument": "m.04vf34_",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime (The Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04vf346",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime (Tommy & Tuppence Chronology)"
            },
            {
                "answer_argument": "m.04vf34h",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vf34r",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime (Tommy and Tuppence Mysteries)"
            },
            {
                "answer_argument": "m.04vf359",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime (Agatha Christie Mysteries Collection)"
            },
            {
                "answer_argument": "m.04vf35k",
                "answer_type": "Entity",
                "entity_name": "Partners in Crime (Vol. 1 Finessing the King, Vol 2 The Crackler, Vol 3 The Unbreakable Alibi)"
            },
            {
                "answer_argument": "m.04vf3qy",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates"
            },
            {
                "answer_argument": "m.04vf3r5",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates"
            },
            {
                "answer_argument": "m.04vf3rq",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates"
            },
            {
                "answer_argument": "m.04vf3s7",
                "answer_type": "Entity",
                "entity_name": "Poirot investigates."
            },
            {
                "answer_argument": "m.04vf3sh",
                "answer_type": "Entity",
                "entity_name": "Poirot investigates"
            },
            {
                "answer_argument": "m.04vf3sz",
                "answer_type": "Entity",
                "entity_name": "Poirot investigates"
            },
            {
                "answer_argument": "m.04vf3tf",
                "answer_type": "Entity",
                "entity_name": "Poirot investigates"
            },
            {
                "answer_argument": "m.04vf3tw",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates"
            },
            {
                "answer_argument": "m.04vf3v3",
                "answer_type": "Entity",
                "entity_name": "Poirot investigates."
            },
            {
                "answer_argument": "m.04vf3vk",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates"
            },
            {
                "answer_argument": "m.04vf3vt",
                "answer_type": "Entity",
                "entity_name": "Poirot investigates"
            },
            {
                "answer_argument": "m.04vf3w7",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates (Poirot)"
            },
            {
                "answer_argument": "m.04vf3wh",
                "answer_type": "Entity",
                "entity_name": "Poirot investigates"
            },
            {
                "answer_argument": "m.04vf52b",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vf52l",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04vf52v",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates (Hercule Poirot Mysteries (Audio))"
            },
            {
                "answer_argument": "m.04vf532",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04vf53b",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates (Hercule Poirot Mysteries (Audio))"
            },
            {
                "answer_argument": "m.04vf54g",
                "answer_type": "Entity",
                "entity_name": "POIROT INVESTIGATES (Hercule Poirot Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04vf556",
                "answer_type": "Entity",
                "entity_name": "Poirot Investigates (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04vfs_3",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown"
            },
            {
                "answer_argument": "m.04vfs_c",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown"
            },
            {
                "answer_argument": "m.04vfs_n",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown"
            },
            {
                "answer_argument": "m.04vfs_y",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown"
            },
            {
                "answer_argument": "m.04vfszw",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown"
            },
            {
                "answer_argument": "m.04vft_w",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train (Poirot)"
            },
            {
                "answer_argument": "m.04vft07",
                "answer_type": "Entity",
                "entity_name": "Destination unknown"
            },
            {
                "answer_argument": "m.04vft0p",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown"
            },
            {
                "answer_argument": "m.04vft0y",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown"
            },
            {
                "answer_argument": "m.04vft16",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown (Signature Editions)"
            },
            {
                "answer_argument": "m.04vft1w",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vft23",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown (Mystery Masters Series)"
            },
            {
                "answer_argument": "m.04vft2t",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown (Mystery Masters Series)"
            },
            {
                "answer_argument": "m.04vft64",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vft79",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vft7k",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vft7t",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vft81",
                "answer_type": "Entity",
                "entity_name": "PASSENGER TO FRANKFURT"
            },
            {
                "answer_argument": "m.04vft8b",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vft8l",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vft91",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vft9b",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vftb1",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt."
            },
            {
                "answer_argument": "m.04vftbn",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vftcd",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vftcp",
                "answer_type": "Entity",
                "entity_name": "PASSENGER TO FRANKFURT."
            },
            {
                "answer_argument": "m.04vftcy",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vftdc",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt"
            },
            {
                "answer_argument": "m.04vftnp",
                "answer_type": "Entity",
                "entity_name": "Destination unknown (Agatha Christie mystery collection)"
            },
            {
                "answer_argument": "m.04vftq2",
                "answer_type": "Entity",
                "entity_name": "Destination Unknown (St. Martin's Minotaur Mysteries)"
            },
            {
                "answer_argument": "m.04vftrm",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt (The Christie Collection)"
            },
            {
                "answer_argument": "m.04vftsv",
                "answer_type": "Entity",
                "entity_name": "Passenger to Frankfurt (Winterbrook Edition)"
            },
            {
                "answer_argument": "m.04vfv03",
                "answer_type": "Entity",
                "entity_name": "Mystery of the Blue Train"
            },
            {
                "answer_argument": "m.04vfv0d",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train"
            },
            {
                "answer_argument": "m.04vfv0n",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train"
            },
            {
                "answer_argument": "m.04vfv0y",
                "answer_type": "Entity",
                "entity_name": "The mystery of the blue train"
            },
            {
                "answer_argument": "m.04vfv1d",
                "answer_type": "Entity",
                "entity_name": "Mystery of the Blue Train"
            },
            {
                "answer_argument": "m.04vfv1n",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train"
            },
            {
                "answer_argument": "m.04vfv1x",
                "answer_type": "Entity",
                "entity_name": "Mystery of the blue train"
            },
            {
                "answer_argument": "m.04vfv29",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train"
            },
            {
                "answer_argument": "m.04vfv2l",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train"
            },
            {
                "answer_argument": "m.04vfv2v",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train"
            },
            {
                "answer_argument": "m.04vfv32",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train"
            },
            {
                "answer_argument": "m.04vfv3b",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train"
            },
            {
                "answer_argument": "m.04vfvm6",
                "answer_type": "Entity",
                "entity_name": "The mystery of the blue train"
            },
            {
                "answer_argument": "m.04vfvmy",
                "answer_type": "Entity",
                "entity_name": "THE MYSTERY OF THE BLUE TRAIN."
            },
            {
                "answer_argument": "m.04vfvn5",
                "answer_type": "Entity",
                "entity_name": "Mystery Of The Blue Train / The Listerdale Mystery / Murder At The Vicarage"
            },
            {
                "answer_argument": "m.04vfvnf",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vfvqw",
                "answer_type": "Entity",
                "entity_name": "The Mystery of the Blue Train (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vg_0f",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04vg_0z",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04vg_17",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder (Large Print Ed)"
            },
            {
                "answer_argument": "m.04vg_21",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04vg_29",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder (The Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04vg_2m",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04vg_2w",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder (Miss Marple Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04vg_33",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder (Miss Marple Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04vg4_2",
                "answer_type": "Entity",
                "entity_name": "Seven Dials Mystery"
            },
            {
                "answer_argument": "m.04vg4_b",
                "answer_type": "Entity",
                "entity_name": "The seven dials mystery"
            },
            {
                "answer_argument": "m.04vg4_s",
                "answer_type": "Entity",
                "entity_name": "The Seven Dials mystery."
            },
            {
                "answer_argument": "m.04vg4v_",
                "answer_type": "Entity",
                "entity_name": "The Seven Dials Mystery"
            },
            {
                "answer_argument": "m.04vg4w8",
                "answer_type": "Entity",
                "entity_name": "Seven Dials Mystery"
            },
            {
                "answer_argument": "m.04vg4wz",
                "answer_type": "Entity",
                "entity_name": "The Seven Dials Mystery"
            },
            {
                "answer_argument": "m.04vg4xz",
                "answer_type": "Entity",
                "entity_name": "The Seven Dials Mystery"
            },
            {
                "answer_argument": "m.04vg4y6",
                "answer_type": "Entity",
                "entity_name": "The seven dials mystery"
            },
            {
                "answer_argument": "m.04vg4yp",
                "answer_type": "Entity",
                "entity_name": "The Seven Dials Mystery"
            },
            {
                "answer_argument": "m.04vg4z5",
                "answer_type": "Entity",
                "entity_name": "Seven Dials Mystery"
            },
            {
                "answer_argument": "m.04vg4zf",
                "answer_type": "Entity",
                "entity_name": "The Seven Dials Mystery"
            },
            {
                "answer_argument": "m.04vg4zp",
                "answer_type": "Entity",
                "entity_name": "The seven dials mystery"
            },
            {
                "answer_argument": "m.04vg500",
                "answer_type": "Entity",
                "entity_name": "The Seven Dials Mystery"
            },
            {
                "answer_argument": "m.04vgbvn",
                "answer_type": "Entity",
                "entity_name": "The seven dials mystery"
            },
            {
                "answer_argument": "m.04vgbw9",
                "answer_type": "Entity",
                "entity_name": "The Seven Dials Mystery (Agatha Christie Signature Edition)"
            },
            {
                "answer_argument": "m.04vgbwl",
                "answer_type": "Entity",
                "entity_name": "The Seven Dials Mystery (Agatha Christie Mystery Collection) Bantam Blue Leatherette Edition"
            },
            {
                "answer_argument": "m.04vgbwv",
                "answer_type": "Entity",
                "entity_name": "The Seven Dials mystery"
            },
            {
                "answer_argument": "m.04vgbxb",
                "answer_type": "Entity",
                "entity_name": "Seven Dials Mystery (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04vgftt",
                "answer_type": "Entity",
                "entity_name": "The secret adversary"
            },
            {
                "answer_argument": "m.04vgfv8",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfvj",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfvt",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfw1",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfw9",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfwk",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfwv",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfx2",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfxc",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfxn",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfxy",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfy6",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfyg",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfyr",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfz0",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vgfz9",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghp7",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghqh",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghqs",
                "answer_type": "Entity",
                "entity_name": "Secret Adversary"
            },
            {
                "answer_argument": "m.04vghr0",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghr9",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghrk",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghrv",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghs2",
                "answer_type": "Entity",
                "entity_name": "Secret Adversary"
            },
            {
                "answer_argument": "m.04vghsb",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghsm",
                "answer_type": "Entity",
                "entity_name": "Secret Adversary"
            },
            {
                "answer_argument": "m.04vghsx",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vght_",
                "answer_type": "Entity",
                "entity_name": "Secret Adversary"
            },
            {
                "answer_argument": "m.04vght4",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghtf",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghtq",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghv7",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghvj",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary"
            },
            {
                "answer_argument": "m.04vghvt",
                "answer_type": "Entity",
                "entity_name": "The secret adversary"
            },
            {
                "answer_argument": "m.04vghwn",
                "answer_type": "Entity",
                "entity_name": "Secret Adversary (Unabridged Classics)"
            },
            {
                "answer_argument": "m.04vgj86",
                "answer_type": "Entity",
                "entity_name": "The murder on the links"
            },
            {
                "answer_argument": "m.04vgj90",
                "answer_type": "Entity",
                "entity_name": "Murder on the Links"
            },
            {
                "answer_argument": "m.04vgj98",
                "answer_type": "Entity",
                "entity_name": "The Murder on the Links"
            },
            {
                "answer_argument": "m.04vgj9j",
                "answer_type": "Entity",
                "entity_name": "The Murder on the Links"
            },
            {
                "answer_argument": "m.04vgj9s",
                "answer_type": "Entity",
                "entity_name": "Murder on the Links"
            },
            {
                "answer_argument": "m.04vgjbk",
                "answer_type": "Entity",
                "entity_name": "Murder On the Links"
            },
            {
                "answer_argument": "m.04vgjc8",
                "answer_type": "Entity",
                "entity_name": "Murder on the Links"
            },
            {
                "answer_argument": "m.04vgjcj",
                "answer_type": "Entity",
                "entity_name": "Murder On The Links"
            },
            {
                "answer_argument": "m.04vgjcs",
                "answer_type": "Entity",
                "entity_name": "The murder on the links"
            },
            {
                "answer_argument": "m.04vgjd5",
                "answer_type": "Entity",
                "entity_name": "Murder on the Links"
            },
            {
                "answer_argument": "m.04vgjdf",
                "answer_type": "Entity",
                "entity_name": "Murder on the Links"
            },
            {
                "answer_argument": "m.04vgjdp",
                "answer_type": "Entity",
                "entity_name": "The murder on the links."
            },
            {
                "answer_argument": "m.04vgjvy",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary (Tommy & Tuppence Chronology)"
            },
            {
                "answer_argument": "m.04vgjwf",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary (Large Print Edition)"
            },
            {
                "answer_argument": "m.04vgjwq",
                "answer_type": "Entity",
                "entity_name": "Secret Adversary (Unabridged Classics)"
            },
            {
                "answer_argument": "m.04vgjx6",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary (Dodo Press)"
            },
            {
                "answer_argument": "m.04vgjxh",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary (G K Hall's Agatha Christie Series)"
            },
            {
                "answer_argument": "m.04vgjxs",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04vgjy0",
                "answer_type": "Entity",
                "entity_name": "Secret Adversary (The Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04vgjys",
                "answer_type": "Entity",
                "entity_name": "The Secret Adversary (Classic Books on Cassettes Collection)"
            },
            {
                "answer_argument": "m.04vgkq_",
                "answer_type": "Entity",
                "entity_name": "The murder on the links"
            },
            {
                "answer_argument": "m.04vgkq2",
                "answer_type": "Entity",
                "entity_name": "Murder on the links"
            },
            {
                "answer_argument": "m.04vgkrk",
                "answer_type": "Entity",
                "entity_name": "The Murder on the Links (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vgkrt",
                "answer_type": "Entity",
                "entity_name": "Murder on the Links (BBC Audio Crime)"
            },
            {
                "answer_argument": "m.04vgks1",
                "answer_type": "Entity",
                "entity_name": "Murder on the links (The Agatha Christie mystery collection)"
            },
            {
                "answer_argument": "m.04vgks9",
                "answer_type": "Entity",
                "entity_name": "The Murder on the Links (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04vgksl",
                "answer_type": "Entity",
                "entity_name": "Murder on the Links (BBC Audio Crime)"
            },
            {
                "answer_argument": "m.04vgktm",
                "answer_type": "Entity",
                "entity_name": "Murder On The Links (Classic Books on Cassettes Collection)"
            },
            {
                "answer_argument": "m.04vgx_3",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye (Miss Marple Mysteries (Audio))"
            },
            {
                "answer_argument": "m.04vgx_c",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye (Miss Marple Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04vgx_n",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye (BBC Audio Crime)"
            },
            {
                "answer_argument": "m.04vgx_x",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye (BBC Radio Collection: Crimes and Thrillers)"
            },
            {
                "answer_argument": "m.04vgxw0",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye"
            },
            {
                "answer_argument": "m.04vgxx3",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye"
            },
            {
                "answer_argument": "m.04vgxxc",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04vgxxm",
                "answer_type": "Entity",
                "entity_name": "a Pocket full of Rye"
            },
            {
                "answer_argument": "m.04vgxxw",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vgxy3",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full Of Rye"
            },
            {
                "answer_argument": "m.04vgxyc",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye"
            },
            {
                "answer_argument": "m.04vgxzb",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye"
            },
            {
                "answer_argument": "m.04vgxzl",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye (Miss Marple)"
            },
            {
                "answer_argument": "m.04vgxzv",
                "answer_type": "Entity",
                "entity_name": "A Pocket Full of Rye (A Jane Marple Murder Mystery)"
            },
            {
                "answer_argument": "m.04vgy71",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder"
            },
            {
                "answer_argument": "m.04vgy79",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder"
            },
            {
                "answer_argument": "m.04vgy7k",
                "answer_type": "Entity",
                "entity_name": "Sleeping murder"
            },
            {
                "answer_argument": "m.04vgy80",
                "answer_type": "Entity",
                "entity_name": "Sleeping murder"
            },
            {
                "answer_argument": "m.04vgy8h",
                "answer_type": "Entity",
                "entity_name": "Sleeping murder."
            },
            {
                "answer_argument": "m.04vgy8x",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder"
            },
            {
                "answer_argument": "m.04vgy94",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder"
            },
            {
                "answer_argument": "m.04vgy9f",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder"
            },
            {
                "answer_argument": "m.04vgy9p",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder"
            },
            {
                "answer_argument": "m.04vgy9y",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder"
            },
            {
                "answer_argument": "m.04vgyb5",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder"
            },
            {
                "answer_argument": "m.04vgybf",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder"
            },
            {
                "answer_argument": "m.04vgybp",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder"
            },
            {
                "answer_argument": "m.04vgyf0",
                "answer_type": "Entity",
                "entity_name": "Sleeping murder"
            },
            {
                "answer_argument": "m.04vgzyl",
                "answer_type": "Entity",
                "entity_name": "Sleeping Murder (Miss Marple)"
            },
            {
                "answer_argument": "m.04vgzz8",
                "answer_type": "Entity",
                "entity_name": "Sleeping murder"
            },
            {
                "answer_argument": "m.04vhfmg",
                "answer_type": "Entity",
                "entity_name": "The Big Four"
            },
            {
                "answer_argument": "m.04vhfmz",
                "answer_type": "Entity",
                "entity_name": "Big Four"
            },
            {
                "answer_argument": "m.04vhfn6",
                "answer_type": "Entity",
                "entity_name": "The Big Four"
            },
            {
                "answer_argument": "m.04vhfng",
                "answer_type": "Entity",
                "entity_name": "The Big Four"
            },
            {
                "answer_argument": "m.04vhfnq",
                "answer_type": "Entity",
                "entity_name": "The Big Four"
            },
            {
                "answer_argument": "m.04vhfnz",
                "answer_type": "Entity",
                "entity_name": "Big Four"
            },
            {
                "answer_argument": "m.04vhfph",
                "answer_type": "Entity",
                "entity_name": "Big Four"
            },
            {
                "answer_argument": "m.04vhfpr",
                "answer_type": "Entity",
                "entity_name": "The Big Four"
            },
            {
                "answer_argument": "m.04vhfqg",
                "answer_type": "Entity",
                "entity_name": "The big four."
            },
            {
                "answer_argument": "m.04vhfqq",
                "answer_type": "Entity",
                "entity_name": "Big Four"
            },
            {
                "answer_argument": "m.04vhfqz",
                "answer_type": "Entity",
                "entity_name": "The Big Four"
            },
            {
                "answer_argument": "m.04vhfs6",
                "answer_type": "Entity",
                "entity_name": "The Big Four"
            },
            {
                "answer_argument": "m.04vhfsz",
                "answer_type": "Entity",
                "entity_name": "Big Four"
            },
            {
                "answer_argument": "m.04vhgwf",
                "answer_type": "Entity",
                "entity_name": "The Big Four."
            },
            {
                "answer_argument": "m.04vhgwq",
                "answer_type": "Entity",
                "entity_name": "The big four"
            },
            {
                "answer_argument": "m.04vhgx4",
                "answer_type": "Entity",
                "entity_name": "The Big Four (Poirot)"
            },
            {
                "answer_argument": "m.04vhgxd",
                "answer_type": "Entity",
                "entity_name": "The Big Four (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04vhgy3",
                "answer_type": "Entity",
                "entity_name": "The Big Four (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vhgyx",
                "answer_type": "Entity",
                "entity_name": "The Big Four (G K Hall Large Print Book Series)"
            },
            {
                "answer_argument": "m.04vhgz5",
                "answer_type": "Entity",
                "entity_name": "Big Four (Ulverscroft Large Print)"
            },
            {
                "answer_argument": "m.04vhnpm",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced"
            },
            {
                "answer_argument": "m.04vhnq3",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced"
            },
            {
                "answer_argument": "m.04vhnqc",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced"
            },
            {
                "answer_argument": "m.04vhnqm",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vhnr3",
                "answer_type": "Entity",
                "entity_name": "A Murder is Announced"
            },
            {
                "answer_argument": "m.04vhnrc",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced (Miss Marple)"
            },
            {
                "answer_argument": "m.04vhnrw",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced (Miss Marple)"
            },
            {
                "answer_argument": "m.04vhns3",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced (Miss Marple Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04vhnt1",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04vhnt9",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04vhntk",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced"
            },
            {
                "answer_argument": "m.04vhnv9",
                "answer_type": "Entity",
                "entity_name": "A Murder is Announced (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04vhpbz",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04vhpch",
                "answer_type": "Entity",
                "entity_name": "A Murder Is Announced (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04vjk_7",
                "answer_type": "Entity",
                "entity_name": "The Thirteen Problems"
            },
            {
                "answer_argument": "m.04vjk_h",
                "answer_type": "Entity",
                "entity_name": "The thirteen problems"
            },
            {
                "answer_argument": "m.04vjkzd",
                "answer_type": "Entity",
                "entity_name": "The Thirteen Problems"
            },
            {
                "answer_argument": "m.04vjl07",
                "answer_type": "Entity",
                "entity_name": "The Thirteen Problems"
            },
            {
                "answer_argument": "m.04vjl0h",
                "answer_type": "Entity",
                "entity_name": "Thirteen Problems"
            },
            {
                "answer_argument": "m.04vjl0s",
                "answer_type": "Entity",
                "entity_name": "Thirteen Problems"
            },
            {
                "answer_argument": "m.04vjl1_",
                "answer_type": "Entity",
                "entity_name": "The Thirteen Problems (Miss Marple)"
            },
            {
                "answer_argument": "m.04vjl10",
                "answer_type": "Entity",
                "entity_name": "The thirteen problems"
            },
            {
                "answer_argument": "m.04vjl18",
                "answer_type": "Entity",
                "entity_name": "The Thirteen Problems"
            },
            {
                "answer_argument": "m.04vjl1k",
                "answer_type": "Entity",
                "entity_name": "The thirteen problems"
            },
            {
                "answer_argument": "m.04vjl2q",
                "answer_type": "Entity",
                "entity_name": "The thirteen problems"
            },
            {
                "answer_argument": "m.04vjlvl",
                "answer_type": "Entity",
                "entity_name": "The Thirteen Problems (Miss Marple)"
            },
            {
                "answer_argument": "m.04vjlvv",
                "answer_type": "Entity",
                "entity_name": "The Thirteen Problems (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04vkg9q",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkg9z",
                "answer_type": "Entity",
                "entity_name": "The Murder At the Vicarage"
            },
            {
                "answer_argument": "m.04vkgbq",
                "answer_type": "Entity",
                "entity_name": "The murder at the vicarage"
            },
            {
                "answer_argument": "m.04vkgc5",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkgcf",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkgcp",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkgcy",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkgdm",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkgfb",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkgfw",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkgg3",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkggc",
                "answer_type": "Entity",
                "entity_name": "The murder at the vicarage"
            },
            {
                "answer_argument": "m.04vkggw",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkgh4",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkh_5",
                "answer_type": "Entity",
                "entity_name": "The murder at the vicarage"
            },
            {
                "answer_argument": "m.04vkh_l",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (Miss Marple Mystery Series)"
            },
            {
                "answer_argument": "m.04vkh_v",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage (Miss Marple)"
            },
            {
                "answer_argument": "m.04vkhyq",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage"
            },
            {
                "answer_argument": "m.04vkhzf",
                "answer_type": "Entity",
                "entity_name": "Murder at the vicarage."
            },
            {
                "answer_argument": "m.04vkhzp",
                "answer_type": "Entity",
                "entity_name": "The murder at the vicarage."
            },
            {
                "answer_argument": "m.04vkhzy",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage (Miss Marple)"
            },
            {
                "answer_argument": "m.04vkj03",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04vkj0c",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (BBC Radio Presents)"
            },
            {
                "answer_argument": "m.04vkj0m",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage (Acting Edition)"
            },
            {
                "answer_argument": "m.04vkj0w",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (Miss Marple Mysteries (Paperback))"
            },
            {
                "answer_argument": "m.04vkj13",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (Miss Marple Mysteries)"
            },
            {
                "answer_argument": "m.04vkj23",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (G. K. Hall (Large Print))"
            },
            {
                "answer_argument": "m.04vkj2n",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (Agatha Christie Mysteries Collection)"
            },
            {
                "answer_argument": "m.04vkjfy",
                "answer_type": "Entity",
                "entity_name": "Murder at the Vicarage (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04vkjlz",
                "answer_type": "Entity",
                "entity_name": "The Murder at the Vicarage (BBC Full Cast Dramatization)"
            },
            {
                "answer_argument": "m.04vkxm_",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxnj",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxns",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxp1",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxpb",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxpl",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxpw",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vkxqb",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vkxqt",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxr1",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxrb",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vkxrr",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxs0",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vkxsf",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxsp",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxsy",
                "answer_type": "Entity",
                "entity_name": "And then there were none"
            },
            {
                "answer_argument": "m.04vkxt5",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vkxtq",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None"
            },
            {
                "answer_argument": "m.04vky_1",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Agatha Christie Collection)"
            },
            {
                "answer_argument": "m.04vky_9",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (The Agatha Christie Mystery Collection)"
            },
            {
                "answer_argument": "m.04vky_k",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (The Christie Collection)"
            },
            {
                "answer_argument": "m.04vky_y",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Ulverscroft Large Print)"
            },
            {
                "answer_argument": "m.04vkz0_",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None Book (Detective English Readers)"
            },
            {
                "answer_argument": "m.04vkz06",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Mystery Masters)"
            },
            {
                "answer_argument": "m.04vkz0r",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (St. Martin's True Crime Library)"
            },
            {
                "answer_argument": "m.04vkz18",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Audio Editions Mystery Masters)"
            },
            {
                "answer_argument": "m.04vkz1j",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Audio Editions Mystery Masters)"
            },
            {
                "answer_argument": "m.04vkz1s",
                "answer_type": "Entity",
                "entity_name": "And Then There Were None (Agatha Christie Audio Mystery)"
            },
            {
                "answer_argument": "m.04vzz5n",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04vzz63",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04vzz6l",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04vzz71",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04vzz7j",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04vzz7v",
                "answer_type": "Entity",
                "entity_name": "Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04vzz82",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04vzz8m",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04vzz8x",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04vzz96",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04vzz9s",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04vzzb0",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04vzzb9",
                "answer_type": "Entity",
                "entity_name": "The mysterious affair at Styles"
            },
            {
                "answer_argument": "m.04vzzbl",
                "answer_type": "Entity",
                "entity_name": "Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04vzzbw",
                "answer_type": "Entity",
                "entity_name": "Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04vzzcf",
                "answer_type": "Entity",
                "entity_name": "The Mysterious Affair at Styles"
            },
            {
                "answer_argument": "m.04w00tc",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.04w00tm",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.04w00v_",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.04w00vd",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.04w00vp",
                "answer_type": "Entity",
                "entity_name": "Sad cypress"
            },
            {
                "answer_argument": "m.04w00w7",
                "answer_type": "Entity",
                "entity_name": "Sad cypress"
            },
            {
                "answer_argument": "m.04w00wp",
                "answer_type": "Entity",
                "entity_name": "Sad cypress."
            },
            {
                "answer_argument": "m.04w00wy",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.04w00x6",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.04w00xg",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.04w00xq",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.04w00xz",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.04w00yg",
                "answer_type": "Entity",
                "entity_name": "Sad cypress."
            },
            {
                "answer_argument": "m.04w02vv",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04w02w2",
                "answer_type": "Entity",
                "entity_name": "Sad cypress."
            },
            {
                "answer_argument": "m.04w02wj",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04w02ws",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress (Poirot)"
            },
            {
                "answer_argument": "m.04w02x0",
                "answer_type": "Entity",
                "entity_name": "Sad cypress"
            },
            {
                "answer_argument": "m.04w02xh",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress (BBC Radio Collection)"
            },
            {
                "answer_argument": "m.04w02xr",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress"
            },
            {
                "answer_argument": "m.04w02y4",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress (Hercule Poirot)"
            },
            {
                "answer_argument": "m.04w02yf",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress (Hercule Poirot Mysteries)"
            },
            {
                "answer_argument": "m.04w02yp",
                "answer_type": "Entity",
                "entity_name": "Sad Cypress (BBC Radio Collection)"
            }
        ],
        "s_expression": "(JOIN (R book.author.book_editions_published) m.0ldd)",
        "s_expression_processed": "(JOIN (R book.author.book_editions_published) m.0ldd)"
    },
    {
        "qid": "WebQTest-379",
        "question": "what year does hitler die",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07_m9_",
                    "class": "common.topic",
                    "friendly_name": "hitler",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.date_of_death"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:people.deceased_person.date_of_death ?x .\n}\n",
        "topic_entity": "m.07_m9_",
        "answer": [
            {
                "answer_argument": "1945-04-30",
                "answer_type": "Value",
                "entity_name": null
            }
        ],
        "s_expression": "(JOIN (R people.deceased_person.date_of_death) m.07_m9_)",
        "s_expression_processed": "(JOIN (R people.deceased_person.date_of_death) m.07_m9_)"
    },
    {
        "qid": "WebQTest-382",
        "question": "what book did tupac write",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07pzc",
                    "class": "common.topic",
                    "friendly_name": "tupac",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "book.author.book_editions_published"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07pzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07pzc ns:book.author.book_editions_published ?x .\n}\n",
        "topic_entity": "m.07pzc",
        "answer": [
            {
                "answer_argument": "m.04xl32f",
                "answer_type": "Entity",
                "entity_name": "The Rose That Grew from Concrete"
            },
            {
                "answer_argument": "m.04xl335",
                "answer_type": "Entity",
                "entity_name": "The rose that grew from concrete"
            },
            {
                "answer_argument": "m.04xl36z",
                "answer_type": "Entity",
                "entity_name": "Tupac"
            },
            {
                "answer_argument": "m.04xl38k",
                "answer_type": "Entity",
                "entity_name": "Tupac"
            },
            {
                "answer_argument": "m.04xl391",
                "answer_type": "Entity",
                "entity_name": "Tupac"
            }
        ],
        "s_expression": "(JOIN (R book.author.book_editions_published) m.07pzc)",
        "s_expression_processed": "(JOIN (R book.author.book_editions_published) m.07pzc)"
    },
    {
        "qid": "WebQTest-383",
        "question": "what language do chinese people write in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01r2l",
                    "class": "common.topic",
                    "friendly_name": "chinese",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "language.human_language.writing_system"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r2l ns:language.human_language.writing_system ?x .\n}\n",
        "topic_entity": "m.01r2l",
        "answer": [
            {
                "answer_argument": "m.014lbg",
                "answer_type": "Entity",
                "entity_name": "Nüshu script"
            },
            {
                "answer_argument": "m.01mw7r",
                "answer_type": "Entity",
                "entity_name": "Simplified Chinese character"
            },
            {
                "answer_argument": "m.01nf5z",
                "answer_type": "Entity",
                "entity_name": "Traditional Chinese characters"
            },
            {
                "answer_argument": "m.050fyz",
                "answer_type": "Entity",
                "entity_name": "'Phags-pa script"
            },
            {
                "answer_argument": "m.0mmzb",
                "answer_type": "Entity",
                "entity_name": "Chinese characters"
            }
        ],
        "s_expression": "(JOIN (R language.human_language.writing_system) m.01r2l)",
        "s_expression_processed": "(JOIN (R language.human_language.writing_system) m.01r2l)"
    },
    {
        "qid": "WebQTest-386",
        "question": "how deep is lake merritt oakland",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02_sf_",
                    "class": "common.topic",
                    "friendly_name": "lake merritt",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "geography.body_of_water.depth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_sf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_sf_ ns:geography.body_of_water.depth ?x .\n}\n",
        "topic_entity": "m.02_sf_",
        "answer": [
            {
                "answer_argument": "3.048",
                "answer_type": "Value",
                "entity_name": null
            }
        ],
        "s_expression": "(JOIN (R geography.body_of_water.depth) m.02_sf_)",
        "s_expression_processed": "(JOIN (R geography.body_of_water.depth) m.02_sf_)"
    },
    {
        "qid": "WebQTest-389",
        "question": "what type of music did claude debussy play",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01vvy",
                    "class": "common.topic",
                    "friendly_name": "claude debussy",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.artist.genre"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vvy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vvy ns:music.artist.genre ?x .\n}\n",
        "topic_entity": "m.01vvy",
        "answer": [
            {
                "answer_argument": "m.014m9r",
                "answer_type": "Entity",
                "entity_name": "Incidental music"
            },
            {
                "answer_argument": "m.01wqlc",
                "answer_type": "Entity",
                "entity_name": "20th-century classical music"
            },
            {
                "answer_argument": "m.021dvj",
                "answer_type": "Entity",
                "entity_name": "Ballet"
            },
            {
                "answer_argument": "m.06q6jz",
                "answer_type": "Entity",
                "entity_name": "Art song"
            },
            {
                "answer_argument": "m.0d6n1",
                "answer_type": "Entity",
                "entity_name": "Ballet"
            },
            {
                "answer_argument": "m.0ggq0m",
                "answer_type": "Entity",
                "entity_name": "Classical music"
            },
            {
                "answer_argument": "m.0h4v9d",
                "answer_type": "Entity",
                "entity_name": "French opera"
            }
        ],
        "s_expression": "(JOIN (R music.artist.genre) m.01vvy)",
        "s_expression_processed": "(JOIN (R music.artist.genre) m.01vvy)"
    },
    {
        "qid": "WebQTest-396",
        "question": "what college did sir isaac newton go to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03s9v",
                    "class": "common.topic",
                    "friendly_name": "sir isaac newton",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03s9v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03s9v ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.03s9v",
        "answer": [
            {
                "answer_argument": "m.07tk7",
                "answer_type": "Entity",
                "entity_name": "Trinity College, Cambridge"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.03s9v)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.03s9v)))"
    },
    {
        "qid": "WebQTest-401",
        "question": "who plays edward scissorhands",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01s3vk",
                    "class": "common.topic",
                    "friendly_name": "edward scissorhands",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0gmm518",
                    "class": "common.topic",
                    "friendly_name": "edward scissorhands",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film.starring"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.character"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01s3vk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01s3vk ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0gmm518 .\n}\n",
        "topic_entity": "m.01s3vk",
        "answer": [
            {
                "answer_argument": "m.0jfx1",
                "answer_type": "Entity",
                "entity_name": "Johnny Depp"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.01s3vk) (JOIN film.performance.character m.0gmm518)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.01s3vk) (JOIN film.performance.character m.0gmm518)))"
    },
    {
        "qid": "WebQTest-404",
        "question": "what was lebron james first team",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01jz6d",
                    "class": "common.topic",
                    "friendly_name": "lebron james",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "basketball.basketball_player.player_statistics"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "basketball.basketball_player_stats.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:basketball.basketball_player.player_statistics ?y .\n?y ns:basketball.basketball_player_stats.team ?x .\n}\n",
        "topic_entity": "m.01jz6d",
        "answer": [
            {
                "answer_argument": "m.0jm7n",
                "answer_type": "Entity",
                "entity_name": "Cleveland Cavaliers"
            }
        ],
        "s_expression": "(JOIN (R basketball.basketball_player_stats.team) (JOIN (R basketball.basketball_player.player_statistics) m.01jz6d))",
        "s_expression_processed": "(JOIN (R basketball.basketball_player_stats.team) (JOIN (R basketball.basketball_player.player_statistics) m.01jz6d))"
    },
    {
        "qid": "WebQTest-419",
        "question": "what country did magellan represent",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.033ky",
                    "class": "common.topic",
                    "friendly_name": "magellan",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.nationality"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.033ky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.033ky ns:people.person.nationality ?x .\n}\n",
        "topic_entity": "m.033ky",
        "answer": [
            {
                "answer_argument": "m.0285m87",
                "answer_type": "Entity",
                "entity_name": "Kingdom of Portugal"
            }
        ],
        "s_expression": "(JOIN (R people.person.nationality) m.033ky)",
        "s_expression_processed": "(JOIN (R people.person.nationality) m.033ky)"
    },
    {
        "qid": "WebQTest-432",
        "question": "who did annie oakley married",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0237np",
                    "class": "common.topic",
                    "friendly_name": "annie oakley",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0237np)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0237np ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "topic_entity": "m.0237np",
        "answer": [
            {
                "answer_argument": "m.06zqpqq",
                "answer_type": "Entity",
                "entity_name": "Frank E. Butler"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (AND (JOIN (R people.person.spouse_s) m.0237np) (JOIN people.marriage.type_of_union m.04ztj)))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (CONS (JOIN (R people.person.spouse_s) m.0237np) people.marriage.type_of_union m.04ztj))"
    },
    {
        "qid": "WebQTest-438",
        "question": "what university did romney graduated from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0271_s",
                    "class": "common.topic",
                    "friendly_name": "romney",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.014mlp",
                    "class": "common.topic",
                    "friendly_name": "Bachelor of Arts",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "education.education.degree"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.014mlp .\n}\n",
        "topic_entity": "m.0271_s",
        "answer": [
            {
                "answer_argument": "m.0l2tk",
                "answer_type": "Entity",
                "entity_name": "Brigham Young University"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (AND (JOIN (R people.person.education) m.0271_s) (JOIN education.education.degree m.014mlp)))",
        "s_expression_processed": "(JOIN (R education.education.institution) (CONS (JOIN (R people.person.education) m.0271_s) education.education.degree m.014mlp))"
    },
    {
        "qid": "WebQTest-454",
        "question": "where did hank marvin come from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01x2fx0",
                    "class": "common.topic",
                    "friendly_name": "hank marvin",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.place_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x2fx0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x2fx0 ns:people.person.place_of_birth ?x .\n}\n",
        "topic_entity": "m.01x2fx0",
        "answer": [
            {
                "answer_argument": "m.0j7ng",
                "answer_type": "Entity",
                "entity_name": "Newcastle upon Tyne"
            }
        ],
        "s_expression": "(JOIN (R people.person.place_of_birth) m.01x2fx0)",
        "s_expression_processed": "(JOIN (R people.person.place_of_birth) m.01x2fx0)"
    },
    {
        "qid": "WebQTest-456",
        "question": "what part did winona ryder play in star trek",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.086sj",
                    "class": "common.topic",
                    "friendly_name": "winona ryder",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.08phg9",
                    "class": "common.topic",
                    "friendly_name": "Star Trek",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.086sj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.086sj ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.08phg9 .\n}\n",
        "topic_entity": "m.086sj",
        "answer": [
            {
                "answer_argument": "m.02thlt",
                "answer_type": "Entity",
                "entity_name": "Amanda Grayson"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.086sj) (JOIN film.performance.film m.08phg9)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.086sj) (JOIN film.performance.film m.08phg9)))"
    },
    {
        "qid": "WebQTest-463",
        "question": "who is princess leia in star wars",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0ddqw",
                    "class": "common.topic",
                    "friendly_name": "princess leia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0dtfn",
                    "class": "common.topic",
                    "friendly_name": "Star Wars",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film_character.portrayed_in_films"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddqw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddqw ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0dtfn .\n}\n",
        "topic_entity": "m.0ddqw",
        "answer": [
            {
                "answer_argument": "m.01tnbn",
                "answer_type": "Entity",
                "entity_name": "Carrie Fisher"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film_character.portrayed_in_films) m.0ddqw) (JOIN film.performance.film m.0dtfn)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film_character.portrayed_in_films) m.0ddqw) (JOIN film.performance.film m.0dtfn)))"
    },
    {
        "qid": "WebQTest-469",
        "question": "what currency is used in panama",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05qx1",
                    "class": "common.topic",
                    "friendly_name": "panama",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qx1 ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.05qx1",
        "answer": [
            {
                "answer_argument": "m.0200cp",
                "answer_type": "Entity",
                "entity_name": "Panamanian balboa"
            },
            {
                "answer_argument": "m.09nqf",
                "answer_type": "Entity",
                "entity_name": "United States Dollar"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.05qx1)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.05qx1)"
    },
    {
        "qid": "WebQTest-473",
        "question": "where does robin williams live 2011",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0dzf_",
                    "class": "common.topic",
                    "friendly_name": "robin williams",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.places_lived"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.place_lived.location"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dzf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dzf_ ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\nFILTER(NOT EXISTS {?y ns:people.place_lived.end_date ?sk0} || \nEXISTS {?y ns:people.place_lived.end_date ?sk1 . \nFILTER(xsd:datetime(?sk1) >= \"2011-01-01\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.place_lived.start_date ?sk2} || \nEXISTS {?y ns:people.place_lived.start_date ?sk3 . \nFILTER(xsd:datetime(?sk3) <= \"2011-12-31\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.0dzf_",
        "answer": [
            {
                "answer_argument": "m.0d6lp",
                "answer_type": "Entity",
                "entity_name": "San Francisco"
            },
            {
                "answer_argument": "m.0vg8x",
                "answer_type": "Entity",
                "entity_name": "Bloomfield Hills"
            }
        ],
        "s_expression": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.0dzf_))",
        "s_expression_processed": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.0dzf_))"
    },
    {
        "qid": "WebQTest-477",
        "question": "which airport to fly into in buenos aires",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01ly5m",
                    "class": "common.topic",
                    "friendly_name": "buenos aires",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.nearby_airports"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ly5m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ly5m ns:location.location.nearby_airports ?x .\n}\n",
        "topic_entity": "m.01ly5m",
        "answer": [
            {
                "answer_argument": "m.01_t37",
                "answer_type": "Entity",
                "entity_name": "Aeroparque Jorge Newbery"
            },
            {
                "answer_argument": "m.01ky3d",
                "answer_type": "Entity",
                "entity_name": "Ministro Pistarini International Airport"
            },
            {
                "answer_argument": "m.04fmtt8",
                "answer_type": "Entity",
                "entity_name": "Don Torcuato Airport"
            }
        ],
        "s_expression": "(JOIN (R location.location.nearby_airports) m.01ly5m)",
        "s_expression_processed": "(JOIN (R location.location.nearby_airports) m.01ly5m)"
    },
    {
        "qid": "WebQTest-479",
        "question": "what team did adrian peterson play for in college",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.095xk6",
                    "class": "common.topic",
                    "friendly_name": "adrian peterson",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.drafted_athlete.drafted"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_league_draft_pick.school"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.095xk6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.095xk6 ns:sports.drafted_athlete.drafted ?y .\n?y ns:sports.sports_league_draft_pick.school ?x .\n}\n",
        "topic_entity": "m.095xk6",
        "answer": [
            {
                "answer_argument": "m.01vs5c",
                "answer_type": "Entity",
                "entity_name": "University of Oklahoma"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_league_draft_pick.school) (JOIN (R sports.drafted_athlete.drafted) m.095xk6))",
        "s_expression_processed": "(JOIN (R sports.sports_league_draft_pick.school) (JOIN (R sports.drafted_athlete.drafted) m.095xk6))"
    },
    {
        "qid": "WebQTest-491",
        "question": "what does ringo sing",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01vrnsk",
                    "class": "common.topic",
                    "friendly_name": "ringo",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.artist.track"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vrnsk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vrnsk ns:music.artist.track ?x .\n}\n",
        "topic_entity": "m.01vrnsk",
        "answer": [
            {
                "answer_argument": "g.11bbmk7fg7",
                "answer_type": "Entity",
                "entity_name": "Call Me"
            },
            {
                "answer_argument": "g.11bbmkdp7f",
                "answer_type": "Entity",
                "entity_name": "No No Song"
            },
            {
                "answer_argument": "g.11bbmlrj06",
                "answer_type": "Entity",
                "entity_name": "Can She Do It Like She Dances"
            },
            {
                "answer_argument": "g.11bbmmlzcn",
                "answer_type": "Entity",
                "entity_name": "All By Myself"
            },
            {
                "answer_argument": "g.11bbmn1n5m",
                "answer_type": "Entity",
                "entity_name": "Drowning In The Sea Of Love"
            },
            {
                "answer_argument": "g.11bbmr_d15",
                "answer_type": "Entity",
                "entity_name": "It's No Secret"
            },
            {
                "answer_argument": "g.11bbmtyx3h",
                "answer_type": "Entity",
                "entity_name": "Occapella"
            },
            {
                "answer_argument": "g.11bbmy7jd6",
                "answer_type": "Entity",
                "entity_name": "Simple Love Song"
            },
            {
                "answer_argument": "g.11bbmycs15",
                "answer_type": "Entity",
                "entity_name": "Snookeroo"
            },
            {
                "answer_argument": "g.1q5y_fbf4",
                "answer_type": "Entity",
                "entity_name": "Six O'Clock (Extended Version)"
            },
            {
                "answer_argument": "g.1q5ywz6vp",
                "answer_type": "Entity",
                "entity_name": "Tango All Night"
            },
            {
                "answer_argument": "g.1q5yxtcfs",
                "answer_type": "Entity",
                "entity_name": "Wings"
            },
            {
                "answer_argument": "g.1q5yxv4yc",
                "answer_type": "Entity",
                "entity_name": "Easy For Me"
            },
            {
                "answer_argument": "g.1q5yzl5k6",
                "answer_type": "Entity",
                "entity_name": "Out On The Streets"
            },
            {
                "answer_argument": "g.1q5z21ld4",
                "answer_type": "Entity",
                "entity_name": "Husbands And Wives"
            },
            {
                "answer_argument": "g.1q5z2fgy9",
                "answer_type": "Entity",
                "entity_name": "Oo-Wee"
            },
            {
                "answer_argument": "g.1q5z7w29k",
                "answer_type": "Entity",
                "entity_name": "Gypsies In Flight"
            },
            {
                "answer_argument": "g.1q5z8j358",
                "answer_type": "Entity",
                "entity_name": "Gave It All Up"
            },
            {
                "answer_argument": "g.1q5z8k909",
                "answer_type": "Entity",
                "entity_name": "Back Off Boogaloo"
            },
            {
                "answer_argument": "g.1q5zb98nd",
                "answer_type": "Entity",
                "entity_name": "Only You (And You Alone)"
            },
            {
                "answer_argument": "g.1q5zm23ky",
                "answer_type": "Entity",
                "entity_name": "Blindman"
            },
            {
                "answer_argument": "m.0_j_hv5",
                "answer_type": "Entity",
                "entity_name": "Spooky Weirdness"
            },
            {
                "answer_argument": "m.0_jzhc7",
                "answer_type": "Entity",
                "entity_name": "Spooky Weirdiness"
            },
            {
                "answer_argument": "m.0_rj_9_",
                "answer_type": "Entity",
                "entity_name": "Scouse the Mouse"
            },
            {
                "answer_argument": "m.0_rv713",
                "answer_type": "Entity",
                "entity_name": "Scouse's Dream"
            },
            {
                "answer_argument": "m.0_wkys2",
                "answer_type": "Entity",
                "entity_name": "Living in a Pet Shop"
            },
            {
                "answer_argument": "m.0_wmdb_",
                "answer_type": "Entity",
                "entity_name": "Boat Ride"
            },
            {
                "answer_argument": "m.0_wmkl3",
                "answer_type": "Entity",
                "entity_name": "I Know a Place"
            },
            {
                "answer_argument": "m.0_wmrfq",
                "answer_type": "Entity",
                "entity_name": "Running Free"
            },
            {
                "answer_argument": "m.0_wnv9f",
                "answer_type": "Entity",
                "entity_name": "S.O.S."
            },
            {
                "answer_argument": "m.0_wtrvv",
                "answer_type": "Entity",
                "entity_name": "Caterwaul"
            },
            {
                "answer_argument": "m.0_wwlk7",
                "answer_type": "Entity",
                "entity_name": "A Mouse Like Me"
            },
            {
                "answer_argument": "m.0101gvx",
                "answer_type": "Entity",
                "entity_name": "Photograph"
            },
            {
                "answer_argument": "m.0101gw3",
                "answer_type": "Entity",
                "entity_name": "Honey Don't"
            },
            {
                "answer_argument": "m.0104lsv",
                "answer_type": "Entity",
                "entity_name": "Photograph"
            },
            {
                "answer_argument": "m.0104lt1",
                "answer_type": "Entity",
                "entity_name": "Honey Don't"
            },
            {
                "answer_argument": "m.0111_nq7",
                "answer_type": "Entity",
                "entity_name": "Don't Pass Me By"
            },
            {
                "answer_argument": "m.0111m6fm",
                "answer_type": "Entity",
                "entity_name": "Choose Love"
            },
            {
                "answer_argument": "m.0111r2pw",
                "answer_type": "Entity",
                "entity_name": "Octopus's Garden"
            },
            {
                "answer_argument": "m.0111t7h2",
                "answer_type": "Entity",
                "entity_name": "Tommy's Holiday Camp"
            },
            {
                "answer_argument": "m.0111x56w",
                "answer_type": "Entity",
                "entity_name": "With a Little Help From My Friends"
            },
            {
                "answer_argument": "m.0111y6jr",
                "answer_type": "Entity",
                "entity_name": "With a Little Help From My Friends (live)"
            },
            {
                "answer_argument": "m.0111yt9p",
                "answer_type": "Entity",
                "entity_name": "Fiddle About"
            },
            {
                "answer_argument": "m.01127hxx",
                "answer_type": "Entity",
                "entity_name": "I'm the Greatest"
            },
            {
                "answer_argument": "m.0112qdyb",
                "answer_type": "Entity",
                "entity_name": "Act Naturally"
            },
            {
                "answer_argument": "m.0112s55j",
                "answer_type": "Entity",
                "entity_name": "With a Little Help From My Friends / It Don't Come Easy"
            },
            {
                "answer_argument": "m.0112sxp5",
                "answer_type": "Entity",
                "entity_name": "Yellow Submarine"
            },
            {
                "answer_argument": "m.0112tvbr",
                "answer_type": "Entity",
                "entity_name": "Never Without You"
            },
            {
                "answer_argument": "m.0123zxd",
                "answer_type": "Entity",
                "entity_name": "Christmas Time Is Here Again"
            },
            {
                "answer_argument": "m.0124sjh",
                "answer_type": "Entity",
                "entity_name": "Your Sixteen"
            },
            {
                "answer_argument": "m.0132_h5w",
                "answer_type": "Entity",
                "entity_name": "Right Side of the Road"
            },
            {
                "answer_argument": "m.0132dgc4",
                "answer_type": "Entity",
                "entity_name": "Not Looking Back"
            },
            {
                "answer_argument": "m.0132lj41",
                "answer_type": "Entity",
                "entity_name": "Touch and Go"
            },
            {
                "answer_argument": "m.0132m7y0",
                "answer_type": "Entity",
                "entity_name": "Postcards From Paradise"
            },
            {
                "answer_argument": "m.0132nmn2",
                "answer_type": "Entity",
                "entity_name": "Rory and the Hurricanes"
            },
            {
                "answer_argument": "m.0132v5tl",
                "answer_type": "Entity",
                "entity_name": "Island in the Sun"
            },
            {
                "answer_argument": "m.013351gq",
                "answer_type": "Entity",
                "entity_name": "Bridges"
            },
            {
                "answer_argument": "m.0133czh3",
                "answer_type": "Entity",
                "entity_name": "Bamboula"
            },
            {
                "answer_argument": "m.0133f11b",
                "answer_type": "Entity",
                "entity_name": "You Bring the Party Down"
            },
            {
                "answer_argument": "m.0133gr58",
                "answer_type": "Entity",
                "entity_name": "Confirmation"
            },
            {
                "answer_argument": "m.0133vkdy",
                "answer_type": "Entity",
                "entity_name": "Let Love Lead"
            },
            {
                "answer_argument": "m.0143s2h",
                "answer_type": "Entity",
                "entity_name": "Private Property"
            },
            {
                "answer_argument": "m.0143s2q",
                "answer_type": "Entity",
                "entity_name": "Wrack My Brain"
            },
            {
                "answer_argument": "m.0143s2y",
                "answer_type": "Entity",
                "entity_name": "Drumming Is My Madness"
            },
            {
                "answer_argument": "m.0143s34",
                "answer_type": "Entity",
                "entity_name": "Attention"
            },
            {
                "answer_argument": "m.0143s3c",
                "answer_type": "Entity",
                "entity_name": "Stop and Take the Time to Smell the Roses"
            },
            {
                "answer_argument": "m.0143s3l",
                "answer_type": "Entity",
                "entity_name": "Dead Giveaway"
            },
            {
                "answer_argument": "m.0143s3t",
                "answer_type": "Entity",
                "entity_name": "You Belong to Me"
            },
            {
                "answer_argument": "m.0143s40",
                "answer_type": "Entity",
                "entity_name": "Sure To Fall"
            },
            {
                "answer_argument": "m.0143s47",
                "answer_type": "Entity",
                "entity_name": "Nice Way"
            },
            {
                "answer_argument": "m.0143s4p",
                "answer_type": "Entity",
                "entity_name": "Wake Up"
            },
            {
                "answer_argument": "m.0143s4x",
                "answer_type": "Entity",
                "entity_name": "Red and Black Blues"
            },
            {
                "answer_argument": "m.0143s53",
                "answer_type": "Entity",
                "entity_name": "Brandy"
            },
            {
                "answer_argument": "m.0143s5b",
                "answer_type": "Entity",
                "entity_name": "Stop and Take the Time to Smell the Roses (Original Vocal Version)"
            },
            {
                "answer_argument": "m.0143s5k",
                "answer_type": "Entity",
                "entity_name": "You Can't Fight Lightning"
            },
            {
                "answer_argument": "m.0143s5s",
                "answer_type": "Entity",
                "entity_name": "Hand Gun Promos"
            },
            {
                "answer_argument": "m.0145fk_",
                "answer_type": "Entity",
                "entity_name": "Sentimental Journey"
            },
            {
                "answer_argument": "m.0145fl6",
                "answer_type": "Entity",
                "entity_name": "Night and Day"
            },
            {
                "answer_argument": "m.0145flf",
                "answer_type": "Entity",
                "entity_name": "Whispering Grass (Don't Tell the Trees)"
            },
            {
                "answer_argument": "m.0145fln",
                "answer_type": "Entity",
                "entity_name": "Bye Bye Blackbird"
            },
            {
                "answer_argument": "m.0145flw",
                "answer_type": "Entity",
                "entity_name": "I'm a Fool to Care"
            },
            {
                "answer_argument": "m.0145fm2",
                "answer_type": "Entity",
                "entity_name": "Stardust"
            },
            {
                "answer_argument": "m.0145fm9",
                "answer_type": "Entity",
                "entity_name": "Blue, Turning Grey Over You"
            },
            {
                "answer_argument": "m.0145fmj",
                "answer_type": "Entity",
                "entity_name": "Love Is a Many Splendoured Thing"
            },
            {
                "answer_argument": "m.0145fmr",
                "answer_type": "Entity",
                "entity_name": "Dream"
            },
            {
                "answer_argument": "m.0145fmz",
                "answer_type": "Entity",
                "entity_name": "You Always Hurt the One You Love"
            },
            {
                "answer_argument": "m.0145fn5",
                "answer_type": "Entity",
                "entity_name": "Have I Told You Lately That I Love You?"
            },
            {
                "answer_argument": "m.0145fnd",
                "answer_type": "Entity",
                "entity_name": "Let the Rest of the World Go By"
            },
            {
                "answer_argument": "m.014kl05",
                "answer_type": "Entity",
                "entity_name": "Fiddle About"
            },
            {
                "answer_argument": "m.014kl2l",
                "answer_type": "Entity",
                "entity_name": "Tommy's Holiday Camp"
            },
            {
                "answer_argument": "m.015qsz6",
                "answer_type": "Entity",
                "entity_name": "Act Naturally"
            },
            {
                "answer_argument": "m.019r3qr",
                "answer_type": "Entity",
                "entity_name": "A Dose of Rock 'N' Roll"
            },
            {
                "answer_argument": "m.019r3qz",
                "answer_type": "Entity",
                "entity_name": "Hey Baby"
            },
            {
                "answer_argument": "m.019r3r5",
                "answer_type": "Entity",
                "entity_name": "Pure Gold"
            },
            {
                "answer_argument": "m.019r3rd",
                "answer_type": "Entity",
                "entity_name": "Cryin'"
            },
            {
                "answer_argument": "m.019r3rm",
                "answer_type": "Entity",
                "entity_name": "You Don't Know Me at All"
            },
            {
                "answer_argument": "m.019r3rv",
                "answer_type": "Entity",
                "entity_name": "Cookin' (In the Kitchen of Love)"
            },
            {
                "answer_argument": "m.019r3s1",
                "answer_type": "Entity",
                "entity_name": "I'll Still Love You"
            },
            {
                "answer_argument": "m.019r3s8",
                "answer_type": "Entity",
                "entity_name": "This Be Called a Song"
            },
            {
                "answer_argument": "m.019r3sh",
                "answer_type": "Entity",
                "entity_name": "Las Brisas"
            },
            {
                "answer_argument": "m.019r3sq",
                "answer_type": "Entity",
                "entity_name": "Lady Gaye"
            },
            {
                "answer_argument": "m.019r3sy",
                "answer_type": "Entity",
                "entity_name": "Spooky Wierdness"
            },
            {
                "answer_argument": "m.01b1rgd",
                "answer_type": "Entity",
                "entity_name": "In My Car"
            },
            {
                "answer_argument": "m.01b1rgm",
                "answer_type": "Entity",
                "entity_name": "Hopeless"
            },
            {
                "answer_argument": "m.01b1rgv",
                "answer_type": "Entity",
                "entity_name": "Alibi"
            },
            {
                "answer_argument": "m.01b1rh1",
                "answer_type": "Entity",
                "entity_name": "Be My Baby"
            },
            {
                "answer_argument": "m.01b1rh8",
                "answer_type": "Entity",
                "entity_name": "She's About a Mover"
            },
            {
                "answer_argument": "m.01b1rhh",
                "answer_type": "Entity",
                "entity_name": "I Keep Forgettin'"
            },
            {
                "answer_argument": "m.01b1rhq",
                "answer_type": "Entity",
                "entity_name": "Picture Show Life"
            },
            {
                "answer_argument": "m.01b1rhy",
                "answer_type": "Entity",
                "entity_name": "As Far as We Can Go"
            },
            {
                "answer_argument": "m.01b1rj4",
                "answer_type": "Entity",
                "entity_name": "Everybody's in a Hurry but Me"
            },
            {
                "answer_argument": "m.01b1rjc",
                "answer_type": "Entity",
                "entity_name": "Going Down"
            },
            {
                "answer_argument": "m.01b1rjl",
                "answer_type": "Entity",
                "entity_name": "As Far as We Can Go (original version)"
            },
            {
                "answer_argument": "m.01dw88f",
                "answer_type": "Entity",
                "entity_name": "Sweet Little Sixteen"
            },
            {
                "answer_argument": "m.01dxr_2",
                "answer_type": "Entity",
                "entity_name": "It's No Secret"
            },
            {
                "answer_argument": "m.01dxr_9",
                "answer_type": "Entity",
                "entity_name": "Gypsies in Flight"
            },
            {
                "answer_argument": "m.01dxr_j",
                "answer_type": "Entity",
                "entity_name": "Simple Love Song"
            },
            {
                "answer_argument": "m.01dxrcv",
                "answer_type": "Entity",
                "entity_name": "Love Don't Last Long"
            },
            {
                "answer_argument": "m.01dxrd1",
                "answer_type": "Entity",
                "entity_name": "Fastest Growing Heartache in the West"
            },
            {
                "answer_argument": "m.01dxrd8",
                "answer_type": "Entity",
                "entity_name": "Without Her"
            },
            {
                "answer_argument": "m.01dxrdh",
                "answer_type": "Entity",
                "entity_name": "Woman of the Night"
            },
            {
                "answer_argument": "m.01dxrdq",
                "answer_type": "Entity",
                "entity_name": "I'd Be Talking All the Time"
            },
            {
                "answer_argument": "m.01dxrdy",
                "answer_type": "Entity",
                "entity_name": "$15 Draw"
            },
            {
                "answer_argument": "m.01dxrf4",
                "answer_type": "Entity",
                "entity_name": "Wine, Women, and Loud Happy Songs"
            },
            {
                "answer_argument": "m.01dxrfc",
                "answer_type": "Entity",
                "entity_name": "I Wouldn't Have You Any Other Way"
            },
            {
                "answer_argument": "m.01dxrfl",
                "answer_type": "Entity",
                "entity_name": "Loser's Lounge"
            },
            {
                "answer_argument": "m.01dxrft",
                "answer_type": "Entity",
                "entity_name": "Waiting"
            },
            {
                "answer_argument": "m.01dxrg0",
                "answer_type": "Entity",
                "entity_name": "Silent Homecoming"
            },
            {
                "answer_argument": "m.01dxrg7",
                "answer_type": "Entity",
                "entity_name": "Coochy Coochy"
            },
            {
                "answer_argument": "m.01dxrgg",
                "answer_type": "Entity",
                "entity_name": "Nashville Jam"
            },
            {
                "answer_argument": "m.01dxry_",
                "answer_type": "Entity",
                "entity_name": "Wings"
            },
            {
                "answer_argument": "m.01dxryk",
                "answer_type": "Entity",
                "entity_name": "Drowning in the Sea of Love"
            },
            {
                "answer_argument": "m.01dxrys",
                "answer_type": "Entity",
                "entity_name": "Tango All Night"
            },
            {
                "answer_argument": "m.01dxrz6",
                "answer_type": "Entity",
                "entity_name": "Gave It All Up"
            },
            {
                "answer_argument": "m.01dxrzf",
                "answer_type": "Entity",
                "entity_name": "Out on the Streets"
            },
            {
                "answer_argument": "m.01dxrzn",
                "answer_type": "Entity",
                "entity_name": "Can She Do It Like She Dances"
            },
            {
                "answer_argument": "m.01dxrzw",
                "answer_type": "Entity",
                "entity_name": "Sneaking Sally Through the Alley"
            },
            {
                "answer_argument": "m.01dybr_",
                "answer_type": "Entity",
                "entity_name": "Don't Go Where the Road Don't Go"
            },
            {
                "answer_argument": "m.01dybrk",
                "answer_type": "Entity",
                "entity_name": "The Really 'Serious' Introduction"
            },
            {
                "answer_argument": "m.01dybrs",
                "answer_type": "Entity",
                "entity_name": "I'm the Greatest"
            },
            {
                "answer_argument": "m.01dybs6",
                "answer_type": "Entity",
                "entity_name": "Yellow Submarine"
            },
            {
                "answer_argument": "m.01dybt2",
                "answer_type": "Entity",
                "entity_name": "Weight of the World"
            },
            {
                "answer_argument": "m.01dybvd",
                "answer_type": "Entity",
                "entity_name": "Boys"
            },
            {
                "answer_argument": "m.01dybvm",
                "answer_type": "Entity",
                "entity_name": "With a Little Help From My Friends"
            },
            {
                "answer_argument": "m.01f02qw",
                "answer_type": "Entity",
                "entity_name": "It Don't Come Easy"
            },
            {
                "answer_argument": "m.024rzth",
                "answer_type": "Entity",
                "entity_name": "Weight of the World"
            },
            {
                "answer_argument": "m.024rzts",
                "answer_type": "Entity",
                "entity_name": "Don't Know a Thing About Love"
            },
            {
                "answer_argument": "m.024rzv1",
                "answer_type": "Entity",
                "entity_name": "Don't Go Where the Road Don't Go"
            },
            {
                "answer_argument": "m.024rzvb",
                "answer_type": "Entity",
                "entity_name": "Golden Blunders"
            },
            {
                "answer_argument": "m.024rzvm",
                "answer_type": "Entity",
                "entity_name": "All in the Name of Love"
            },
            {
                "answer_argument": "m.024rzvx",
                "answer_type": "Entity",
                "entity_name": "After All These Years"
            },
            {
                "answer_argument": "m.024rzw5",
                "answer_type": "Entity",
                "entity_name": "I Don't Believe You"
            },
            {
                "answer_argument": "m.024rzwg",
                "answer_type": "Entity",
                "entity_name": "Runaways"
            },
            {
                "answer_argument": "m.024rzwr",
                "answer_type": "Entity",
                "entity_name": "In a Heartbeat"
            },
            {
                "answer_argument": "m.024rzx0",
                "answer_type": "Entity",
                "entity_name": "What Goes Around"
            },
            {
                "answer_argument": "m.0d_500q",
                "answer_type": "Entity",
                "entity_name": "Only You (And You Alone)"
            },
            {
                "answer_argument": "m.0d_6zdd",
                "answer_type": "Entity",
                "entity_name": "Monkey See, Monkey Do"
            },
            {
                "answer_argument": "m.0d_zwcz",
                "answer_type": "Entity",
                "entity_name": "OO-WEE"
            },
            {
                "answer_argument": "m.0dm8vqn",
                "answer_type": "Entity",
                "entity_name": "I Wouldn't Have You Any Other Way"
            },
            {
                "answer_argument": "m.0dmbj21",
                "answer_type": "Entity",
                "entity_name": "Heart on My Sleeve"
            },
            {
                "answer_argument": "m.0dmbxws",
                "answer_type": "Entity",
                "entity_name": "Yellow Submarine"
            },
            {
                "answer_argument": "m.0dmms5q",
                "answer_type": "Entity",
                "entity_name": "Hey Baby"
            },
            {
                "answer_argument": "m.0dmms67",
                "answer_type": "Entity",
                "entity_name": "No No Song"
            },
            {
                "answer_argument": "m.0dmms6h",
                "answer_type": "Entity",
                "entity_name": "Fading In Fading Out"
            },
            {
                "answer_argument": "m.0dmms6m",
                "answer_type": "Entity",
                "entity_name": "Act Naturally"
            },
            {
                "answer_argument": "m.0dmms6t",
                "answer_type": "Entity",
                "entity_name": "Only You (And You Alone)"
            },
            {
                "answer_argument": "m.0dmms78",
                "answer_type": "Entity",
                "entity_name": "(It's All Down to) Good Night Vienna"
            },
            {
                "answer_argument": "m.0dmms87",
                "answer_type": "Entity",
                "entity_name": "Weight of the World"
            },
            {
                "answer_argument": "m.0dmrx1g",
                "answer_type": "Entity",
                "entity_name": "It Don't Come Easy"
            },
            {
                "answer_argument": "m.0dnjv9p",
                "answer_type": "Entity",
                "entity_name": "Without Her"
            },
            {
                "answer_argument": "m.0dnkslx",
                "answer_type": "Entity",
                "entity_name": "Photograph"
            },
            {
                "answer_argument": "m.0dnlvzl",
                "answer_type": "Entity",
                "entity_name": "No No Song"
            },
            {
                "answer_argument": "m.0dpfj6g",
                "answer_type": "Entity",
                "entity_name": "Loser's Lounge"
            },
            {
                "answer_argument": "m.0dpfv2g",
                "answer_type": "Entity",
                "entity_name": "With a Little Help From My Friends"
            },
            {
                "answer_argument": "m.0dphv93",
                "answer_type": "Entity",
                "entity_name": "Sweet Little Sixteen"
            },
            {
                "answer_argument": "m.0dpzghq",
                "answer_type": "Entity",
                "entity_name": "Act Naturally"
            },
            {
                "answer_argument": "m.0dq84rf",
                "answer_type": "Entity",
                "entity_name": "Wine, Women and Loud Happy Songs"
            },
            {
                "answer_argument": "m.0dqb_sl",
                "answer_type": "Entity",
                "entity_name": "Oh My Lord"
            },
            {
                "answer_argument": "m.0dqrt_f",
                "answer_type": "Entity",
                "entity_name": "$15 Draw"
            },
            {
                "answer_argument": "m.0dr511n",
                "answer_type": "Entity",
                "entity_name": "Bad Boy"
            },
            {
                "answer_argument": "m.0ds3p0_",
                "answer_type": "Entity",
                "entity_name": "Beaucoups of Blues"
            },
            {
                "answer_argument": "m.0dsxjx1",
                "answer_type": "Entity",
                "entity_name": "All the Young Dudes"
            },
            {
                "answer_argument": "m.0dt52vt",
                "answer_type": "Entity",
                "entity_name": "Choose Love"
            },
            {
                "answer_argument": "m.0dtyfsr",
                "answer_type": "Entity",
                "entity_name": "Old Time Relovin'"
            },
            {
                "answer_argument": "m.0dvcb5t",
                "answer_type": "Entity",
                "entity_name": "The No No Song"
            },
            {
                "answer_argument": "m.0dvdcmd",
                "answer_type": "Entity",
                "entity_name": "Goodnight Vienna"
            },
            {
                "answer_argument": "m.0dw1lvy",
                "answer_type": "Entity",
                "entity_name": "Free Drinks"
            },
            {
                "answer_argument": "m.0dw1lw_",
                "answer_type": "Entity",
                "entity_name": "Hard to Be True"
            },
            {
                "answer_argument": "m.0dw1lw0",
                "answer_type": "Entity",
                "entity_name": "Fading in and Fading Out"
            },
            {
                "answer_argument": "m.0dw1lw5",
                "answer_type": "Entity",
                "entity_name": "Me and You"
            },
            {
                "answer_argument": "m.0dw1lwc",
                "answer_type": "Entity",
                "entity_name": "Don't Hang Up"
            },
            {
                "answer_argument": "m.0dw1lwg",
                "answer_type": "Entity",
                "entity_name": "The Turnaround"
            },
            {
                "answer_argument": "m.0dw1lwm",
                "answer_type": "Entity",
                "entity_name": "Some People"
            },
            {
                "answer_argument": "m.0dw1lwq",
                "answer_type": "Entity",
                "entity_name": "Wrong All the Time"
            },
            {
                "answer_argument": "m.0dw1lwt",
                "answer_type": "Entity",
                "entity_name": "Satisfied"
            },
            {
                "answer_argument": "m.0dw1lwx",
                "answer_type": "Entity",
                "entity_name": "Give Me Back the Beat"
            },
            {
                "answer_argument": "m.0dw45_5",
                "answer_type": "Entity",
                "entity_name": "You and Me (Babe)"
            },
            {
                "answer_argument": "m.0dwc4tj",
                "answer_type": "Entity",
                "entity_name": "Occapella"
            },
            {
                "answer_argument": "m.0dwpzsh",
                "answer_type": "Entity",
                "entity_name": "Fastest Growing Heartache In The West"
            },
            {
                "answer_argument": "m.0dwq3vq",
                "answer_type": "Entity",
                "entity_name": "Snookeroo"
            },
            {
                "answer_argument": "m.0dwzfv5",
                "answer_type": "Entity",
                "entity_name": "I Wanna Be Your Man"
            },
            {
                "answer_argument": "m.0dx2tpm",
                "answer_type": "Entity",
                "entity_name": "It Don't Come Easy"
            },
            {
                "answer_argument": "m.0dxk7wy",
                "answer_type": "Entity",
                "entity_name": "R U Ready"
            },
            {
                "answer_argument": "m.0dxsw0g",
                "answer_type": "Entity",
                "entity_name": "Weight of the World"
            },
            {
                "answer_argument": "m.0dybyf0",
                "answer_type": "Entity",
                "entity_name": "You're Sixteen"
            },
            {
                "answer_argument": "m.0dyc13q",
                "answer_type": "Entity",
                "entity_name": "Now That She's Gone Away"
            },
            {
                "answer_argument": "m.0dycc14",
                "answer_type": "Entity",
                "entity_name": "Fading in Fading Out"
            },
            {
                "answer_argument": "m.0dyjx0j",
                "answer_type": "Entity",
                "entity_name": "The No No Song"
            },
            {
                "answer_argument": "m.0dz3xj7",
                "answer_type": "Entity",
                "entity_name": "Love Is"
            },
            {
                "answer_argument": "m.0dz4rxj",
                "answer_type": "Entity",
                "entity_name": "Six O'Clock"
            },
            {
                "answer_argument": "m.0dzkk34",
                "answer_type": "Entity",
                "entity_name": "Lipstick Traces"
            },
            {
                "answer_argument": "m.0dzqk44",
                "answer_type": "Entity",
                "entity_name": "You’re Sixteen"
            },
            {
                "answer_argument": "m.0f_bjxj",
                "answer_type": "Entity",
                "entity_name": "Photograph"
            },
            {
                "answer_argument": "m.0f_bjxs",
                "answer_type": "Entity",
                "entity_name": "Yellow Submarine"
            },
            {
                "answer_argument": "m.0f_bjy1",
                "answer_type": "Entity",
                "entity_name": "Love Bizarre"
            },
            {
                "answer_argument": "m.0f0r9yh",
                "answer_type": "Entity",
                "entity_name": "You're Sixteen"
            },
            {
                "answer_argument": "m.0f1hnck",
                "answer_type": "Entity",
                "entity_name": "Tonight"
            },
            {
                "answer_argument": "m.0f1mkry",
                "answer_type": "Entity",
                "entity_name": "You're Sixteen (You're Beautiful and You're Mine)"
            },
            {
                "answer_argument": "m.0f1tc8v",
                "answer_type": "Entity",
                "entity_name": "Early 1970"
            },
            {
                "answer_argument": "m.0f1zbgb",
                "answer_type": "Entity",
                "entity_name": "Logical Song"
            },
            {
                "answer_argument": "m.0f2_whq",
                "answer_type": "Entity",
                "entity_name": "Oo-Wee"
            },
            {
                "answer_argument": "m.0f2mf25",
                "answer_type": "Entity",
                "entity_name": "I Wanna Be Your Man"
            },
            {
                "answer_argument": "m.0f2ytss",
                "answer_type": "Entity",
                "entity_name": "Snookeroo"
            },
            {
                "answer_argument": "m.0f2zl2_",
                "answer_type": "Entity",
                "entity_name": "No One to Blame"
            },
            {
                "answer_argument": "m.0f31gw8",
                "answer_type": "Entity",
                "entity_name": "If It's Love That You Want"
            },
            {
                "answer_argument": "m.0f3dzjd",
                "answer_type": "Entity",
                "entity_name": "Give a Little Bit"
            },
            {
                "answer_argument": "m.0f3nyn7",
                "answer_type": "Entity",
                "entity_name": "Silent Homecoming"
            },
            {
                "answer_argument": "m.0f3qsnv",
                "answer_type": "Entity",
                "entity_name": "Back Off Boogaloo"
            },
            {
                "answer_argument": "m.0f3trq9",
                "answer_type": "Entity",
                "entity_name": "Husbands and Wives"
            },
            {
                "answer_argument": "m.0f3vtvx",
                "answer_type": "Entity",
                "entity_name": "Love Don't Last Long"
            },
            {
                "answer_argument": "m.0f3vtwk",
                "answer_type": "Entity",
                "entity_name": "I'd be Talking all the Time"
            },
            {
                "answer_argument": "m.0f3vtyk",
                "answer_type": "Entity",
                "entity_name": "Waiting"
            },
            {
                "answer_argument": "m.0f3vv1z",
                "answer_type": "Entity",
                "entity_name": "Woman of the Night"
            },
            {
                "answer_argument": "m.0f4g4cg",
                "answer_type": "Entity",
                "entity_name": "Hard Times"
            },
            {
                "answer_argument": "m.0f4p_8f",
                "answer_type": "Entity",
                "entity_name": "Tuff Love"
            },
            {
                "answer_argument": "m.0f4p_99",
                "answer_type": "Entity",
                "entity_name": "For Love"
            },
            {
                "answer_argument": "m.0f4p_bk",
                "answer_type": "Entity",
                "entity_name": "Liverpool 8"
            },
            {
                "answer_argument": "m.0f4p_cj",
                "answer_type": "Entity",
                "entity_name": "Gone Are the Days"
            },
            {
                "answer_argument": "m.0f4p_dg",
                "answer_type": "Entity",
                "entity_name": "Think About You"
            },
            {
                "answer_argument": "m.0f4p_f9",
                "answer_type": "Entity",
                "entity_name": "Harry's Song"
            },
            {
                "answer_argument": "m.0f4p_g8",
                "answer_type": "Entity",
                "entity_name": "Give It a Try"
            },
            {
                "answer_argument": "m.0f4p_h0",
                "answer_type": "Entity",
                "entity_name": "Pasodobles"
            },
            {
                "answer_argument": "m.0f530yp",
                "answer_type": "Entity",
                "entity_name": "You Never Know"
            },
            {
                "answer_argument": "m.0f55xsf",
                "answer_type": "Entity",
                "entity_name": "A Man Like Me"
            },
            {
                "answer_argument": "m.0f6h0p5",
                "answer_type": "Entity",
                "entity_name": "Down and Out"
            },
            {
                "answer_argument": "m.0f6yb5t",
                "answer_type": "Entity",
                "entity_name": "All by Myself"
            },
            {
                "answer_argument": "m.0f78vlm",
                "answer_type": "Entity",
                "entity_name": "The No-No Song"
            },
            {
                "answer_argument": "m.0f7p0gh",
                "answer_type": "Entity",
                "entity_name": "Devil Woman"
            },
            {
                "answer_argument": "m.0f7p18d",
                "answer_type": "Entity",
                "entity_name": "Goodnight Vienna (reprise)"
            },
            {
                "answer_argument": "m.0f8clr_",
                "answer_type": "Entity",
                "entity_name": "Have You Seen My Baby (Hold On)"
            },
            {
                "answer_argument": "m.0f8s72l",
                "answer_type": "Entity",
                "entity_name": "Where Did Our Love Go"
            },
            {
                "answer_argument": "m.0f9s0t_",
                "answer_type": "Entity",
                "entity_name": "Have You Seen My Baby"
            },
            {
                "answer_argument": "m.0fb52lk",
                "answer_type": "Entity",
                "entity_name": "Sunshine Life for Me (Sail Away Raymond)"
            },
            {
                "answer_argument": "m.0fcb2ym",
                "answer_type": "Entity",
                "entity_name": "Call Me"
            },
            {
                "answer_argument": "m.0fcb31j",
                "answer_type": "Entity",
                "entity_name": "Easy for Me"
            },
            {
                "answer_argument": "m.0fd6x5l",
                "answer_type": "Entity",
                "entity_name": "Down and Out"
            },
            {
                "answer_argument": "m.0fd6x6f",
                "answer_type": "Entity",
                "entity_name": "Step Lightly"
            },
            {
                "answer_argument": "m.0fd6x9d",
                "answer_type": "Entity",
                "entity_name": "Photograph"
            },
            {
                "answer_argument": "m.0fdscg7",
                "answer_type": "Entity",
                "entity_name": "Photograph"
            },
            {
                "answer_argument": "m.0ff6l2z",
                "answer_type": "Entity",
                "entity_name": "Who Needs a Heart"
            },
            {
                "answer_argument": "m.0fhszg7",
                "answer_type": "Entity",
                "entity_name": "(It's All Down to) Good Night Vienna (single version)"
            },
            {
                "answer_argument": "m.0flq2td",
                "answer_type": "Entity",
                "entity_name": "Glamorous Life"
            },
            {
                "answer_argument": "m.0flq2v3",
                "answer_type": "Entity",
                "entity_name": "Don't Go Where the Road Don't Go"
            },
            {
                "answer_argument": "m.0fr0jxs",
                "answer_type": "Entity",
                "entity_name": "Sure to Fall (In Love With You)"
            },
            {
                "answer_argument": "m.0fr2c4g",
                "answer_type": "Entity",
                "entity_name": "With a Little Help From My Friends"
            },
            {
                "answer_argument": "m.0fr7cmn",
                "answer_type": "Entity",
                "entity_name": "Glamorous Life"
            },
            {
                "answer_argument": "m.0fr7n5k",
                "answer_type": "Entity",
                "entity_name": "Everlasting Love"
            },
            {
                "answer_argument": "m.0fs8v2c",
                "answer_type": "Entity",
                "entity_name": "Honey Don't"
            },
            {
                "answer_argument": "m.0fs8v2t",
                "answer_type": "Entity",
                "entity_name": "Matchbox"
            },
            {
                "answer_argument": "m.0ft_dv0",
                "answer_type": "Entity",
                "entity_name": "Act Naturally"
            },
            {
                "answer_argument": "m.0ft3r8f",
                "answer_type": "Entity",
                "entity_name": "Karn Evil 9"
            },
            {
                "answer_argument": "m.0ft6j0m",
                "answer_type": "Entity",
                "entity_name": "Cookin' (In the Kitchen of Love)"
            },
            {
                "answer_argument": "m.0ftf64m",
                "answer_type": "Entity",
                "entity_name": "Mystery of the Night"
            },
            {
                "answer_argument": "m.0ftgb87",
                "answer_type": "Entity",
                "entity_name": "It Don't Come Easy"
            },
            {
                "answer_argument": "m.0ftpz01",
                "answer_type": "Entity",
                "entity_name": "I Still Love Rock 'n' Roll"
            },
            {
                "answer_argument": "m.0ftr4m5",
                "answer_type": "Entity",
                "entity_name": "The Other Side of Liverpool"
            },
            {
                "answer_argument": "m.0fvtn8c",
                "answer_type": "Entity",
                "entity_name": "Everyone Wins"
            },
            {
                "answer_argument": "m.0fw4n1t",
                "answer_type": "Entity",
                "entity_name": "Drumming Is My Madness"
            },
            {
                "answer_argument": "m.0fwpd39",
                "answer_type": "Entity",
                "entity_name": "Fill in the Blanks"
            },
            {
                "answer_argument": "m.0fxm25t",
                "answer_type": "Entity",
                "entity_name": "After All These Years"
            },
            {
                "answer_argument": "m.0fxy809",
                "answer_type": "Entity",
                "entity_name": "Weight of the World"
            },
            {
                "answer_argument": "m.0fyzy8b",
                "answer_type": "Entity",
                "entity_name": "Iko Iko"
            },
            {
                "answer_argument": "m.0fzfc5d",
                "answer_type": "Entity",
                "entity_name": "Don't Be Cruel"
            },
            {
                "answer_argument": "m.0g0h5b5",
                "answer_type": "Entity",
                "entity_name": "Peace Dream"
            },
            {
                "answer_argument": "m.0g0h62d",
                "answer_type": "Entity",
                "entity_name": "Who's Your Daddy"
            },
            {
                "answer_argument": "m.0g0whrg",
                "answer_type": "Entity",
                "entity_name": "A Dose of Rock 'n' Roll"
            },
            {
                "answer_argument": "m.0g14twl",
                "answer_type": "Entity",
                "entity_name": "Hopeless"
            },
            {
                "answer_argument": "m.0g1hptg",
                "answer_type": "Entity",
                "entity_name": "The Little Drummer Boy"
            },
            {
                "answer_argument": "m.0g2_zgc",
                "answer_type": "Entity",
                "entity_name": "Time"
            },
            {
                "answer_argument": "m.0g27sms",
                "answer_type": "Entity",
                "entity_name": "Can't Do It Wrong"
            },
            {
                "answer_argument": "m.0g293rw",
                "answer_type": "Entity",
                "entity_name": "In My Car"
            },
            {
                "answer_argument": "m.0g2hjh7",
                "answer_type": "Entity",
                "entity_name": "Heart on My Sleeve"
            },
            {
                "answer_argument": "m.0g30rws",
                "answer_type": "Entity",
                "entity_name": "Y Not"
            },
            {
                "answer_argument": "m.0g30rx8",
                "answer_type": "Entity",
                "entity_name": "Walk With You"
            },
            {
                "answer_argument": "m.0g5wlrn",
                "answer_type": "Entity",
                "entity_name": "Photograph"
            },
            {
                "answer_argument": "m.0g6l9x0",
                "answer_type": "Entity",
                "entity_name": "Oh My My"
            },
            {
                "answer_argument": "m.0g6ypcp",
                "answer_type": "Entity",
                "entity_name": "You're Sixteen (You're Beautiful and You're Mine)"
            },
            {
                "answer_argument": "m.0g71j6b",
                "answer_type": "Entity",
                "entity_name": "Sunshine Life for Me (Sail Away Raymond)"
            },
            {
                "answer_argument": "m.0g71j6j",
                "answer_type": "Entity",
                "entity_name": "Step Lightly"
            },
            {
                "answer_argument": "m.0g71j6m",
                "answer_type": "Entity",
                "entity_name": "Six O'Clock"
            },
            {
                "answer_argument": "m.0g71j70",
                "answer_type": "Entity",
                "entity_name": "Have You Seen My Baby (Hold On)"
            },
            {
                "answer_argument": "m.0g71j7g",
                "answer_type": "Entity",
                "entity_name": "You and Me (Babe)"
            },
            {
                "answer_argument": "m.0g71j7n",
                "answer_type": "Entity",
                "entity_name": "Devil Woman"
            },
            {
                "answer_argument": "m.0g71j7r",
                "answer_type": "Entity",
                "entity_name": "I'm the Greatest"
            },
            {
                "answer_argument": "m.0g8tc_r",
                "answer_type": "Entity",
                "entity_name": "Yellow Submarine"
            },
            {
                "answer_argument": "m.0g8vxb3",
                "answer_type": "Entity",
                "entity_name": "Boys"
            },
            {
                "answer_argument": "m.0g92jgn",
                "answer_type": "Entity",
                "entity_name": "I Wanna Be Your Man"
            },
            {
                "answer_argument": "m.0mf7_r",
                "answer_type": "Entity",
                "entity_name": "Act Naturally"
            },
            {
                "answer_argument": "m.0ml539",
                "answer_type": "Entity",
                "entity_name": "Honey Don't"
            },
            {
                "answer_argument": "m.0myfsf",
                "answer_type": "Entity",
                "entity_name": "With a Little Help From My Friends"
            },
            {
                "answer_argument": "m.0myfsn",
                "answer_type": "Entity",
                "entity_name": "It Don't Come Easy"
            },
            {
                "answer_argument": "m.0myfsw",
                "answer_type": "Entity",
                "entity_name": "I Was Walkin'"
            },
            {
                "answer_argument": "m.0myft2",
                "answer_type": "Entity",
                "entity_name": "Don't Pass Me By"
            },
            {
                "answer_argument": "m.0myft9",
                "answer_type": "Entity",
                "entity_name": "Back Off Boogaloo"
            },
            {
                "answer_argument": "m.0myftj",
                "answer_type": "Entity",
                "entity_name": "King of Broken Hearts"
            },
            {
                "answer_argument": "m.0myftr",
                "answer_type": "Entity",
                "entity_name": "Octopus's Garden"
            },
            {
                "answer_argument": "m.0myftz",
                "answer_type": "Entity",
                "entity_name": "Photograph"
            },
            {
                "answer_argument": "m.0myfv5",
                "answer_type": "Entity",
                "entity_name": "La De Da"
            },
            {
                "answer_argument": "m.0myfvd",
                "answer_type": "Entity",
                "entity_name": "What in the... World"
            },
            {
                "answer_argument": "m.0myfvm",
                "answer_type": "Entity",
                "entity_name": "Love Me Do"
            },
            {
                "answer_argument": "m.0myfvv",
                "answer_type": "Entity",
                "entity_name": "With a Little Help From My Friends (reprise)"
            },
            {
                "answer_argument": "m.0myfw1",
                "answer_type": "Entity",
                "entity_name": "I've Got Blisters..."
            },
            {
                "answer_argument": "m.0myfw8",
                "answer_type": "Entity",
                "entity_name": "The End"
            },
            {
                "answer_argument": "m.0nfjqx",
                "answer_type": "Entity",
                "entity_name": "It Don't Come Easy"
            },
            {
                "answer_argument": "m.0nl0h9h",
                "answer_type": "Entity",
                "entity_name": "In Liverpool"
            },
            {
                "answer_argument": "m.0nlbg81",
                "answer_type": "Entity",
                "entity_name": "Take the Long Way Home"
            },
            {
                "answer_argument": "m.0nllmtb",
                "answer_type": "Entity",
                "entity_name": "Samba"
            },
            {
                "answer_argument": "m.0nm22r3",
                "answer_type": "Entity",
                "entity_name": "Anthem"
            },
            {
                "answer_argument": "m.0nm6dty",
                "answer_type": "Entity",
                "entity_name": "Lucky Man"
            },
            {
                "answer_argument": "m.0nmr0ss",
                "answer_type": "Entity",
                "entity_name": "With a Little Help From My Friends (live)"
            },
            {
                "answer_argument": "m.0nn1bg9",
                "answer_type": "Entity",
                "entity_name": "Think It Over"
            },
            {
                "answer_argument": "m.0nn2vr8",
                "answer_type": "Entity",
                "entity_name": "Rock Island Line"
            },
            {
                "answer_argument": "m.0nn6jry",
                "answer_type": "Entity",
                "entity_name": "Slow Down"
            },
            {
                "answer_argument": "m.0nnhrkx",
                "answer_type": "Entity",
                "entity_name": "Wonderful"
            },
            {
                "answer_argument": "m.0nnpxjz",
                "answer_type": "Entity",
                "entity_name": "Only You"
            },
            {
                "answer_argument": "m.0pk80z",
                "answer_type": "Entity",
                "entity_name": "Have You Seen My Baby (Hold On)"
            },
            {
                "answer_argument": "m.0pk81d",
                "answer_type": "Entity",
                "entity_name": "Sunshine Life for Me (Sail Away Raymond)"
            },
            {
                "answer_argument": "m.0pk821",
                "answer_type": "Entity",
                "entity_name": "Step Lightly"
            },
            {
                "answer_argument": "m.0pk828",
                "answer_type": "Entity",
                "entity_name": "Six O’Clock"
            },
            {
                "answer_argument": "m.0pk82h",
                "answer_type": "Entity",
                "entity_name": "Devil Woman"
            },
            {
                "answer_argument": "m.0pk82q",
                "answer_type": "Entity",
                "entity_name": "You and Me (Babe)"
            },
            {
                "answer_argument": "m.0pk83c",
                "answer_type": "Entity",
                "entity_name": "Down and Out"
            },
            {
                "answer_argument": "m.0pmz88",
                "answer_type": "Entity",
                "entity_name": "You're Sixteen (You're Beautiful and You're Mine)"
            },
            {
                "answer_argument": "m.0pmz8h",
                "answer_type": "Entity",
                "entity_name": "No No Song/Skokiaan"
            },
            {
                "answer_argument": "m.0pmz8q",
                "answer_type": "Entity",
                "entity_name": "It Don't Come Easy"
            },
            {
                "answer_argument": "m.0pmz8y",
                "answer_type": "Entity",
                "entity_name": "Photograph"
            },
            {
                "answer_argument": "m.0pmz9l",
                "answer_type": "Entity",
                "entity_name": "Beaucoups of Blues"
            },
            {
                "answer_argument": "m.0pmz9t",
                "answer_type": "Entity",
                "entity_name": "Oh My My"
            },
            {
                "answer_argument": "m.0pmzb0",
                "answer_type": "Entity",
                "entity_name": "Early 1970"
            },
            {
                "answer_argument": "m.0pmzb7",
                "answer_type": "Entity",
                "entity_name": "I'm the Greatest"
            },
            {
                "answer_argument": "m.0qczcj",
                "answer_type": "Entity",
                "entity_name": "Eye to Eye"
            },
            {
                "answer_argument": "m.0qczcr",
                "answer_type": "Entity",
                "entity_name": "Missouri Loves Company"
            },
            {
                "answer_argument": "m.0qczcz",
                "answer_type": "Entity",
                "entity_name": "Instant Amnesia"
            },
            {
                "answer_argument": "m.0qczd5",
                "answer_type": "Entity",
                "entity_name": "Memphis in Your Mind"
            },
            {
                "answer_argument": "m.0qczdd",
                "answer_type": "Entity",
                "entity_name": "Never Without You"
            },
            {
                "answer_argument": "m.0qczdm",
                "answer_type": "Entity",
                "entity_name": "Imagine Me There"
            },
            {
                "answer_argument": "m.0qczdv",
                "answer_type": "Entity",
                "entity_name": "I Think Therefore I Rock 'n Roll"
            },
            {
                "answer_argument": "m.0qczf1",
                "answer_type": "Entity",
                "entity_name": "Trippin' on My Own Tears"
            },
            {
                "answer_argument": "m.0qczf8",
                "answer_type": "Entity",
                "entity_name": "Write One for Me"
            },
            {
                "answer_argument": "m.0qczfh",
                "answer_type": "Entity",
                "entity_name": "What Love Wants to Be"
            },
            {
                "answer_argument": "m.0qczfq",
                "answer_type": "Entity",
                "entity_name": "Love First, Ask Questions Later"
            },
            {
                "answer_argument": "m.0qczfy",
                "answer_type": "Entity",
                "entity_name": "Elizabeth Reigns"
            },
            {
                "answer_argument": "m.0qczg4",
                "answer_type": "Entity",
                "entity_name": "English Garden / I Really Love Her"
            },
            {
                "answer_argument": "m.0qn5cv",
                "answer_type": "Entity",
                "entity_name": "Honey Don't"
            },
            {
                "answer_argument": "m.0qyg3_",
                "answer_type": "Entity",
                "entity_name": "Never Without You"
            },
            {
                "answer_argument": "m.0r1y_4",
                "answer_type": "Entity",
                "entity_name": "Call Me"
            },
            {
                "answer_argument": "m.0r1y_c",
                "answer_type": "Entity",
                "entity_name": "No No Song"
            },
            {
                "answer_argument": "m.0r1y_l",
                "answer_type": "Entity",
                "entity_name": "Only You (and You Alone)"
            },
            {
                "answer_argument": "m.0r1y_t",
                "answer_type": "Entity",
                "entity_name": "Easy for Me"
            },
            {
                "answer_argument": "m.0r1yyv",
                "answer_type": "Entity",
                "entity_name": "Goodnight Vienna"
            },
            {
                "answer_argument": "m.0r1yz1",
                "answer_type": "Entity",
                "entity_name": "Occapella"
            },
            {
                "answer_argument": "m.0r1yz8",
                "answer_type": "Entity",
                "entity_name": "Oo-Wee"
            },
            {
                "answer_argument": "m.0r1yzh",
                "answer_type": "Entity",
                "entity_name": "Husbands and Wives"
            },
            {
                "answer_argument": "m.0r1yzq",
                "answer_type": "Entity",
                "entity_name": "Snookeroo"
            },
            {
                "answer_argument": "m.0r1yzy",
                "answer_type": "Entity",
                "entity_name": "All by Myself"
            },
            {
                "answer_argument": "m.0r1z00",
                "answer_type": "Entity",
                "entity_name": "Goodnight Vienna (reprise)"
            },
            {
                "answer_argument": "m.0r1z07",
                "answer_type": "Entity",
                "entity_name": "Back Off Boogaloo"
            },
            {
                "answer_argument": "m.0r1z0g",
                "answer_type": "Entity",
                "entity_name": "Blindman"
            },
            {
                "answer_argument": "m.0r1z0p",
                "answer_type": "Entity",
                "entity_name": "Six O'Clock (extended version)"
            },
            {
                "answer_argument": "m.0rfkpv_",
                "answer_type": "Entity",
                "entity_name": "Oh My Lord"
            },
            {
                "answer_argument": "m.0rgv4fl",
                "answer_type": "Entity",
                "entity_name": "I Really Love Her"
            },
            {
                "answer_argument": "m.0rk5bth",
                "answer_type": "Entity",
                "entity_name": "Don’t Hang Up"
            },
            {
                "answer_argument": "m.0sgt8l",
                "answer_type": "Entity",
                "entity_name": "Lay Down Your Arms (feat. Stevie Nicks)"
            },
            {
                "answer_argument": "m.0vgy80",
                "answer_type": "Entity",
                "entity_name": "Pinocchio Medley (\\\"Do You See the Noses Growing?\\\"): Desolation Theme / When You Wish Upon a Star"
            },
            {
                "answer_argument": "m.0wkxbp",
                "answer_type": "Entity",
                "entity_name": "White Christmas"
            },
            {
                "answer_argument": "m.0wkxdn",
                "answer_type": "Entity",
                "entity_name": "Come on Christmas, Christmas Come On"
            },
            {
                "answer_argument": "m.0wkxdw",
                "answer_type": "Entity",
                "entity_name": "Winter Wonderland"
            },
            {
                "answer_argument": "m.0wkxf2",
                "answer_type": "Entity",
                "entity_name": "I Wanna Be Santa Claus"
            },
            {
                "answer_argument": "m.0wkxf9",
                "answer_type": "Entity",
                "entity_name": "The Little Drummer Boy"
            },
            {
                "answer_argument": "m.0wkxfj",
                "answer_type": "Entity",
                "entity_name": "Rudolph the Red‐Nosed Reindeer"
            },
            {
                "answer_argument": "m.0wkxfr",
                "answer_type": "Entity",
                "entity_name": "Christmas Eve"
            },
            {
                "answer_argument": "m.0wkxfz",
                "answer_type": "Entity",
                "entity_name": "The Christmas Dance"
            },
            {
                "answer_argument": "m.0wkxgd",
                "answer_type": "Entity",
                "entity_name": "Blue Christmas"
            },
            {
                "answer_argument": "m.0wkxgm",
                "answer_type": "Entity",
                "entity_name": "Dear Santa"
            },
            {
                "answer_argument": "m.0wkxgv",
                "answer_type": "Entity",
                "entity_name": "White Christmas"
            },
            {
                "answer_argument": "m.0wkxh1",
                "answer_type": "Entity",
                "entity_name": "Pax Um Biscum (Peace Be With You)"
            },
            {
                "answer_argument": "m.0wlw19",
                "answer_type": "Entity",
                "entity_name": "One"
            },
            {
                "answer_argument": "m.0wlw1j",
                "answer_type": "Entity",
                "entity_name": "What in the... World"
            },
            {
                "answer_argument": "m.0wlw1r",
                "answer_type": "Entity",
                "entity_name": "Mindfield"
            },
            {
                "answer_argument": "m.0wlw1z",
                "answer_type": "Entity",
                "entity_name": "King of Broken Hearts"
            },
            {
                "answer_argument": "m.0wlw25",
                "answer_type": "Entity",
                "entity_name": "Love Me Do"
            },
            {
                "answer_argument": "m.0wlw2d",
                "answer_type": "Entity",
                "entity_name": "Vertical Man"
            },
            {
                "answer_argument": "m.0wlw2m",
                "answer_type": "Entity",
                "entity_name": "Drift Away"
            },
            {
                "answer_argument": "m.0wlw2v",
                "answer_type": "Entity",
                "entity_name": "I Was Walkin'"
            },
            {
                "answer_argument": "m.0wlw31",
                "answer_type": "Entity",
                "entity_name": "La De Da"
            },
            {
                "answer_argument": "m.0wlw38",
                "answer_type": "Entity",
                "entity_name": "Without Understanding"
            },
            {
                "answer_argument": "m.0wlw3h",
                "answer_type": "Entity",
                "entity_name": "I'll Be Fine Anywhere"
            },
            {
                "answer_argument": "m.0wlw3q",
                "answer_type": "Entity",
                "entity_name": "Puppet"
            },
            {
                "answer_argument": "m.0wlw3y",
                "answer_type": "Entity",
                "entity_name": "I'm Yours"
            },
            {
                "answer_argument": "m.0x5r_5",
                "answer_type": "Entity",
                "entity_name": "You're Sixteen"
            },
            {
                "answer_argument": "m.0x5r_d",
                "answer_type": "Entity",
                "entity_name": "Photograph"
            },
            {
                "answer_argument": "m.0x5rwx",
                "answer_type": "Entity",
                "entity_name": "It Don't Come Easy"
            },
            {
                "answer_argument": "m.0x5rx_",
                "answer_type": "Entity",
                "entity_name": "Honey Don't"
            },
            {
                "answer_argument": "m.0x5rx3",
                "answer_type": "Entity",
                "entity_name": "The No-No Song"
            },
            {
                "answer_argument": "m.0ybckyv",
                "answer_type": "Entity",
                "entity_name": "You Know It Makes Sense"
            },
            {
                "answer_argument": "m.0yg09l",
                "answer_type": "Entity",
                "entity_name": "With a Little Help From My Friends"
            }
        ],
        "s_expression": "(JOIN (R music.artist.track) m.01vrnsk)",
        "s_expression_processed": "(JOIN (R music.artist.track) m.01vrnsk)"
    },
    {
        "qid": "WebQTest-493",
        "question": "what type of government does australia have",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0chghy",
                    "class": "common.topic",
                    "friendly_name": "australia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.form_of_government"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chghy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chghy ns:location.country.form_of_government ?x .\n}\n",
        "topic_entity": "m.0chghy",
        "answer": [
            {
                "answer_argument": "m.018wl5",
                "answer_type": "Entity",
                "entity_name": "Parliamentary system"
            },
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            },
            {
                "answer_argument": "m.0g3y9q",
                "answer_type": "Entity",
                "entity_name": "Federal monarchy"
            }
        ],
        "s_expression": "(JOIN (R location.country.form_of_government) m.0chghy)",
        "s_expression_processed": "(JOIN (R location.country.form_of_government) m.0chghy)"
    },
    {
        "qid": "WebQTest-516",
        "question": "what is the government system of malaysia",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09pmkv",
                    "class": "common.topic",
                    "friendly_name": "malaysia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.form_of_government"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09pmkv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09pmkv ns:location.country.form_of_government ?x .\n}\n",
        "topic_entity": "m.09pmkv",
        "answer": [
            {
                "answer_argument": "m.018wl5",
                "answer_type": "Entity",
                "entity_name": "Parliamentary system"
            },
            {
                "answer_argument": "m.01m4w_",
                "answer_type": "Entity",
                "entity_name": "Elective monarchy"
            },
            {
                "answer_argument": "m.01q20",
                "answer_type": "Entity",
                "entity_name": "Constitutional monarchy"
            },
            {
                "answer_argument": "m.026wp",
                "answer_type": "Entity",
                "entity_name": "Democracy"
            }
        ],
        "s_expression": "(JOIN (R location.country.form_of_government) m.09pmkv)",
        "s_expression_processed": "(JOIN (R location.country.form_of_government) m.09pmkv)"
    },
    {
        "qid": "WebQTest-519",
        "question": "what timezone is nashville tn",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05jbn",
                    "class": "common.topic",
                    "friendly_name": "nashville tn",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.time_zones"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05jbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05jbn ns:location.location.time_zones ?x .\n}\n",
        "topic_entity": "m.05jbn",
        "answer": [
            {
                "answer_argument": "m.02fqwt",
                "answer_type": "Entity",
                "entity_name": "Central Time Zone"
            }
        ],
        "s_expression": "(JOIN (R location.location.time_zones) m.05jbn)",
        "s_expression_processed": "(JOIN (R location.location.time_zones) m.05jbn)"
    },
    {
        "qid": "WebQTest-526",
        "question": "what band was george clinton in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0ql36",
                    "class": "common.topic",
                    "friendly_name": "george clinton",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "music.group_member.membership"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.group_membership.group"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ql36)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ql36 ns:music.group_member.membership ?y .\n?y ns:music.group_membership.group ?x .\n}\n",
        "topic_entity": "m.0ql36",
        "answer": [
            {
                "answer_argument": "m.01180cs1",
                "answer_type": "Entity",
                "entity_name": "Parliament"
            },
            {
                "answer_argument": "m.01rjw6v",
                "answer_type": "Entity",
                "entity_name": "Dolby's Cube"
            },
            {
                "answer_argument": "m.01tzqkk",
                "answer_type": "Entity",
                "entity_name": "The Parliaments"
            },
            {
                "answer_argument": "m.03xp1t4",
                "answer_type": "Entity",
                "entity_name": "George Clinton & Bootsy Collins"
            },
            {
                "answer_argument": "m.0qlhx",
                "answer_type": "Entity",
                "entity_name": "Parliament-Funkadelic"
            },
            {
                "answer_argument": "m.0qmny",
                "answer_type": "Entity",
                "entity_name": "Funkadellic"
            }
        ],
        "s_expression": "(JOIN (R music.group_membership.group) (JOIN (R music.group_member.membership) m.0ql36))",
        "s_expression_processed": "(JOIN (R music.group_membership.group) (JOIN (R music.group_member.membership) m.0ql36))"
    },
    {
        "qid": "WebQTest-532",
        "question": "what does david beckham play",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02d9k",
                    "class": "common.topic",
                    "friendly_name": "david beckham",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.sports_played_professionally"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.pro_sports_played.sport"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02d9k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02d9k ns:sports.pro_athlete.sports_played_professionally ?y .\n?y ns:sports.pro_sports_played.sport ?x .\n}\n",
        "topic_entity": "m.02d9k",
        "answer": [
            {
                "answer_argument": "m.02vx4",
                "answer_type": "Entity",
                "entity_name": "Football"
            }
        ],
        "s_expression": "(JOIN (R sports.pro_sports_played.sport) (JOIN (R sports.pro_athlete.sports_played_professionally) m.02d9k))",
        "s_expression_processed": "(JOIN (R sports.pro_sports_played.sport) (JOIN (R sports.pro_athlete.sports_played_professionally) m.02d9k))"
    },
    {
        "qid": "WebQTest-545",
        "question": "what kind of cancer did farrah fawcett die of",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01j851",
                    "class": "common.topic",
                    "friendly_name": "farrah fawcett",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0qcr0",
                    "class": "common.topic",
                    "friendly_name": "Cancer",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.cause_of_death"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "medicine.disease.parent_disease"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j851)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j851 ns:people.deceased_person.cause_of_death ?x .\n?x ns:medicine.disease.parent_disease ns:m.0qcr0 .\n}\n",
        "topic_entity": "m.01j851",
        "answer": [
            {
                "answer_argument": "m.02vxm4",
                "answer_type": "Entity",
                "entity_name": "Anal cancer"
            }
        ],
        "s_expression": "(AND (JOIN (R people.deceased_person.cause_of_death) m.01j851) (JOIN medicine.disease.parent_disease m.0qcr0))",
        "s_expression_processed": "(CONS (JOIN (R people.deceased_person.cause_of_death) m.01j851) medicine.disease.parent_disease m.0qcr0)"
    },
    {
        "qid": "WebQTest-560",
        "question": "who voiced darth vader",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0f2y0",
                    "class": "common.topic",
                    "friendly_name": "darth vader",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02nsjvf",
                    "class": "common.topic",
                    "friendly_name": "Voice",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_character.appeared_in_tv_program"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "tv.regular_tv_appearance.special_performance_type"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.special_performance_type ns:m.02nsjvf .\n}\n",
        "topic_entity": "m.0f2y0",
        "answer": [
            {
                "answer_argument": "m.0b2l8f",
                "answer_type": "Entity",
                "entity_name": "Matt Lanter"
            }
        ],
        "s_expression": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_character.appeared_in_tv_program) m.0f2y0) (JOIN tv.regular_tv_appearance.special_performance_type m.02nsjvf)))",
        "s_expression_processed": "(JOIN (R tv.regular_tv_appearance.actor) (CONS (JOIN (R tv.tv_character.appeared_in_tv_program) m.0f2y0) tv.regular_tv_appearance.special_performance_type m.02nsjvf))"
    },
    {
        "qid": "WebQTest-561",
        "question": "when was abe lincoln president",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0gzh",
                    "class": "common.topic",
                    "friendly_name": "abe lincoln",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.inaugurations.inauguration_speaker.inauguration"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gzh ns:base.inaugurations.inauguration_speaker.inauguration ?x .\n}\n",
        "topic_entity": "m.0gzh",
        "answer": [
            {
                "answer_argument": "m.05brd51",
                "answer_type": "Entity",
                "entity_name": "Abraham Lincoln 1861 presidential inauguration"
            },
            {
                "answer_argument": "m.05brd5c",
                "answer_type": "Entity",
                "entity_name": "Abraham Lincoln 1865 presidential inauguration"
            }
        ],
        "s_expression": "(JOIN (R base.inaugurations.inauguration_speaker.inauguration) m.0gzh)",
        "s_expression_processed": "(JOIN (R base.inaugurations.inauguration_speaker.inauguration) m.0gzh)"
    },
    {
        "qid": "WebQTest-576",
        "question": "what are the 7 countries that are part of central america",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.country",
                    "class": "location.country",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01tzh",
                    "class": "common.topic",
                    "friendly_name": "central america",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.contains"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01tzh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01tzh ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "topic_entity": "m.01tzh",
        "answer": [
            {
                "answer_argument": "m.0164b",
                "answer_type": "Entity",
                "entity_name": "Belize"
            },
            {
                "answer_argument": "m.01p8s",
                "answer_type": "Entity",
                "entity_name": "Costa Rica"
            },
            {
                "answer_argument": "m.02k8k",
                "answer_type": "Entity",
                "entity_name": "El Salvador"
            },
            {
                "answer_argument": "m.0345_",
                "answer_type": "Entity",
                "entity_name": "Guatemala"
            },
            {
                "answer_argument": "m.03h2c",
                "answer_type": "Entity",
                "entity_name": "Honduras"
            },
            {
                "answer_argument": "m.05qx1",
                "answer_type": "Entity",
                "entity_name": "Panama"
            },
            {
                "answer_argument": "m.0dkz7x",
                "answer_type": "Entity",
                "entity_name": "Gran Colombia"
            }
        ],
        "s_expression": "(AND location.country (JOIN (R location.location.contains) m.01tzh))",
        "s_expression_processed": "(AND location.country (JOIN (R location.location.contains) m.01tzh))"
    },
    {
        "qid": "WebQTest-579",
        "question": "where are the new orleans hornets moving to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01k8vh",
                    "class": "common.topic",
                    "friendly_name": "new orleans hornets",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team.location"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01k8vh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01k8vh ns:sports.sports_team.location ?x .\n}\n",
        "topic_entity": "m.01k8vh",
        "answer": [
            {
                "answer_argument": "m.0fsb8",
                "answer_type": "Entity",
                "entity_name": "Charlotte"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team.location) m.01k8vh)",
        "s_expression_processed": "(JOIN (R sports.sports_team.location) m.01k8vh)"
    },
    {
        "qid": "WebQTest-582",
        "question": "what did galileo do to become famous",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.034ks",
                    "class": "common.topic",
                    "friendly_name": "galileo",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.profession"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.034ks)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.034ks ns:people.person.profession ?x .\n}\n",
        "topic_entity": "m.034ks",
        "answer": [
            {
                "answer_argument": "m.025rxky",
                "answer_type": "Entity",
                "entity_name": "Astrologer"
            },
            {
                "answer_argument": "m.04s2z",
                "answer_type": "Entity",
                "entity_name": "Mathematician"
            },
            {
                "answer_argument": "m.05snw",
                "answer_type": "Entity",
                "entity_name": "Physicist"
            },
            {
                "answer_argument": "m.06q2q",
                "answer_type": "Entity",
                "entity_name": "Scientist"
            },
            {
                "answer_argument": "m.0h9c",
                "answer_type": "Entity",
                "entity_name": "Astronomer"
            }
        ],
        "s_expression": "(JOIN (R people.person.profession) m.034ks)",
        "s_expression_processed": "(JOIN (R people.person.profession) m.034ks)"
    },
    {
        "qid": "WebQTest-589",
        "question": "what russian language called",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06bnz",
                    "class": "common.topic",
                    "friendly_name": "russian",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.official_language"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06bnz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06bnz ns:location.country.official_language ?x .\n}\n",
        "topic_entity": "m.06bnz",
        "answer": [
            {
                "answer_argument": "m.06b_j",
                "answer_type": "Entity",
                "entity_name": "Russian Language"
            }
        ],
        "s_expression": "(JOIN (R location.country.official_language) m.06bnz)",
        "s_expression_processed": "(JOIN (R location.country.official_language) m.06bnz)"
    },
    {
        "qid": "WebQTest-596",
        "question": "where did kansas city royals come from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.049n7",
                    "class": "common.topic",
                    "friendly_name": "kansas city royals",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team.location"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.049n7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.049n7 ns:sports.sports_team.location ?x .\n}\n",
        "topic_entity": "m.049n7",
        "answer": [
            {
                "answer_argument": "m.04f_d",
                "answer_type": "Entity",
                "entity_name": "Kansas City"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team.location) m.049n7)",
        "s_expression_processed": "(JOIN (R sports.sports_team.location) m.049n7)"
    },
    {
        "qid": "WebQTest-600",
        "question": "where did djokovic come from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09n70c",
                    "class": "common.topic",
                    "friendly_name": "djokovic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "olympics.olympic_athlete.country"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "olympics.olympic_athlete_affiliation.country"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09n70c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09n70c ns:olympics.olympic_athlete.country ?y .\n?y ns:olympics.olympic_athlete_affiliation.country ?x .\n}\n",
        "topic_entity": "m.09n70c",
        "answer": [
            {
                "answer_argument": "m.077qn",
                "answer_type": "Entity",
                "entity_name": "Serbia"
            }
        ],
        "s_expression": "(JOIN (R olympics.olympic_athlete_affiliation.country) (JOIN (R olympics.olympic_athlete.country) m.09n70c))",
        "s_expression_processed": "(JOIN (R olympics.olympic_athlete_affiliation.country) (JOIN (R olympics.olympic_athlete.country) m.09n70c))"
    },
    {
        "qid": "WebQTest-606",
        "question": "who were alexander graham bell 's siblings",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0k70",
                    "class": "common.topic",
                    "friendly_name": "alexander graham bell",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.sibling_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.sibling_relationship.sibling"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k70)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k70 ns:people.person.sibling_s ?y .\n?y ns:people.sibling_relationship.sibling ?x .\n}\n",
        "topic_entity": "m.0k70",
        "answer": [
            {
                "answer_argument": "m.0k257qt",
                "answer_type": "Entity",
                "entity_name": "Melville James Bell"
            },
            {
                "answer_argument": "m.0w17rt6",
                "answer_type": "Entity",
                "entity_name": "Edward Charles Bell"
            }
        ],
        "s_expression": "(JOIN (R people.sibling_relationship.sibling) (JOIN (R people.person.sibling_s) m.0k70))",
        "s_expression_processed": "(JOIN (R people.sibling_relationship.sibling) (JOIN (R people.person.sibling_s) m.0k70))"
    },
    {
        "qid": "WebQTest-612",
        "question": "who does jeremy shockey play for in 2012",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.076ltd",
                    "class": "common.topic",
                    "friendly_name": "jeremy shockey",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.schemastaging.athlete_extra.salary"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.schemastaging.athlete_salary.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.076ltd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.076ltd ns:base.schemastaging.athlete_extra.salary ?y .\n?y ns:base.schemastaging.athlete_salary.team ?x .\n}\n",
        "topic_entity": "m.076ltd",
        "answer": [
            {
                "answer_argument": "m.01y3c",
                "answer_type": "Entity",
                "entity_name": "Carolina Panthers"
            }
        ],
        "s_expression": "(JOIN (R base.schemastaging.athlete_salary.team) (JOIN (R base.schemastaging.athlete_extra.salary) m.076ltd))",
        "s_expression_processed": "(JOIN (R base.schemastaging.athlete_salary.team) (JOIN (R base.schemastaging.athlete_extra.salary) m.076ltd))"
    },
    {
        "qid": "WebQTest-617",
        "question": "where did tim tebow grow up",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0g7km1",
                    "class": "common.topic",
                    "friendly_name": "tim tebow",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.place_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g7km1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g7km1 ns:people.person.place_of_birth ?x .\n}\n",
        "topic_entity": "m.0g7km1",
        "answer": [
            {
                "answer_argument": "m.01dvzy",
                "answer_type": "Entity",
                "entity_name": "Makati"
            }
        ],
        "s_expression": "(JOIN (R people.person.place_of_birth) m.0g7km1)",
        "s_expression_processed": "(JOIN (R people.person.place_of_birth) m.0g7km1)"
    },
    {
        "qid": "WebQTest-618",
        "question": "where is chesapeake bay bridge",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03xksb",
                    "class": "common.topic",
                    "friendly_name": "chesapeake bay bridge",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "transportation.bridge.locale"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03xksb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03xksb ns:transportation.bridge.locale ?x .\n}\n",
        "topic_entity": "m.03xksb",
        "answer": [
            {
                "answer_argument": "m.0dn8b",
                "answer_type": "Entity",
                "entity_name": "Anne Arundel County"
            },
            {
                "answer_argument": "m.0g834",
                "answer_type": "Entity",
                "entity_name": "Queen Anne's County"
            }
        ],
        "s_expression": "(JOIN (R transportation.bridge.locale) m.03xksb)",
        "s_expression_processed": "(JOIN (R transportation.bridge.locale) m.03xksb)"
    },
    {
        "qid": "WebQTest-619",
        "question": "who played victoria barkley",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.030k44",
                    "class": "common.topic",
                    "friendly_name": "victoria barkley",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.09cyx23",
                    "class": "common.topic",
                    "friendly_name": "Victoria Barkley",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_program.regular_cast"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "tv.regular_tv_appearance.character"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.030k44)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.030k44 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.09cyx23 .\n}\n",
        "topic_entity": "m.030k44",
        "answer": [
            {
                "answer_argument": "m.0bw6y",
                "answer_type": "Entity",
                "entity_name": "Barbara Stanwyck"
            }
        ],
        "s_expression": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_program.regular_cast) m.030k44) (JOIN tv.regular_tv_appearance.character m.09cyx23)))",
        "s_expression_processed": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_program.regular_cast) m.030k44) (JOIN tv.regular_tv_appearance.character m.09cyx23)))"
    },
    {
        "qid": "WebQTest-630",
        "question": "what language do colombian people speak",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01ls2",
                    "class": "common.topic",
                    "friendly_name": "colombian",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.languages_spoken"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ls2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ls2 ns:location.country.languages_spoken ?x .\n}\n",
        "topic_entity": "m.01ls2",
        "answer": [
            {
                "answer_argument": "g.1q6h_1_4j",
                "answer_type": "Entity",
                "entity_name": "Piratapuyo Language"
            },
            {
                "answer_argument": "m.01yppj",
                "answer_type": "Entity",
                "entity_name": "Cocama language"
            },
            {
                "answer_argument": "m.025syhx",
                "answer_type": "Entity",
                "entity_name": "Bora Language"
            },
            {
                "answer_argument": "m.026wqvr",
                "answer_type": "Entity",
                "entity_name": "Wayuu Language"
            },
            {
                "answer_argument": "m.02hw_7r",
                "answer_type": "Entity",
                "entity_name": "Malayo Language"
            },
            {
                "answer_argument": "m.02hwglw",
                "answer_type": "Entity",
                "entity_name": "Quechua, Napo Lowland Language"
            },
            {
                "answer_argument": "m.02hwgnw",
                "answer_type": "Entity",
                "entity_name": "Curripaco Language"
            },
            {
                "answer_argument": "m.02hwgxh",
                "answer_type": "Entity",
                "entity_name": "Hupdë Language"
            },
            {
                "answer_argument": "m.02hwh2x",
                "answer_type": "Entity",
                "entity_name": "Baudo language"
            },
            {
                "answer_argument": "m.02hwl4_",
                "answer_type": "Entity",
                "entity_name": "Siona Language"
            },
            {
                "answer_argument": "m.02hwl46",
                "answer_type": "Entity",
                "entity_name": "Cabiyarí Language"
            },
            {
                "answer_argument": "m.02hwmth",
                "answer_type": "Entity",
                "entity_name": "Nukak language"
            },
            {
                "answer_argument": "m.02hwnpn",
                "answer_type": "Entity",
                "entity_name": "Barí Language"
            },
            {
                "answer_argument": "m.02hwnwm",
                "answer_type": "Entity",
                "entity_name": "Tama Language"
            },
            {
                "answer_argument": "m.02hwpxb",
                "answer_type": "Entity",
                "entity_name": "Awa-Cuaiquer Language"
            },
            {
                "answer_argument": "m.02hwqkg",
                "answer_type": "Entity",
                "entity_name": "Guanano Language"
            },
            {
                "answer_argument": "m.02hwqrn",
                "answer_type": "Entity",
                "entity_name": "Tanimuca-Retuarã Language"
            },
            {
                "answer_argument": "m.02hwqww",
                "answer_type": "Entity",
                "entity_name": "Cagua Language"
            },
            {
                "answer_argument": "m.02hwr84",
                "answer_type": "Entity",
                "entity_name": "Runa Language"
            },
            {
                "answer_argument": "m.02hwrvb",
                "answer_type": "Entity",
                "entity_name": "Coyaima Language"
            },
            {
                "answer_argument": "m.02hwt3q",
                "answer_type": "Entity",
                "entity_name": "Ponares Language"
            },
            {
                "answer_argument": "m.02hwv5q",
                "answer_type": "Entity",
                "entity_name": "Macaguaje Language"
            },
            {
                "answer_argument": "m.02hwv8r",
                "answer_type": "Entity",
                "entity_name": "Inga, Jungle Language"
            },
            {
                "answer_argument": "m.02hwvm1",
                "answer_type": "Entity",
                "entity_name": "Coxima Language"
            },
            {
                "answer_argument": "m.02hww1x",
                "answer_type": "Entity",
                "entity_name": "Tomedes Language"
            },
            {
                "answer_argument": "m.02hwwlp",
                "answer_type": "Entity",
                "entity_name": "Natagaimas Language"
            },
            {
                "answer_argument": "m.02hwwxk",
                "answer_type": "Entity",
                "entity_name": "Cumeral Language"
            },
            {
                "answer_argument": "m.02hwxg4",
                "answer_type": "Entity",
                "entity_name": "Carijona Language"
            },
            {
                "answer_argument": "m.02hwxgh",
                "answer_type": "Entity",
                "entity_name": "Tunebo, Barro Negro Language"
            },
            {
                "answer_argument": "m.02hwyr3",
                "answer_type": "Entity",
                "entity_name": "Siriano Language"
            },
            {
                "answer_argument": "m.02hwzdd",
                "answer_type": "Entity",
                "entity_name": "Muinane Language"
            },
            {
                "answer_argument": "m.02hwzgg",
                "answer_type": "Entity",
                "entity_name": "Macaguán Language"
            },
            {
                "answer_argument": "m.02hwzld",
                "answer_type": "Entity",
                "entity_name": "Pijao Language"
            },
            {
                "answer_argument": "m.02hx_dp",
                "answer_type": "Entity",
                "entity_name": "Puinave Language"
            },
            {
                "answer_argument": "m.02hx0bf",
                "answer_type": "Entity",
                "entity_name": "Cubeo Language"
            },
            {
                "answer_argument": "m.02hx2q2",
                "answer_type": "Entity",
                "entity_name": "Desano Language"
            },
            {
                "answer_argument": "m.02hx2tn",
                "answer_type": "Entity",
                "entity_name": "Tunebo, Central Language"
            },
            {
                "answer_argument": "m.02hx5w4",
                "answer_type": "Entity",
                "entity_name": "Guayabero Language"
            },
            {
                "answer_argument": "m.02hx8nb",
                "answer_type": "Entity",
                "entity_name": "Arhuaco Language"
            },
            {
                "answer_argument": "m.02hxb1x",
                "answer_type": "Entity",
                "entity_name": "Tunebo, Western Language"
            },
            {
                "answer_argument": "m.02hxb4m",
                "answer_type": "Entity",
                "entity_name": "Totoro Language"
            },
            {
                "answer_argument": "m.02hxb6s",
                "answer_type": "Entity",
                "entity_name": "Palenquero Language"
            },
            {
                "answer_argument": "m.02hxdd2",
                "answer_type": "Entity",
                "entity_name": "Kogi Language"
            },
            {
                "answer_argument": "m.02hxdfd",
                "answer_type": "Entity",
                "entity_name": "Barasana Language"
            },
            {
                "answer_argument": "m.02hxds7",
                "answer_type": "Entity",
                "entity_name": "Yukpa Language"
            },
            {
                "answer_argument": "m.02hxf1r",
                "answer_type": "Entity",
                "entity_name": "Waimajã Language"
            },
            {
                "answer_argument": "m.02hxfkq",
                "answer_type": "Entity",
                "entity_name": "Colombian Sign Language"
            },
            {
                "answer_argument": "m.02hxh5f",
                "answer_type": "Entity",
                "entity_name": "Guambiano Language"
            },
            {
                "answer_argument": "m.02hxhrz",
                "answer_type": "Entity",
                "entity_name": "Minica Huitoto"
            },
            {
                "answer_argument": "m.02hxj6x",
                "answer_type": "Entity",
                "entity_name": "Piaroa Language"
            },
            {
                "answer_argument": "m.02hxksk",
                "answer_type": "Entity",
                "entity_name": "Emberá, Northern Language"
            },
            {
                "answer_argument": "m.02hxl2t",
                "answer_type": "Entity",
                "entity_name": "Ocaina Language"
            },
            {
                "answer_argument": "m.02hxlpz",
                "answer_type": "Entity",
                "entity_name": "Anserma Language"
            },
            {
                "answer_argument": "m.02hxnf6",
                "answer_type": "Entity",
                "entity_name": "Carabayo Language"
            },
            {
                "answer_argument": "m.02hxp1v",
                "answer_type": "Entity",
                "entity_name": "Macuna Language"
            },
            {
                "answer_argument": "m.02hxs7q",
                "answer_type": "Entity",
                "entity_name": "Omejes Language"
            },
            {
                "answer_argument": "m.02hxs9_",
                "answer_type": "Entity",
                "entity_name": "Andoque Language"
            },
            {
                "answer_argument": "m.02hxssc",
                "answer_type": "Entity",
                "entity_name": "Chipiajes Language"
            },
            {
                "answer_argument": "m.02hxswb",
                "answer_type": "Entity",
                "entity_name": "Inga Language"
            },
            {
                "answer_argument": "m.02hxsy4",
                "answer_type": "Entity",
                "entity_name": "Piapoco Language"
            },
            {
                "answer_argument": "m.02hxsz8",
                "answer_type": "Entity",
                "entity_name": "Tunebo, Angosturas Language"
            },
            {
                "answer_argument": "m.02hxtwj",
                "answer_type": "Entity",
                "entity_name": "Catio language"
            },
            {
                "answer_argument": "m.02hxv46",
                "answer_type": "Entity",
                "entity_name": "Koreguaje Language"
            },
            {
                "answer_argument": "m.02hxvjw",
                "answer_type": "Entity",
                "entity_name": "Kuna, Border Language"
            },
            {
                "answer_argument": "m.02hxxcv",
                "answer_type": "Entity",
                "entity_name": "Andaqui Language"
            },
            {
                "answer_argument": "m.02hxy04",
                "answer_type": "Entity",
                "entity_name": "Sáliba Language"
            },
            {
                "answer_argument": "m.02hxy6v",
                "answer_type": "Entity",
                "entity_name": "Camsá Language"
            },
            {
                "answer_argument": "m.02hxz2z",
                "answer_type": "Entity",
                "entity_name": "Murui Huitoto language"
            },
            {
                "answer_argument": "m.02hxzv2",
                "answer_type": "Entity",
                "entity_name": "Yucuna Language"
            },
            {
                "answer_argument": "m.02ppbb5",
                "answer_type": "Entity",
                "entity_name": "Guahibo language"
            },
            {
                "answer_argument": "m.02ppbg9",
                "answer_type": "Entity",
                "entity_name": "Cuiba language"
            },
            {
                "answer_argument": "m.02ppbnh",
                "answer_type": "Entity",
                "entity_name": "Playero language"
            },
            {
                "answer_argument": "m.02pq8qn",
                "answer_type": "Entity",
                "entity_name": "Uwa language"
            },
            {
                "answer_argument": "m.03h0wpt",
                "answer_type": "Entity",
                "entity_name": "Achawa language"
            },
            {
                "answer_argument": "m.03w6b4",
                "answer_type": "Entity",
                "entity_name": "Ticuna language"
            },
            {
                "answer_argument": "m.05tnswp",
                "answer_type": "Entity",
                "entity_name": "Islander Creole English"
            },
            {
                "answer_argument": "m.06gdhz",
                "answer_type": "Entity",
                "entity_name": "Nheengatu language"
            },
            {
                "answer_argument": "m.06nm1",
                "answer_type": "Entity",
                "entity_name": "Spanish Language"
            },
            {
                "answer_argument": "m.07k4r10",
                "answer_type": "Entity",
                "entity_name": "Tinigua language"
            },
            {
                "answer_argument": "m.085vdy",
                "answer_type": "Entity",
                "entity_name": "Providencia Sign Language"
            },
            {
                "answer_argument": "m.08w0ky",
                "answer_type": "Entity",
                "entity_name": "Romani, Vlax Language"
            },
            {
                "answer_argument": "m.09gpqdh",
                "answer_type": "Entity",
                "entity_name": "Tuyuca language"
            },
            {
                "answer_argument": "m.09k4cp",
                "answer_type": "Entity",
                "entity_name": "Tucano Language"
            },
            {
                "answer_argument": "m.0b7mcv",
                "answer_type": "Entity",
                "entity_name": "Páez language"
            },
            {
                "answer_argument": "m.0bm08x",
                "answer_type": "Entity",
                "entity_name": "Cofán Language"
            },
            {
                "answer_argument": "m.0km3ztb",
                "answer_type": "Entity",
                "entity_name": "Nonuya language"
            }
        ],
        "s_expression": "(JOIN (R location.country.languages_spoken) m.01ls2)",
        "s_expression_processed": "(JOIN (R location.country.languages_spoken) m.01ls2)"
    },
    {
        "qid": "WebQTest-639",
        "question": "what year did the bulls get rodman",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01ztgm",
                    "class": "common.topic",
                    "friendly_name": "rodman",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0jm74",
                    "class": "common.topic",
                    "friendly_name": "Bulls",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.from"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ztgm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ztgm ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.from ?x .\n?y ns:sports.sports_team_roster.team ns:m.0jm74 .\n}\n",
        "topic_entity": "m.01ztgm",
        "answer": [
            {
                "answer_argument": "1995",
                "answer_type": "Value",
                "entity_name": null
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.from) (AND (JOIN (R sports.pro_athlete.teams) m.01ztgm) (JOIN sports.sports_team_roster.team m.0jm74)))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.from) (AND (JOIN (R sports.pro_athlete.teams) m.01ztgm) (JOIN sports.sports_team_roster.team m.0jm74)))"
    },
    {
        "qid": "WebQTest-642",
        "question": "where did vince scully go to college",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.038gnr",
                    "class": "common.topic",
                    "friendly_name": "vince scully",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.038gnr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.038gnr ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.038gnr",
        "answer": [
            {
                "answer_argument": "m.027kp3",
                "answer_type": "Entity",
                "entity_name": "Fordham University"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.038gnr)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.038gnr)))"
    },
    {
        "qid": "WebQTest-643",
        "question": "where does princess leia live",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0ddqw",
                    "class": "common.topic",
                    "friendly_name": "leia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "fictional_universe.fictional_character.places_lived"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddqw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddqw ns:fictional_universe.fictional_character.places_lived ?x .\n}\n",
        "topic_entity": "m.0ddqw",
        "answer": [
            {
                "answer_argument": "m.065lhy",
                "answer_type": "Entity",
                "entity_name": "Alderaan"
            }
        ],
        "s_expression": "(JOIN (R fictional_universe.fictional_character.places_lived) m.0ddqw)",
        "s_expression_processed": "(JOIN (R fictional_universe.fictional_character.places_lived) m.0ddqw)"
    },
    {
        "qid": "WebQTest-644",
        "question": "what famous people are from el salvador",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02k8k",
                    "class": "common.topic",
                    "friendly_name": "el salvador",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.people_born_here"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02k8k)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02k8k ns:location.location.people_born_here ?x .\n}\n",
        "topic_entity": "m.02k8k",
        "answer": [
            {
                "answer_argument": "g.11b8058v7j",
                "answer_type": "Entity",
                "entity_name": ""
            },
            {
                "answer_argument": "m.010h0d8y",
                "answer_type": "Entity",
                "entity_name": "William Armando"
            },
            {
                "answer_argument": "m.011k0bpp",
                "answer_type": "Entity",
                "entity_name": "Victor Lopez"
            },
            {
                "answer_argument": "m.011k0bx8",
                "answer_type": "Entity",
                "entity_name": "Johnny Lopez"
            },
            {
                "answer_argument": "m.011v5_6y",
                "answer_type": "Entity",
                "entity_name": "Francisco Funes"
            },
            {
                "answer_argument": "m.012_0d7s",
                "answer_type": "Entity",
                "entity_name": "Damaris Quéles"
            },
            {
                "answer_argument": "m.012_0fc_",
                "answer_type": "Entity",
                "entity_name": "Francisca González"
            },
            {
                "answer_argument": "m.012z_6bb",
                "answer_type": "Entity",
                "entity_name": "Ricardo López Tenorio"
            },
            {
                "answer_argument": "m.01311sns",
                "answer_type": "Entity",
                "entity_name": "Xenia Estrada"
            },
            {
                "answer_argument": "m.0131y42k",
                "answer_type": "Entity",
                "entity_name": "Mauricio Alvarenga"
            },
            {
                "answer_argument": "m.013b7xby",
                "answer_type": "Entity",
                "entity_name": "Milton Palacios"
            },
            {
                "answer_argument": "m.026xmgs",
                "answer_type": "Entity",
                "entity_name": "Alexander Campos"
            },
            {
                "answer_argument": "m.02phhjj",
                "answer_type": "Entity",
                "entity_name": "Jose Orlando Martinez"
            },
            {
                "answer_argument": "m.02pyjqw",
                "answer_type": "Entity",
                "entity_name": "Mauricio Alonso Rodríguez"
            },
            {
                "answer_argument": "m.02qgkkg",
                "answer_type": "Entity",
                "entity_name": "Miguel Cañizalez"
            },
            {
                "answer_argument": "m.02qsc86",
                "answer_type": "Entity",
                "entity_name": "Francisco Gavidia"
            },
            {
                "answer_argument": "m.02qscbm",
                "answer_type": "Entity",
                "entity_name": "Pedro Geoffroy Rivas"
            },
            {
                "answer_argument": "m.02qsclj",
                "answer_type": "Entity",
                "entity_name": "Camilo Minero"
            },
            {
                "answer_argument": "m.02v_3hr",
                "answer_type": "Entity",
                "entity_name": "Ana Sol Gutierrez"
            },
            {
                "answer_argument": "m.02vmtpg",
                "answer_type": "Entity",
                "entity_name": "Joel Aguilar"
            },
            {
                "answer_argument": "m.02x5pqn",
                "answer_type": "Entity",
                "entity_name": "Wilfredo Iraheta"
            },
            {
                "answer_argument": "m.03c250_",
                "answer_type": "Entity",
                "entity_name": "Mauricio Alfaro"
            },
            {
                "answer_argument": "m.03c5z5s",
                "answer_type": "Entity",
                "entity_name": "José Luis Rugamas"
            },
            {
                "answer_argument": "m.03c9124",
                "answer_type": "Entity",
                "entity_name": "Eduardo Hernández"
            },
            {
                "answer_argument": "m.03cblzx",
                "answer_type": "Entity",
                "entity_name": "Roberto Carlos Martinez"
            },
            {
                "answer_argument": "m.03cfwyh",
                "answer_type": "Entity",
                "entity_name": "José Manfredi Portillo"
            },
            {
                "answer_argument": "m.03chqtt",
                "answer_type": "Entity",
                "entity_name": "Melvin Barrera"
            },
            {
                "answer_argument": "m.03chr1c",
                "answer_type": "Entity",
                "entity_name": "Pedro Chavarria"
            },
            {
                "answer_argument": "m.03ck2fb",
                "answer_type": "Entity",
                "entity_name": "José María Cañas"
            },
            {
                "answer_argument": "m.03ctvv4",
                "answer_type": "Entity",
                "entity_name": "Ruben Cedillos"
            },
            {
                "answer_argument": "m.03f4fxd",
                "answer_type": "Entity",
                "entity_name": "Keoki"
            },
            {
                "answer_argument": "m.03hzxty",
                "answer_type": "Entity",
                "entity_name": "DJ Quest"
            },
            {
                "answer_argument": "m.03m4f_f",
                "answer_type": "Entity",
                "entity_name": "Prudencia Ayala"
            },
            {
                "answer_argument": "m.03nxgl4",
                "answer_type": "Entity",
                "entity_name": "Andrés Eduardo Menéndez"
            },
            {
                "answer_argument": "m.03nxqf0",
                "answer_type": "Entity",
                "entity_name": "William Renderos Iraheta"
            },
            {
                "answer_argument": "m.04_076h",
                "answer_type": "Entity",
                "entity_name": "Laura Molina"
            },
            {
                "answer_argument": "m.043ks6h",
                "answer_type": "Entity",
                "entity_name": "Félix Pineda"
            },
            {
                "answer_argument": "m.04cykvj",
                "answer_type": "Entity",
                "entity_name": "José Castellanos Contreras"
            },
            {
                "answer_argument": "m.04dyyg2",
                "answer_type": "Entity",
                "entity_name": "Jose Solis"
            },
            {
                "answer_argument": "m.04f4spb",
                "answer_type": "Entity",
                "entity_name": "Edwin Ramos"
            },
            {
                "answer_argument": "m.04f69lb",
                "answer_type": "Entity",
                "entity_name": "Roberto Rivas"
            },
            {
                "answer_argument": "m.04lhqln",
                "answer_type": "Entity",
                "entity_name": "Alfredo Ruano"
            },
            {
                "answer_argument": "m.04n3xqn",
                "answer_type": "Entity",
                "entity_name": "Rafael Menjívar Ochoa"
            },
            {
                "answer_argument": "m.04q8w4h",
                "answer_type": "Entity",
                "entity_name": "Papa A.P."
            },
            {
                "answer_argument": "m.04y963w",
                "answer_type": "Entity",
                "entity_name": "Elmer Acevedo"
            },
            {
                "answer_argument": "m.04yfkr7",
                "answer_type": "Entity",
                "entity_name": "Armando Chacón"
            },
            {
                "answer_argument": "m.05b_737",
                "answer_type": "Entity",
                "entity_name": "Saturnino Osorio"
            },
            {
                "answer_argument": "m.05c2y_f",
                "answer_type": "Entity",
                "entity_name": "Ernesto Aparicio"
            },
            {
                "answer_argument": "m.05m3gg",
                "answer_type": "Entity",
                "entity_name": "Arturo Armando Molina"
            },
            {
                "answer_argument": "m.05yr4wm",
                "answer_type": "Entity",
                "entity_name": "Diego Velázquez"
            },
            {
                "answer_argument": "m.05zkrkw",
                "answer_type": "Entity",
                "entity_name": "Miguel Cruz"
            },
            {
                "answer_argument": "m.05zv1fd",
                "answer_type": "Entity",
                "entity_name": "Juan Rafael Bustillo"
            },
            {
                "answer_argument": "m.065thkd",
                "answer_type": "Entity",
                "entity_name": "Sarah Ramos"
            },
            {
                "answer_argument": "m.066127x",
                "answer_type": "Entity",
                "entity_name": "Juan Ramón Sánchez"
            },
            {
                "answer_argument": "m.06w9_j6",
                "answer_type": "Entity",
                "entity_name": "Jorge Búcaro"
            },
            {
                "answer_argument": "m.06y1sn",
                "answer_type": "Entity",
                "entity_name": "Tomás Medina"
            },
            {
                "answer_argument": "m.06y1tb",
                "answer_type": "Entity",
                "entity_name": "Doroteo Vasconcelos"
            },
            {
                "answer_argument": "m.06y1yh",
                "answer_type": "Entity",
                "entity_name": "Rafael Campo"
            },
            {
                "answer_argument": "m.06y1yv",
                "answer_type": "Entity",
                "entity_name": "Francisco Dueñas"
            },
            {
                "answer_argument": "m.06y25k",
                "answer_type": "Entity",
                "entity_name": "Gerardo Barrios"
            },
            {
                "answer_argument": "m.06y27b",
                "answer_type": "Entity",
                "entity_name": "Francisco Menéndez"
            },
            {
                "answer_argument": "m.06y2bv",
                "answer_type": "Entity",
                "entity_name": "Pedro José Escalón"
            },
            {
                "answer_argument": "m.06y2cw",
                "answer_type": "Entity",
                "entity_name": "Manuel Enrique Araujo"
            },
            {
                "answer_argument": "m.06y2kd",
                "answer_type": "Entity",
                "entity_name": "Jorge Meléndez"
            },
            {
                "answer_argument": "m.06y2mv",
                "answer_type": "Entity",
                "entity_name": "Salvador Castaneda Castro"
            },
            {
                "answer_argument": "m.06y2q9",
                "answer_type": "Entity",
                "entity_name": "Julio Adalberto Rivera Carballo"
            },
            {
                "answer_argument": "m.07bk65",
                "answer_type": "Entity",
                "entity_name": "Consuelo de Saint Exupéry"
            },
            {
                "answer_argument": "m.07p8ps",
                "answer_type": "Entity",
                "entity_name": "Rubén Zamora"
            },
            {
                "answer_argument": "m.07swd6",
                "answer_type": "Entity",
                "entity_name": "Rutilio Grande"
            },
            {
                "answer_argument": "m.080bz0l",
                "answer_type": "Entity",
                "entity_name": "Víctor Ramírez"
            },
            {
                "answer_argument": "m.08vz5d",
                "answer_type": "Entity",
                "entity_name": "Nicolas F. Shi"
            },
            {
                "answer_argument": "m.09ggck_",
                "answer_type": "Entity",
                "entity_name": "Eva Dimas"
            },
            {
                "answer_argument": "m.09v1mhy",
                "answer_type": "Entity",
                "entity_name": "Fausto Omar Vásquez"
            },
            {
                "answer_argument": "m.0b__gm3",
                "answer_type": "Entity",
                "entity_name": "Steve Montenegro"
            },
            {
                "answer_argument": "m.0b_qjns",
                "answer_type": "Entity",
                "entity_name": "Carlos Linares"
            },
            {
                "answer_argument": "m.0bm9y7c",
                "answer_type": "Entity",
                "entity_name": "Miguel Angel Deras"
            },
            {
                "answer_argument": "m.0cc70k9",
                "answer_type": "Entity",
                "entity_name": "Gualberto Fernández"
            },
            {
                "answer_argument": "m.0cc8gnq",
                "answer_type": "Entity",
                "entity_name": "Paula Heredia"
            },
            {
                "answer_argument": "m.0cny39v",
                "answer_type": "Entity",
                "entity_name": "Jorge Rivera"
            },
            {
                "answer_argument": "m.0dbk9r",
                "answer_type": "Entity",
                "entity_name": "Erwin McManus"
            },
            {
                "answer_argument": "m.0dd34w",
                "answer_type": "Entity",
                "entity_name": "Claudia Lars"
            },
            {
                "answer_argument": "m.0dlnrmt",
                "answer_type": "Entity",
                "entity_name": "Victor Manuel Ochoa"
            },
            {
                "answer_argument": "m.0drw_42",
                "answer_type": "Entity",
                "entity_name": "Raúl Cicero"
            },
            {
                "answer_argument": "m.0ds0ght",
                "answer_type": "Entity",
                "entity_name": "Carlos Barrios"
            },
            {
                "answer_argument": "m.0fbs00",
                "answer_type": "Entity",
                "entity_name": "José Inocencio Alas"
            },
            {
                "answer_argument": "m.0gck6d6",
                "answer_type": "Entity",
                "entity_name": "Elena Diaz"
            },
            {
                "answer_argument": "m.0glt20_",
                "answer_type": "Entity",
                "entity_name": "Patricia Chica"
            },
            {
                "answer_argument": "m.0gx_9sj",
                "answer_type": "Entity",
                "entity_name": "Bernard Lewinsky"
            },
            {
                "answer_argument": "m.0gyr_2r",
                "answer_type": "Entity",
                "entity_name": "Jaime Portillo"
            },
            {
                "answer_argument": "m.0gysvkq",
                "answer_type": "Entity",
                "entity_name": "Genaro Sermeño"
            },
            {
                "answer_argument": "m.0h1bw_6",
                "answer_type": "Entity",
                "entity_name": "Ana Maria de Martinez"
            },
            {
                "answer_argument": "m.0h1gfdk",
                "answer_type": "Entity",
                "entity_name": "Eduardo \\\"Volkswagen\\\" Hernández"
            },
            {
                "answer_argument": "m.0h2lqh",
                "answer_type": "Entity",
                "entity_name": "Arturo Rivera y Damas"
            },
            {
                "answer_argument": "m.0h3cwk",
                "answer_type": "Entity",
                "entity_name": "Enrique Álvarez Córdova"
            },
            {
                "answer_argument": "m.0h3vkz2",
                "answer_type": "Entity",
                "entity_name": "Mario Montoya"
            },
            {
                "answer_argument": "m.0h5595b",
                "answer_type": "Entity",
                "entity_name": "José Francisco Valiente"
            },
            {
                "answer_argument": "m.0h7mwf5",
                "answer_type": "Entity",
                "entity_name": "Norman Quijano"
            },
            {
                "answer_argument": "m.0h8k38b",
                "answer_type": "Entity",
                "entity_name": "Rene Moran"
            },
            {
                "answer_argument": "m.0hr5tm9",
                "answer_type": "Entity",
                "entity_name": "Jose B. Gonzalez"
            },
            {
                "answer_argument": "m.0hrgx45",
                "answer_type": "Entity",
                "entity_name": "Richard Oriani"
            },
            {
                "answer_argument": "m.0j3y75j",
                "answer_type": "Entity",
                "entity_name": "Alexander Méndoza"
            },
            {
                "answer_argument": "m.0j442fb",
                "answer_type": "Entity",
                "entity_name": "Ángel Orellana"
            },
            {
                "answer_argument": "m.0j9k7c7",
                "answer_type": "Entity",
                "entity_name": "Emilio Guardado"
            },
            {
                "answer_argument": "m.0j9nts6",
                "answer_type": "Entity",
                "entity_name": "Américo González"
            },
            {
                "answer_argument": "m.0k_fvt",
                "answer_type": "Entity",
                "entity_name": "Bobby Rivas"
            },
            {
                "answer_argument": "m.0kg2yh2",
                "answer_type": "Entity",
                "entity_name": "Óscar Antonio Ulloa"
            },
            {
                "answer_argument": "m.0kmy4yx",
                "answer_type": "Entity",
                "entity_name": "Guillermo García"
            },
            {
                "answer_argument": "m.0knmfg3",
                "answer_type": "Entity",
                "entity_name": "Selvin González"
            },
            {
                "answer_argument": "m.0knxpym",
                "answer_type": "Entity",
                "entity_name": "William López"
            },
            {
                "answer_argument": "m.0ktzqtz",
                "answer_type": "Entity",
                "entity_name": "Marlon Menjívar"
            },
            {
                "answer_argument": "m.0n484vf",
                "answer_type": "Entity",
                "entity_name": "Isaías Choto"
            },
            {
                "answer_argument": "m.0ndx3dp",
                "answer_type": "Entity",
                "entity_name": "Takeshi Fujiwara"
            },
            {
                "answer_argument": "m.0pmg_63",
                "answer_type": "Entity",
                "entity_name": "Mario Wilfredo Contreras"
            },
            {
                "answer_argument": "m.0q200b9",
                "answer_type": "Entity",
                "entity_name": "Malin Arvidsson"
            },
            {
                "answer_argument": "m.0v_3g3z",
                "answer_type": "Entity",
                "entity_name": "Robert Renderos"
            },
            {
                "answer_argument": "m.0yzmtry",
                "answer_type": "Entity",
                "entity_name": "Santiago \\\"Jimmy\\\" Mellado"
            }
        ],
        "s_expression": "(JOIN (R location.location.people_born_here) m.02k8k)",
        "s_expression_processed": "(JOIN (R location.location.people_born_here) m.02k8k)"
    },
    {
        "qid": "WebQTest-653",
        "question": "who did denise van outen married",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02_75_",
                    "class": "common.topic",
                    "friendly_name": "denise van outen",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_75_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_75_ ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "topic_entity": "m.02_75_",
        "answer": [
            {
                "answer_argument": "m.02r9lyp",
                "answer_type": "Entity",
                "entity_name": "Lee Mead"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (AND (JOIN (R people.person.spouse_s) m.02_75_) (JOIN people.marriage.type_of_union m.04ztj)))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (CONS (JOIN (R people.person.spouse_s) m.02_75_) people.marriage.type_of_union m.04ztj))"
    },
    {
        "qid": "WebQTest-662",
        "question": "what currency does the czech republic use now",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01mjq",
                    "class": "common.topic",
                    "friendly_name": "czech republic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01mjq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01mjq ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.01mjq",
        "answer": [
            {
                "answer_argument": "m.04rpc3",
                "answer_type": "Entity",
                "entity_name": "Czech koruna"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.01mjq)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.01mjq)"
    },
    {
        "qid": "WebQTest-663",
        "question": "what age did william penn get married",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.083qr",
                    "class": "common.topic",
                    "friendly_name": "william penn",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.from"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.083qr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.083qr ns:people.person.spouse_s ?y .\n?y ns:people.marriage.from ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "topic_entity": "m.083qr",
        "answer": [
            {
                "answer_argument": "1672-04-04",
                "answer_type": "Value",
                "entity_name": null
            }
        ],
        "s_expression": "(JOIN (R people.marriage.from) (AND (JOIN (R people.person.spouse_s) m.083qr) (JOIN people.marriage.type_of_union m.04ztj)))",
        "s_expression_processed": "(JOIN (R people.marriage.from) (CONS (JOIN (R people.person.spouse_s) m.083qr) people.marriage.type_of_union m.04ztj))"
    },
    {
        "qid": "WebQTest-673",
        "question": "where did robert kardashian go to college",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01x48v",
                    "class": "common.topic",
                    "friendly_name": "robert kardashian",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01x48v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01x48v ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.01x48v",
        "answer": [
            {
                "answer_argument": "m.02rky4",
                "answer_type": "Entity",
                "entity_name": "University of San Diego"
            },
            {
                "answer_argument": "m.05pyvz",
                "answer_type": "Entity",
                "entity_name": "University of San Diego School of Law"
            },
            {
                "answer_argument": "m.065y4w7",
                "answer_type": "Entity",
                "entity_name": "University of Southern California"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.01x48v)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.01x48v)))"
    },
    {
        "qid": "WebQTest-681",
        "question": "who is the president of the european union 2012",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0_6t_z8",
                    "class": "common.topic",
                    "friendly_name": "european union",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2012,
                        "government.government_position_held.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.039h0j",
                    "class": "common.topic",
                    "friendly_name": "President of the European Parliament",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.office_position_or_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_6t_z8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_6t_z8 ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.039h0j .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.0_6t_z8",
        "answer": [
            {
                "answer_argument": "m.036y38",
                "answer_type": "Entity",
                "entity_name": "Jerzy Buzek"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (AND (JOIN (R government.governmental_jurisdiction.governing_officials) m.0_6t_z8) (JOIN government.government_position_held.office_position_or_title m.039h0j)) government.government_position_held.from 2012))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (CONS (JOIN (R government.governmental_jurisdiction.governing_officials) m.0_6t_z8) government.government_position_held.office_position_or_title m.039h0j) government.government_position_held.from 2012))"
    },
    {
        "qid": "WebQTest-684",
        "question": "what sort of government does nigeria have",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05cgv",
                    "class": "common.topic",
                    "friendly_name": "nigeria",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.form_of_government"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05cgv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05cgv ns:location.country.form_of_government ?x .\n}\n",
        "topic_entity": "m.05cgv",
        "answer": [
            {
                "answer_argument": "m.01d9r3",
                "answer_type": "Entity",
                "entity_name": "Presidential system"
            },
            {
                "answer_argument": "m.0j729",
                "answer_type": "Entity",
                "entity_name": "Federal republic"
            }
        ],
        "s_expression": "(JOIN (R location.country.form_of_government) m.05cgv)",
        "s_expression_processed": "(JOIN (R location.country.form_of_government) m.05cgv)"
    },
    {
        "qid": "WebQTest-699",
        "question": "what is the capital of australia victoria state",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0chgr2",
                    "class": "common.topic",
                    "friendly_name": "victoria state",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.aareas.schema.administrative_area.capital"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0chgr2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0chgr2 ns:base.aareas.schema.administrative_area.capital ?x .\n}\n",
        "topic_entity": "m.0chgr2",
        "answer": [
            {
                "answer_argument": "m.0chgzm",
                "answer_type": "Entity",
                "entity_name": "Melbourne"
            }
        ],
        "s_expression": "(JOIN (R base.aareas.schema.administrative_area.capital) m.0chgr2)",
        "s_expression_processed": "(JOIN (R base.aareas.schema.administrative_area.capital) m.0chgr2)"
    },
    {
        "qid": "WebQTest-703",
        "question": "what currency should i take to mexico",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0b90_r",
                    "class": "common.topic",
                    "friendly_name": "mexico",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0b90_r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0b90_r ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.0b90_r",
        "answer": [
            {
                "answer_argument": "m.012ts8",
                "answer_type": "Entity",
                "entity_name": "Mexican peso"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.0b90_r)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.0b90_r)"
    },
    {
        "qid": "WebQTest-711",
        "question": "who plays chuck bass in gossip girl",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0g0jx7",
                    "class": "common.topic",
                    "friendly_name": "chuck bass",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.gossipgirl.character.played_by"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g0jx7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g0jx7 ns:base.gossipgirl.character.played_by ?x .\n}\n",
        "topic_entity": "m.0g0jx7",
        "answer": [
            {
                "answer_argument": "m.02w4x29",
                "answer_type": "Entity",
                "entity_name": "Ed Westwick"
            }
        ],
        "s_expression": "(JOIN (R base.gossipgirl.character.played_by) m.0g0jx7)",
        "s_expression_processed": "(JOIN (R base.gossipgirl.character.played_by) m.0g0jx7)"
    },
    {
        "qid": "WebQTest-712",
        "question": "what countries have territories in oceania",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.country",
                    "class": "location.country",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05nrg",
                    "class": "common.topic",
                    "friendly_name": "oceania",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.contains"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05nrg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05nrg ns:location.location.contains ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "topic_entity": "m.05nrg",
        "answer": [
            {
                "answer_argument": "m.01n8qg",
                "answer_type": "Entity",
                "entity_name": "Solomon Islands"
            },
            {
                "answer_argument": "m.020p1",
                "answer_type": "Entity",
                "entity_name": "Cook Islands"
            },
            {
                "answer_argument": "m.02lx0",
                "answer_type": "Entity",
                "entity_name": "Timor-Leste"
            },
            {
                "answer_argument": "m.02wt0",
                "answer_type": "Entity",
                "entity_name": "Fiji"
            },
            {
                "answer_argument": "m.02wzv",
                "answer_type": "Entity",
                "entity_name": "French Polynesia"
            },
            {
                "answer_argument": "m.03188",
                "answer_type": "Entity",
                "entity_name": "Federated States of Micronesia"
            },
            {
                "answer_argument": "m.034tl",
                "answer_type": "Entity",
                "entity_name": "Guam"
            },
            {
                "answer_argument": "m.03ryn",
                "answer_type": "Entity",
                "entity_name": "Indonesia"
            },
            {
                "answer_argument": "m.047t_",
                "answer_type": "Entity",
                "entity_name": "Kiribati"
            },
            {
                "answer_argument": "m.04v6v",
                "answer_type": "Entity",
                "entity_name": "Marshall Islands"
            },
            {
                "answer_argument": "m.05b2h",
                "answer_type": "Entity",
                "entity_name": "Niue"
            },
            {
                "answer_argument": "m.05br2",
                "answer_type": "Entity",
                "entity_name": "Nauru"
            },
            {
                "answer_argument": "m.05c17",
                "answer_type": "Entity",
                "entity_name": "New Caledonia"
            },
            {
                "answer_argument": "m.05cnr",
                "answer_type": "Entity",
                "entity_name": "Northern Mariana Islands"
            },
            {
                "answer_argument": "m.05cqm",
                "answer_type": "Entity",
                "entity_name": "Norfolk Island"
            },
            {
                "answer_argument": "m.05qkp",
                "answer_type": "Entity",
                "entity_name": "Papua New Guinea"
            },
            {
                "answer_argument": "m.05tr7",
                "answer_type": "Entity",
                "entity_name": "Palau"
            },
            {
                "answer_argument": "m.05vd5",
                "answer_type": "Entity",
                "entity_name": "Pitcairn Islands"
            },
            {
                "answer_argument": "m.06s9y",
                "answer_type": "Entity",
                "entity_name": "Samoa"
            },
            {
                "answer_argument": "m.07f9q",
                "answer_type": "Entity",
                "entity_name": "Tokelau"
            },
            {
                "answer_argument": "m.07fb6",
                "answer_type": "Entity",
                "entity_name": "Tonga"
            },
            {
                "answer_argument": "m.07fsv",
                "answer_type": "Entity",
                "entity_name": "Tuvalu"
            },
            {
                "answer_argument": "m.07z5n",
                "answer_type": "Entity",
                "entity_name": "Vanuatu"
            },
            {
                "answer_argument": "m.082nw",
                "answer_type": "Entity",
                "entity_name": "Wallis and Futuna"
            },
            {
                "answer_argument": "m.0chghy",
                "answer_type": "Entity",
                "entity_name": "Australia"
            },
            {
                "answer_argument": "m.0ctw_b",
                "answer_type": "Entity",
                "entity_name": "New Zealand"
            },
            {
                "answer_argument": "m.0h8d",
                "answer_type": "Entity",
                "entity_name": "American Samoa"
            }
        ],
        "s_expression": "(AND location.country (JOIN (R location.location.contains) m.05nrg))",
        "s_expression_processed": "(AND location.country (JOIN (R location.location.contains) m.05nrg))"
    },
    {
        "qid": "WebQTest-714",
        "question": "what is the political system of south africa",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0hzlz",
                    "class": "common.topic",
                    "friendly_name": "south africa",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.form_of_government"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hzlz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hzlz ns:location.country.form_of_government ?x .\n}\n",
        "topic_entity": "m.0hzlz",
        "answer": [
            {
                "answer_argument": "m.0c9rw5",
                "answer_type": "Entity",
                "entity_name": "Constitutional republic"
            },
            {
                "answer_argument": "m.0glnsx",
                "answer_type": "Entity",
                "entity_name": "Parliamentary republic"
            }
        ],
        "s_expression": "(JOIN (R location.country.form_of_government) m.0hzlz)",
        "s_expression_processed": "(JOIN (R location.country.form_of_government) m.0hzlz)"
    },
    {
        "qid": "WebQTest-717",
        "question": "what timezone is tucson arizona in right now",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0fr0t",
                    "class": "common.topic",
                    "friendly_name": "tucson arizona",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.time_zones"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fr0t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fr0t ns:location.location.time_zones ?x .\n}\n",
        "topic_entity": "m.0fr0t",
        "answer": [
            {
                "answer_argument": "m.02hczc",
                "answer_type": "Entity",
                "entity_name": "Mountain Time Zone"
            }
        ],
        "s_expression": "(JOIN (R location.location.time_zones) m.0fr0t)",
        "s_expression_processed": "(JOIN (R location.location.time_zones) m.0fr0t)"
    },
    {
        "qid": "WebQTest-721",
        "question": "what kind of leukemia did jill clayburgh have",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01gw8b",
                    "class": "common.topic",
                    "friendly_name": "jill clayburgh",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.cause_of_death"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01gw8b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01gw8b ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "topic_entity": "m.01gw8b",
        "answer": [
            {
                "answer_argument": "m.02bg7m",
                "answer_type": "Entity",
                "entity_name": "B-cell chronic lymphocytic leukemia"
            },
            {
                "answer_argument": "m.04psf",
                "answer_type": "Entity",
                "entity_name": "Leukemia"
            }
        ],
        "s_expression": "(JOIN (R people.deceased_person.cause_of_death) m.01gw8b)",
        "s_expression_processed": "(JOIN (R people.deceased_person.cause_of_death) m.01gw8b)"
    },
    {
        "qid": "WebQTest-730",
        "question": "what record label is kelly clarkson signed with",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.025ldg",
                    "class": "common.topic",
                    "friendly_name": "kelly clarkson",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.artist.label"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025ldg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025ldg ns:music.artist.label ?x .\n}\n",
        "topic_entity": "m.025ldg",
        "answer": [
            {
                "answer_argument": "m.0181dw",
                "answer_type": "Entity",
                "entity_name": "RCA Records"
            },
            {
                "answer_argument": "m.03mp8k",
                "answer_type": "Entity",
                "entity_name": "Sony BMG"
            },
            {
                "answer_argument": "m.043g7l",
                "answer_type": "Entity",
                "entity_name": "Sony Music Entertainment"
            },
            {
                "answer_argument": "m.0rpfr83",
                "answer_type": "Entity",
                "entity_name": "19 Recordings"
            }
        ],
        "s_expression": "(JOIN (R music.artist.label) m.025ldg)",
        "s_expression_processed": "(JOIN (R music.artist.label) m.025ldg)"
    },
    {
        "qid": "WebQTest-731",
        "question": "where does tim roth come from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.021yzs",
                    "class": "common.topic",
                    "friendly_name": "tim roth",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.place_of_birth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.021yzs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.021yzs ns:people.person.place_of_birth ?x .\n}\n",
        "topic_entity": "m.021yzs",
        "answer": [
            {
                "answer_argument": "m.0n9h9",
                "answer_type": "Entity",
                "entity_name": "Dulwich"
            }
        ],
        "s_expression": "(JOIN (R people.person.place_of_birth) m.021yzs)",
        "s_expression_processed": "(JOIN (R people.person.place_of_birth) m.021yzs)"
    },
    {
        "qid": "WebQTest-734",
        "question": "who did roger federer married",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01my95",
                    "class": "common.topic",
                    "friendly_name": "roger federer",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01my95)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01my95 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "topic_entity": "m.01my95",
        "answer": [
            {
                "answer_argument": "m.07w9t_",
                "answer_type": "Entity",
                "entity_name": "Mirka Federer"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (AND (JOIN (R people.person.spouse_s) m.01my95) (JOIN people.marriage.type_of_union m.04ztj)))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (CONS (JOIN (R people.person.spouse_s) m.01my95) people.marriage.type_of_union m.04ztj))"
    },
    {
        "qid": "WebQTest-735",
        "question": "what kind of money do i need in costa rica",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01p8s",
                    "class": "common.topic",
                    "friendly_name": "costa rica",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01p8s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01p8s ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.01p8s",
        "answer": [
            {
                "answer_argument": "m.04wccn",
                "answer_type": "Entity",
                "entity_name": "Costa Rican colón"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.01p8s)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.01p8s)"
    },
    {
        "qid": "WebQTest-741",
        "question": "who plays caesar flickerman in the hunger games",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0gkz15s",
                    "class": "common.topic",
                    "friendly_name": "hunger games",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0gwc3bn",
                    "class": "common.topic",
                    "friendly_name": "Caesar Flickerman",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film.starring"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.character"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0gkz15s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0gkz15s ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0gwc3bn .\n}\n",
        "topic_entity": "m.0gkz15s",
        "answer": [
            {
                "answer_argument": "m.02bj6k",
                "answer_type": "Entity",
                "entity_name": "Stanley Tucci"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.0gkz15s) (JOIN film.performance.character m.0gwc3bn)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.0gkz15s) (JOIN film.performance.character m.0gwc3bn)))"
    },
    {
        "qid": "WebQTest-744",
        "question": "who was tupac signed to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07pzc",
                    "class": "common.topic",
                    "friendly_name": "tupac",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.artist.label"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07pzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07pzc ns:music.artist.label ?x .\n}\n",
        "topic_entity": "m.07pzc",
        "answer": [
            {
                "answer_argument": "m.01n2m6",
                "answer_type": "Entity",
                "entity_name": "Death Row Records"
            },
            {
                "answer_argument": "m.01trtc",
                "answer_type": "Entity",
                "entity_name": "Interscope Records"
            },
            {
                "answer_argument": "m.076702",
                "answer_type": "Entity",
                "entity_name": "Amaru Entertainment"
            }
        ],
        "s_expression": "(JOIN (R music.artist.label) m.07pzc)",
        "s_expression_processed": "(JOIN (R music.artist.label) m.07pzc)"
    },
    {
        "qid": "WebQTest-747",
        "question": "what language does colombia",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01ls2",
                    "class": "common.topic",
                    "friendly_name": "colombia",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.languages_spoken"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ls2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ls2 ns:location.country.languages_spoken ?x .\n}\n",
        "topic_entity": "m.01ls2",
        "answer": [
            {
                "answer_argument": "g.1q6h_1_4j",
                "answer_type": "Entity",
                "entity_name": "Piratapuyo Language"
            },
            {
                "answer_argument": "m.01yppj",
                "answer_type": "Entity",
                "entity_name": "Cocama language"
            },
            {
                "answer_argument": "m.025syhx",
                "answer_type": "Entity",
                "entity_name": "Bora Language"
            },
            {
                "answer_argument": "m.026wqvr",
                "answer_type": "Entity",
                "entity_name": "Wayuu Language"
            },
            {
                "answer_argument": "m.02hw_7r",
                "answer_type": "Entity",
                "entity_name": "Malayo Language"
            },
            {
                "answer_argument": "m.02hwglw",
                "answer_type": "Entity",
                "entity_name": "Quechua, Napo Lowland Language"
            },
            {
                "answer_argument": "m.02hwgnw",
                "answer_type": "Entity",
                "entity_name": "Curripaco Language"
            },
            {
                "answer_argument": "m.02hwgxh",
                "answer_type": "Entity",
                "entity_name": "Hupdë Language"
            },
            {
                "answer_argument": "m.02hwh2x",
                "answer_type": "Entity",
                "entity_name": "Baudo language"
            },
            {
                "answer_argument": "m.02hwl4_",
                "answer_type": "Entity",
                "entity_name": "Siona Language"
            },
            {
                "answer_argument": "m.02hwl46",
                "answer_type": "Entity",
                "entity_name": "Cabiyarí Language"
            },
            {
                "answer_argument": "m.02hwmth",
                "answer_type": "Entity",
                "entity_name": "Nukak language"
            },
            {
                "answer_argument": "m.02hwnpn",
                "answer_type": "Entity",
                "entity_name": "Barí Language"
            },
            {
                "answer_argument": "m.02hwnwm",
                "answer_type": "Entity",
                "entity_name": "Tama Language"
            },
            {
                "answer_argument": "m.02hwpxb",
                "answer_type": "Entity",
                "entity_name": "Awa-Cuaiquer Language"
            },
            {
                "answer_argument": "m.02hwqkg",
                "answer_type": "Entity",
                "entity_name": "Guanano Language"
            },
            {
                "answer_argument": "m.02hwqrn",
                "answer_type": "Entity",
                "entity_name": "Tanimuca-Retuarã Language"
            },
            {
                "answer_argument": "m.02hwqww",
                "answer_type": "Entity",
                "entity_name": "Cagua Language"
            },
            {
                "answer_argument": "m.02hwr84",
                "answer_type": "Entity",
                "entity_name": "Runa Language"
            },
            {
                "answer_argument": "m.02hwrvb",
                "answer_type": "Entity",
                "entity_name": "Coyaima Language"
            },
            {
                "answer_argument": "m.02hwt3q",
                "answer_type": "Entity",
                "entity_name": "Ponares Language"
            },
            {
                "answer_argument": "m.02hwv5q",
                "answer_type": "Entity",
                "entity_name": "Macaguaje Language"
            },
            {
                "answer_argument": "m.02hwv8r",
                "answer_type": "Entity",
                "entity_name": "Inga, Jungle Language"
            },
            {
                "answer_argument": "m.02hwvm1",
                "answer_type": "Entity",
                "entity_name": "Coxima Language"
            },
            {
                "answer_argument": "m.02hww1x",
                "answer_type": "Entity",
                "entity_name": "Tomedes Language"
            },
            {
                "answer_argument": "m.02hwwlp",
                "answer_type": "Entity",
                "entity_name": "Natagaimas Language"
            },
            {
                "answer_argument": "m.02hwwxk",
                "answer_type": "Entity",
                "entity_name": "Cumeral Language"
            },
            {
                "answer_argument": "m.02hwxg4",
                "answer_type": "Entity",
                "entity_name": "Carijona Language"
            },
            {
                "answer_argument": "m.02hwxgh",
                "answer_type": "Entity",
                "entity_name": "Tunebo, Barro Negro Language"
            },
            {
                "answer_argument": "m.02hwyr3",
                "answer_type": "Entity",
                "entity_name": "Siriano Language"
            },
            {
                "answer_argument": "m.02hwzdd",
                "answer_type": "Entity",
                "entity_name": "Muinane Language"
            },
            {
                "answer_argument": "m.02hwzgg",
                "answer_type": "Entity",
                "entity_name": "Macaguán Language"
            },
            {
                "answer_argument": "m.02hwzld",
                "answer_type": "Entity",
                "entity_name": "Pijao Language"
            },
            {
                "answer_argument": "m.02hx_dp",
                "answer_type": "Entity",
                "entity_name": "Puinave Language"
            },
            {
                "answer_argument": "m.02hx0bf",
                "answer_type": "Entity",
                "entity_name": "Cubeo Language"
            },
            {
                "answer_argument": "m.02hx2q2",
                "answer_type": "Entity",
                "entity_name": "Desano Language"
            },
            {
                "answer_argument": "m.02hx2tn",
                "answer_type": "Entity",
                "entity_name": "Tunebo, Central Language"
            },
            {
                "answer_argument": "m.02hx5w4",
                "answer_type": "Entity",
                "entity_name": "Guayabero Language"
            },
            {
                "answer_argument": "m.02hx8nb",
                "answer_type": "Entity",
                "entity_name": "Arhuaco Language"
            },
            {
                "answer_argument": "m.02hxb1x",
                "answer_type": "Entity",
                "entity_name": "Tunebo, Western Language"
            },
            {
                "answer_argument": "m.02hxb4m",
                "answer_type": "Entity",
                "entity_name": "Totoro Language"
            },
            {
                "answer_argument": "m.02hxb6s",
                "answer_type": "Entity",
                "entity_name": "Palenquero Language"
            },
            {
                "answer_argument": "m.02hxdd2",
                "answer_type": "Entity",
                "entity_name": "Kogi Language"
            },
            {
                "answer_argument": "m.02hxdfd",
                "answer_type": "Entity",
                "entity_name": "Barasana Language"
            },
            {
                "answer_argument": "m.02hxds7",
                "answer_type": "Entity",
                "entity_name": "Yukpa Language"
            },
            {
                "answer_argument": "m.02hxf1r",
                "answer_type": "Entity",
                "entity_name": "Waimajã Language"
            },
            {
                "answer_argument": "m.02hxfkq",
                "answer_type": "Entity",
                "entity_name": "Colombian Sign Language"
            },
            {
                "answer_argument": "m.02hxh5f",
                "answer_type": "Entity",
                "entity_name": "Guambiano Language"
            },
            {
                "answer_argument": "m.02hxhrz",
                "answer_type": "Entity",
                "entity_name": "Minica Huitoto"
            },
            {
                "answer_argument": "m.02hxj6x",
                "answer_type": "Entity",
                "entity_name": "Piaroa Language"
            },
            {
                "answer_argument": "m.02hxksk",
                "answer_type": "Entity",
                "entity_name": "Emberá, Northern Language"
            },
            {
                "answer_argument": "m.02hxl2t",
                "answer_type": "Entity",
                "entity_name": "Ocaina Language"
            },
            {
                "answer_argument": "m.02hxlpz",
                "answer_type": "Entity",
                "entity_name": "Anserma Language"
            },
            {
                "answer_argument": "m.02hxnf6",
                "answer_type": "Entity",
                "entity_name": "Carabayo Language"
            },
            {
                "answer_argument": "m.02hxp1v",
                "answer_type": "Entity",
                "entity_name": "Macuna Language"
            },
            {
                "answer_argument": "m.02hxs7q",
                "answer_type": "Entity",
                "entity_name": "Omejes Language"
            },
            {
                "answer_argument": "m.02hxs9_",
                "answer_type": "Entity",
                "entity_name": "Andoque Language"
            },
            {
                "answer_argument": "m.02hxssc",
                "answer_type": "Entity",
                "entity_name": "Chipiajes Language"
            },
            {
                "answer_argument": "m.02hxswb",
                "answer_type": "Entity",
                "entity_name": "Inga Language"
            },
            {
                "answer_argument": "m.02hxsy4",
                "answer_type": "Entity",
                "entity_name": "Piapoco Language"
            },
            {
                "answer_argument": "m.02hxsz8",
                "answer_type": "Entity",
                "entity_name": "Tunebo, Angosturas Language"
            },
            {
                "answer_argument": "m.02hxtwj",
                "answer_type": "Entity",
                "entity_name": "Catio language"
            },
            {
                "answer_argument": "m.02hxv46",
                "answer_type": "Entity",
                "entity_name": "Koreguaje Language"
            },
            {
                "answer_argument": "m.02hxvjw",
                "answer_type": "Entity",
                "entity_name": "Kuna, Border Language"
            },
            {
                "answer_argument": "m.02hxxcv",
                "answer_type": "Entity",
                "entity_name": "Andaqui Language"
            },
            {
                "answer_argument": "m.02hxy04",
                "answer_type": "Entity",
                "entity_name": "Sáliba Language"
            },
            {
                "answer_argument": "m.02hxy6v",
                "answer_type": "Entity",
                "entity_name": "Camsá Language"
            },
            {
                "answer_argument": "m.02hxz2z",
                "answer_type": "Entity",
                "entity_name": "Murui Huitoto language"
            },
            {
                "answer_argument": "m.02hxzv2",
                "answer_type": "Entity",
                "entity_name": "Yucuna Language"
            },
            {
                "answer_argument": "m.02ppbb5",
                "answer_type": "Entity",
                "entity_name": "Guahibo language"
            },
            {
                "answer_argument": "m.02ppbg9",
                "answer_type": "Entity",
                "entity_name": "Cuiba language"
            },
            {
                "answer_argument": "m.02ppbnh",
                "answer_type": "Entity",
                "entity_name": "Playero language"
            },
            {
                "answer_argument": "m.02pq8qn",
                "answer_type": "Entity",
                "entity_name": "Uwa language"
            },
            {
                "answer_argument": "m.03h0wpt",
                "answer_type": "Entity",
                "entity_name": "Achawa language"
            },
            {
                "answer_argument": "m.03w6b4",
                "answer_type": "Entity",
                "entity_name": "Ticuna language"
            },
            {
                "answer_argument": "m.05tnswp",
                "answer_type": "Entity",
                "entity_name": "Islander Creole English"
            },
            {
                "answer_argument": "m.06gdhz",
                "answer_type": "Entity",
                "entity_name": "Nheengatu language"
            },
            {
                "answer_argument": "m.06nm1",
                "answer_type": "Entity",
                "entity_name": "Spanish Language"
            },
            {
                "answer_argument": "m.07k4r10",
                "answer_type": "Entity",
                "entity_name": "Tinigua language"
            },
            {
                "answer_argument": "m.085vdy",
                "answer_type": "Entity",
                "entity_name": "Providencia Sign Language"
            },
            {
                "answer_argument": "m.08w0ky",
                "answer_type": "Entity",
                "entity_name": "Romani, Vlax Language"
            },
            {
                "answer_argument": "m.09gpqdh",
                "answer_type": "Entity",
                "entity_name": "Tuyuca language"
            },
            {
                "answer_argument": "m.09k4cp",
                "answer_type": "Entity",
                "entity_name": "Tucano Language"
            },
            {
                "answer_argument": "m.0b7mcv",
                "answer_type": "Entity",
                "entity_name": "Páez language"
            },
            {
                "answer_argument": "m.0bm08x",
                "answer_type": "Entity",
                "entity_name": "Cofán Language"
            },
            {
                "answer_argument": "m.0km3ztb",
                "answer_type": "Entity",
                "entity_name": "Nonuya language"
            }
        ],
        "s_expression": "(JOIN (R location.country.languages_spoken) m.01ls2)",
        "s_expression_processed": "(JOIN (R location.country.languages_spoken) m.01ls2)"
    },
    {
        "qid": "WebQTest-751",
        "question": "who owns google 2012",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.045c7b",
                    "class": "common.topic",
                    "friendly_name": "google",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2012,
                        "organization.leadership.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "organization.organization.leadership"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.leadership.person"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.045c7b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.045c7b ns:organization.organization.leadership ?y .\n?y ns:organization.leadership.person ?x .\nFILTER(NOT EXISTS {?y ns:organization.leadership.from ?sk0} || \nEXISTS {?y ns:organization.leadership.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:organization.leadership.to ?sk2} || \nEXISTS {?y ns:organization.leadership.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.045c7b",
        "answer": [
            {
                "answer_argument": "m.025v9nm",
                "answer_type": "Entity",
                "entity_name": "Vic Gundotra"
            },
            {
                "answer_argument": "m.04q1q10",
                "answer_type": "Entity",
                "entity_name": "Patrick Pichette"
            },
            {
                "answer_argument": "m.05687l1",
                "answer_type": "Entity",
                "entity_name": "Nikesh Arora"
            },
            {
                "answer_argument": "m.09v3lbs",
                "answer_type": "Entity",
                "entity_name": "David Drummond"
            },
            {
                "answer_argument": "m.0gjpq",
                "answer_type": "Entity",
                "entity_name": "Larry Page"
            }
        ],
        "s_expression": "(JOIN (R organization.leadership.person) (TC (JOIN (R organization.organization.leadership) m.045c7b) organization.leadership.from 2012))",
        "s_expression_processed": "(JOIN (R organization.leadership.person) (TC (JOIN (R organization.organization.leadership) m.045c7b) organization.leadership.from 2012))"
    },
    {
        "qid": "WebQTest-757",
        "question": "who is angelina jolie mom and dad",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0f4vbz",
                    "class": "common.topic",
                    "friendly_name": "angelina jolie",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.parents"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f4vbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f4vbz ns:people.person.parents ?x .\n}\n",
        "topic_entity": "m.0f4vbz",
        "answer": [
            {
                "answer_argument": "m.01mqgf",
                "answer_type": "Entity",
                "entity_name": "Marcheline Bertrand"
            },
            {
                "answer_argument": "m.046qq",
                "answer_type": "Entity",
                "entity_name": "Jon Voight"
            }
        ],
        "s_expression": "(JOIN (R people.person.parents) m.0f4vbz)",
        "s_expression_processed": "(JOIN (R people.person.parents) m.0f4vbz)"
    },
    {
        "qid": "WebQTest-759",
        "question": "who brad pitt has dated",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c6qh",
                    "class": "common.topic",
                    "friendly_name": "brad pitt",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02_7k44",
                    "class": "common.topic",
                    "friendly_name": "Dated",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "celebrities.celebrity.sexual_relationships"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "celebrities.romantic_relationship.celebrity"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "celebrities.romantic_relationship.relationship_type"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c6qh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c6qh ns:celebrities.celebrity.sexual_relationships ?y .\n?y ns:celebrities.romantic_relationship.celebrity ?x .\n?y ns:celebrities.romantic_relationship.relationship_type ns:m.02_7k44 .\n}\n",
        "topic_entity": "m.0c6qh",
        "answer": [
            {
                "answer_argument": "m.02cpb7",
                "answer_type": "Entity",
                "entity_name": "Thandie Newton"
            },
            {
                "answer_argument": "m.02g0mx",
                "answer_type": "Entity",
                "entity_name": "Juliette Lewis"
            },
            {
                "answer_argument": "m.04j9sl",
                "answer_type": "Entity",
                "entity_name": "Sinitta"
            },
            {
                "answer_argument": "m.0bblqk",
                "answer_type": "Entity",
                "entity_name": "Shalane McCall"
            },
            {
                "answer_argument": "m.0hjxj",
                "answer_type": "Entity",
                "entity_name": "Robin Givens"
            }
        ],
        "s_expression": "(JOIN (R celebrities.romantic_relationship.celebrity) (AND (JOIN (R celebrities.celebrity.sexual_relationships) m.0c6qh) (JOIN celebrities.romantic_relationship.relationship_type m.02_7k44)))",
        "s_expression_processed": "(JOIN (R celebrities.romantic_relationship.celebrity) (CONS (JOIN (R celebrities.celebrity.sexual_relationships) m.0c6qh) celebrities.romantic_relationship.relationship_type m.02_7k44))"
    },
    {
        "qid": "WebQTest-765",
        "question": "what celebrities has brody jenner dated",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.026_dq6",
                    "class": "common.topic",
                    "friendly_name": "brody jenner",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.popstra.celebrity.dated"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.popstra.dated.participant"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.026_dq6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.026_dq6 ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
        "topic_entity": "m.026_dq6",
        "answer": [
            {
                "answer_argument": "m.014v6x",
                "answer_type": "Entity",
                "entity_name": "Haylie Duff"
            },
            {
                "answer_argument": "m.0227vl",
                "answer_type": "Entity",
                "entity_name": "Paris Hilton"
            },
            {
                "answer_argument": "m.04nvm8f",
                "answer_type": "Entity",
                "entity_name": "Ryan J. Parker"
            },
            {
                "answer_argument": "m.08wv1j",
                "answer_type": "Entity",
                "entity_name": "Kristin Cavallari"
            },
            {
                "answer_argument": "m.0dq9wx",
                "answer_type": "Entity",
                "entity_name": "Lauren Conrad"
            },
            {
                "answer_argument": "m.0hhr1fv",
                "answer_type": "Entity",
                "entity_name": "Cora Skinner"
            }
        ],
        "s_expression": "(JOIN (R base.popstra.dated.participant) (JOIN (R base.popstra.celebrity.dated) m.026_dq6))",
        "s_expression_processed": "(JOIN (R base.popstra.dated.participant) (JOIN (R base.popstra.celebrity.dated) m.026_dq6))"
    },
    {
        "qid": "WebQTest-768",
        "question": "who owns volkswagen car company",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07ywl",
                    "class": "common.topic",
                    "friendly_name": "volkswagen",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "organization.organization.parent"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.organization_relationship.parent"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ywl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ywl ns:organization.organization.parent ?y .\n?y ns:organization.organization_relationship.parent ?x .\n}\n",
        "topic_entity": "m.07ywl",
        "answer": [
            {
                "answer_argument": "m.07_zt",
                "answer_type": "Entity",
                "entity_name": "Volkswagen Group"
            }
        ],
        "s_expression": "(JOIN (R organization.organization_relationship.parent) (JOIN (R organization.organization.parent) m.07ywl))",
        "s_expression_processed": "(JOIN (R organization.organization_relationship.parent) (JOIN (R organization.organization.parent) m.07ywl))"
    },
    {
        "qid": "WebQTest-769",
        "question": "which is the main train station in rome",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06c62",
                    "class": "common.topic",
                    "friendly_name": "rome",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07jdr",
                    "class": "common.topic",
                    "friendly_name": "Train",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "travel.travel_destination.how_to_get_here"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "travel.transportation.transport_terminus"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "travel.transportation.mode_of_transportation"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06c62)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06c62 ns:travel.travel_destination.how_to_get_here ?y .\n?y ns:travel.transportation.transport_terminus ?x .\n?y ns:travel.transportation.mode_of_transportation ns:m.07jdr .\n}\n",
        "topic_entity": "m.06c62",
        "answer": [
            {
                "answer_argument": "m.02683tb",
                "answer_type": "Entity",
                "entity_name": "Roma Termini railway station"
            }
        ],
        "s_expression": "(JOIN (R travel.transportation.transport_terminus) (AND (JOIN (R travel.travel_destination.how_to_get_here) m.06c62) (JOIN travel.transportation.mode_of_transportation m.07jdr)))",
        "s_expression_processed": "(JOIN (R travel.transportation.transport_terminus) (AND (JOIN (R travel.travel_destination.how_to_get_here) m.06c62) (JOIN travel.transportation.mode_of_transportation m.07jdr)))"
    },
    {
        "qid": "WebQTest-773",
        "question": "where is the sony ericsson company",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01spxd",
                    "class": "common.topic",
                    "friendly_name": "sony",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "organization.organization.headquarters"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.mailing_address.citytown"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01spxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01spxd ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "topic_entity": "m.01spxd",
        "answer": [
            {
                "answer_argument": "m.024bqj",
                "answer_type": "Entity",
                "entity_name": "Minato"
            }
        ],
        "s_expression": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.01spxd))",
        "s_expression_processed": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.01spxd))"
    },
    {
        "qid": "WebQTest-779",
        "question": "where does carlos santana live",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01304j",
                    "class": "common.topic",
                    "friendly_name": "carlos santana",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.places_lived"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.place_lived.location"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01304j)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01304j ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "topic_entity": "m.01304j",
        "answer": [
            {
                "answer_argument": "m.01btyw",
                "answer_type": "Entity",
                "entity_name": "Jalisco"
            },
            {
                "answer_argument": "m.0d6lp",
                "answer_type": "Entity",
                "entity_name": "San Francisco"
            },
            {
                "answer_argument": "m.0pswc",
                "answer_type": "Entity",
                "entity_name": "Tijuana"
            }
        ],
        "s_expression": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.01304j))",
        "s_expression_processed": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.01304j))"
    },
    {
        "qid": "WebQTest-785",
        "question": "who does michael keaton play in cars",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01j5ws",
                    "class": "common.topic",
                    "friendly_name": "michael keaton",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.03q0r1",
                    "class": "common.topic",
                    "friendly_name": "Cars",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01j5ws)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01j5ws ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.03q0r1 .\n}\n",
        "topic_entity": "m.01j5ws",
        "answer": [
            {
                "answer_argument": "m.0dtcs2",
                "answer_type": "Entity",
                "entity_name": "Chick Hicks"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.01j5ws) (JOIN film.performance.film m.03q0r1)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.01j5ws) (JOIN film.performance.film m.03q0r1)))"
    },
    {
        "qid": "WebQTest-800",
        "question": "what war did the us lose the most soldiers",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "common.topic",
                    "friendly_name": "us",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "military.military_combatant.casualties"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "military.casualties.military_conflict"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "military.casualties.lower_estimate"
                }
            ]
        },
        "function": "argmax",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:military.military_combatant.casualties ?y .\n?y ns:military.casualties.military_conflict ?x .\n?y ns:military.casualties.lower_estimate ?sk0 .\n}\nORDER BY DESC(xsd:float(?sk0))\nLIMIT 1\n",
        "topic_entity": "m.09c7w0",
        "answer": [
            {
                "answer_argument": "m.081pw",
                "answer_type": "Entity",
                "entity_name": "World War II"
            }
        ],
        "s_expression": "(ARGMAX (JOIN (R military.casualties.military_conflict) (JOIN (R military.military_combatant.casualties) m.09c7w0)) (JOIN (R military.casualties.military_conflict) military.casualties.lower_estimate))",
        "s_expression_processed": "(ARGMAX (JOIN (R military.casualties.military_conflict) (JOIN (R military.military_combatant.casualties) m.09c7w0)) (JOIN (R military.casualties.military_conflict) military.casualties.lower_estimate))"
    },
    {
        "qid": "WebQTest-819",
        "question": "where was bin laden found and killed",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05mg9",
                    "class": "common.topic",
                    "friendly_name": "bin laden",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.place_of_death"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mg9 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "topic_entity": "m.05mg9",
        "answer": [
            {
                "answer_argument": "m.011hs1",
                "answer_type": "Entity",
                "entity_name": "Abbottabad"
            }
        ],
        "s_expression": "(JOIN (R people.deceased_person.place_of_death) m.05mg9)",
        "s_expression_processed": "(JOIN (R people.deceased_person.place_of_death) m.05mg9)"
    },
    {
        "qid": "WebQTest-820",
        "question": "what are the names of harry potter movies in order",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02676m4",
                    "class": "common.topic",
                    "friendly_name": "harry potter movies",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.film_series.films_in_series"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02676m4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02676m4 ns:film.film_series.films_in_series ?x .\n}\n",
        "topic_entity": "m.02676m4",
        "answer": [
            {
                "answer_argument": "m.02pth35",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Deathly Hallows - Part I"
            },
            {
                "answer_argument": "m.03176f",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Philosopher's Stone"
            },
            {
                "answer_argument": "m.031778",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Chamber of Secrets"
            },
            {
                "answer_argument": "m.03177r",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Prisoner of Azkaban"
            },
            {
                "answer_argument": "m.031786",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Goblet of Fire"
            },
            {
                "answer_argument": "m.031hcx",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Order of the Phoenix"
            },
            {
                "answer_argument": "m.03hxsv",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Half-Blood Prince"
            },
            {
                "answer_argument": "m.0gvsynb",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Deathly Hallows – Part 2"
            }
        ],
        "s_expression": "(JOIN (R film.film_series.films_in_series) m.02676m4)",
        "s_expression_processed": "(JOIN (R film.film_series.films_in_series) m.02676m4)"
    },
    {
        "qid": "WebQTest-825",
        "question": "who does nolan ryan play for",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0hctb",
                    "class": "common.topic",
                    "friendly_name": "nolan ryan",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "sports.sports_team_roster.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hctb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hctb ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.0hctb",
        "answer": [
            {
                "answer_argument": "m.03m1n",
                "answer_type": "Entity",
                "entity_name": "Houston Astros"
            },
            {
                "answer_argument": "m.05kmnv1",
                "answer_type": "Entity",
                "entity_name": "California Angels"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.0hctb) sports.sports_team_roster.from NOW))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.0hctb) sports.sports_team_roster.from NOW))"
    },
    {
        "qid": "WebQTest-843",
        "question": "where did theodor schwann study",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.040000",
                    "class": "common.topic",
                    "friendly_name": "theodor schwann",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.040000)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.040000 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.040000",
        "answer": [
            {
                "answer_argument": "m.01stzp",
                "answer_type": "Entity",
                "entity_name": "Humboldt University of Berlin"
            },
            {
                "answer_argument": "m.03563j",
                "answer_type": "Entity",
                "entity_name": "University of Würzburg"
            },
            {
                "answer_argument": "m.0m7yh",
                "answer_type": "Entity",
                "entity_name": "University of Bonn"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.040000))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.040000))"
    },
    {
        "qid": "WebQTest-847",
        "question": "what countries are members of the security council",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07vnr",
                    "class": "common.topic",
                    "friendly_name": "security council",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "base.unitednations.united_nations_body_membership.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.unitednations.united_nations_body.members"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.unitednations.united_nations_body_membership.member"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07vnr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07vnr ns:base.unitednations.united_nations_body.members ?y .\n?y ns:base.unitednations.united_nations_body_membership.member ?x .\nFILTER(NOT EXISTS {?y ns:base.unitednations.united_nations_body_membership.from ?sk0} || \nEXISTS {?y ns:base.unitednations.united_nations_body_membership.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:base.unitednations.united_nations_body_membership.to ?sk2} || \nEXISTS {?y ns:base.unitednations.united_nations_body_membership.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.07vnr",
        "answer": [
            {
                "answer_argument": "m.01699",
                "answer_type": "Entity",
                "entity_name": "Burkina Faso"
            },
            {
                "answer_argument": "m.01crd5",
                "answer_type": "Entity",
                "entity_name": "Vietnam"
            },
            {
                "answer_argument": "m.01p8s",
                "answer_type": "Entity",
                "entity_name": "Costa Rica"
            },
            {
                "answer_argument": "m.01pj7",
                "answer_type": "Entity",
                "entity_name": "Croatia"
            },
            {
                "answer_argument": "m.06bnz",
                "answer_type": "Entity",
                "entity_name": "Russia"
            },
            {
                "answer_argument": "m.07ssc",
                "answer_type": "Entity",
                "entity_name": "United Kingdom"
            },
            {
                "answer_argument": "m.09c7w0",
                "answer_type": "Entity",
                "entity_name": "United States of America"
            },
            {
                "answer_argument": "m.0d05w3",
                "answer_type": "Entity",
                "entity_name": "China"
            },
            {
                "answer_argument": "m.0f8l9c",
                "answer_type": "Entity",
                "entity_name": "France"
            }
        ],
        "s_expression": "(JOIN (R base.unitednations.united_nations_body_membership.member) (TC (JOIN (R base.unitednations.united_nations_body.members) m.07vnr) base.unitednations.united_nations_body_membership.from NOW))",
        "s_expression_processed": "(JOIN (R base.unitednations.united_nations_body_membership.member) (TC (JOIN (R base.unitednations.united_nations_body.members) m.07vnr) base.unitednations.united_nations_body_membership.from NOW))"
    },
    {
        "qid": "WebQTest-850",
        "question": "what did vera ellen die from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.022sm6",
                    "class": "common.topic",
                    "friendly_name": "vera ellen",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.cause_of_death"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.022sm6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.022sm6 ns:people.deceased_person.cause_of_death ?x .\n}\n",
        "topic_entity": "m.022sm6",
        "answer": [
            {
                "answer_argument": "m.0qcr0",
                "answer_type": "Entity",
                "entity_name": "Cancer"
            }
        ],
        "s_expression": "(JOIN (R people.deceased_person.cause_of_death) m.022sm6)",
        "s_expression_processed": "(JOIN (R people.deceased_person.cause_of_death) m.022sm6)"
    },
    {
        "qid": "WebQTest-856",
        "question": "what types of art did andy warhol do",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0kc6",
                    "class": "common.topic",
                    "friendly_name": "andy warhol",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "visual_art.visual_artist.associated_periods_or_movements"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0kc6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0kc6 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "topic_entity": "m.0kc6",
        "answer": [
            {
                "answer_argument": "m.015r61",
                "answer_type": "Entity",
                "entity_name": "Modern art"
            },
            {
                "answer_argument": "m.0q4mn",
                "answer_type": "Entity",
                "entity_name": "Pop art"
            }
        ],
        "s_expression": "(JOIN (R visual_art.visual_artist.associated_periods_or_movements) m.0kc6)",
        "s_expression_processed": "(JOIN (R visual_art.visual_artist.associated_periods_or_movements) m.0kc6)"
    },
    {
        "qid": "WebQTest-867",
        "question": "what else has jennifer lawrence played in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02x0dzw",
                    "class": "common.topic",
                    "friendly_name": "jennifer lawrence",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02x0dzw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02x0dzw ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.02x0dzw",
        "answer": [
            {
                "answer_argument": "m.0_4654w",
                "answer_type": "Entity",
                "entity_name": "X-Men: Apocalypse"
            },
            {
                "answer_argument": "m.010sqq_d",
                "answer_type": "Entity",
                "entity_name": "Joy"
            },
            {
                "answer_argument": "m.02vm7h8",
                "answer_type": "Entity",
                "entity_name": "Not Another High School Show"
            },
            {
                "answer_argument": "m.03cqk46",
                "answer_type": "Entity",
                "entity_name": "The Burning Plain"
            },
            {
                "answer_argument": "m.03grp5m",
                "answer_type": "Entity",
                "entity_name": "Garden Party"
            },
            {
                "answer_argument": "m.07cgsg_",
                "answer_type": "Entity",
                "entity_name": "Company Town"
            },
            {
                "answer_argument": "m.093dqjy",
                "answer_type": "Entity",
                "entity_name": "Winter’s Bone"
            },
            {
                "answer_argument": "m.09v71cj",
                "answer_type": "Entity",
                "entity_name": "The Beaver"
            },
            {
                "answer_argument": "m.0bg9xm6",
                "answer_type": "Entity",
                "entity_name": "The Poker House"
            },
            {
                "answer_argument": "m.0cd2vh9",
                "answer_type": "Entity",
                "entity_name": "X-Men: First Class"
            },
            {
                "answer_argument": "m.0fpmrlv",
                "answer_type": "Entity",
                "entity_name": "Like Crazy"
            },
            {
                "answer_argument": "m.0gkz15s",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games"
            },
            {
                "answer_argument": "m.0gydg4g",
                "answer_type": "Entity",
                "entity_name": "House at the End of the Street"
            },
            {
                "answer_argument": "m.0gyn8bv",
                "answer_type": "Entity",
                "entity_name": "Devil You Know"
            },
            {
                "answer_argument": "m.0h95927",
                "answer_type": "Entity",
                "entity_name": "Silver Linings Playbook"
            },
            {
                "answer_argument": "m.0n40qmp",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games: Catching Fire"
            },
            {
                "answer_argument": "m.0ngvsvk",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games: Mockingjay, Part 1"
            },
            {
                "answer_argument": "m.0ngvtb_",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games: Mockingjay, Part 2"
            },
            {
                "answer_argument": "m.0r3r5jz",
                "answer_type": "Entity",
                "entity_name": "X-Men: Days of Future Past"
            },
            {
                "answer_argument": "m.0r8p2ll",
                "answer_type": "Entity",
                "entity_name": "Serena"
            },
            {
                "answer_argument": "m.0ryt9m1",
                "answer_type": "Entity",
                "entity_name": "American Hustle"
            },
            {
                "answer_argument": "m.0y4y7jj",
                "answer_type": "Entity",
                "entity_name": "East of Eden"
            },
            {
                "answer_argument": "m.0yvlk0t",
                "answer_type": "Entity",
                "entity_name": "Burial Rites"
            },
            {
                "answer_argument": "m.0yvm5dh",
                "answer_type": "Entity",
                "entity_name": "The Glass Castle"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.02x0dzw))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.02x0dzw))"
    },
    {
        "qid": "WebQTest-868",
        "question": "who is the governor of pennsylvania state now",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05tbn",
                    "class": "common.topic",
                    "friendly_name": "pennsylvania",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "government.government_position_held.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0fkvn",
                    "class": "common.topic",
                    "friendly_name": "Governor",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.basic_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tbn ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.05tbn",
        "answer": [
            {
                "answer_argument": "m.0gx9n2",
                "answer_type": "Entity",
                "entity_name": "Tom Corbett"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (AND (JOIN (R government.governmental_jurisdiction.governing_officials) m.05tbn) (JOIN government.government_position_held.basic_title m.0fkvn)) government.government_position_held.from NOW))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (CONS (JOIN (R government.governmental_jurisdiction.governing_officials) m.05tbn) government.government_position_held.basic_title m.0fkvn) government.government_position_held.from NOW))"
    },
    {
        "qid": "WebQTest-887",
        "question": "what high school did maya angelou go to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01q9b9",
                    "class": "common.topic",
                    "friendly_name": "maya angelou",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0bpgx",
                    "class": "common.topic",
                    "friendly_name": "High school",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "education.education.degree"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01q9b9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01q9b9 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.0bpgx .\n}\n",
        "topic_entity": "m.01q9b9",
        "answer": [
            {
                "answer_argument": "m.07kldk",
                "answer_type": "Entity",
                "entity_name": "George Washington High School"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (AND (JOIN (R people.person.education) m.01q9b9) (JOIN education.education.degree m.0bpgx)))",
        "s_expression_processed": "(JOIN (R education.education.institution) (CONS (JOIN (R people.person.education) m.01q9b9) education.education.degree m.0bpgx))"
    },
    {
        "qid": "WebQTest-888",
        "question": "what 5 countries border switzerland",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.country",
                    "class": "location.country",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06mzp",
                    "class": "common.topic",
                    "friendly_name": "switzerland",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.location.adjoin_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.adjoining_relationship.adjoins"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "topic_entity": "m.06mzp",
        "answer": [
            {
                "answer_argument": "m.0345h",
                "answer_type": "Entity",
                "entity_name": "Germany"
            },
            {
                "answer_argument": "m.03rjj",
                "answer_type": "Entity",
                "entity_name": "Italy"
            },
            {
                "answer_argument": "m.04j53",
                "answer_type": "Entity",
                "entity_name": "Liechtenstein"
            },
            {
                "answer_argument": "m.0f8l9c",
                "answer_type": "Entity",
                "entity_name": "France"
            },
            {
                "answer_argument": "m.0h7x",
                "answer_type": "Entity",
                "entity_name": "Austria"
            }
        ],
        "s_expression": "(AND location.country (JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.06mzp)))",
        "s_expression_processed": "(AND location.country (JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.06mzp)))"
    },
    {
        "qid": "WebQTest-912",
        "question": "what currency should i take to turkey",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01znc_",
                    "class": "common.topic",
                    "friendly_name": "turkey",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01znc_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01znc_ ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.01znc_",
        "answer": [
            {
                "answer_argument": "m.04dq0w",
                "answer_type": "Entity",
                "entity_name": "Turkish lira"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.01znc_)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.01znc_)"
    },
    {
        "qid": "WebQTest-935",
        "question": "where was osama bin laden killed",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05mg9",
                    "class": "common.topic",
                    "friendly_name": "osama bin laden",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.place_of_death"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05mg9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05mg9 ns:people.deceased_person.place_of_death ?x .\n}\n",
        "topic_entity": "m.05mg9",
        "answer": [
            {
                "answer_argument": "m.011hs1",
                "answer_type": "Entity",
                "entity_name": "Abbottabad"
            }
        ],
        "s_expression": "(JOIN (R people.deceased_person.place_of_death) m.05mg9)",
        "s_expression_processed": "(JOIN (R people.deceased_person.place_of_death) m.05mg9)"
    },
    {
        "qid": "WebQTest-944",
        "question": "what was van halen first album",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0ycfj",
                    "class": "common.topic",
                    "friendly_name": "van halen",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.artist.album"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "music.album.release_date"
                }
            ]
        },
        "function": "argmin",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ycfj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ycfj ns:music.artist.album ?x .\n?x ns:music.album.release_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "topic_entity": "m.0ycfj",
        "answer": [
            {
                "answer_argument": "m.0vs85p3",
                "answer_type": "Entity",
                "entity_name": "Ain't Talkin' 'Bout Love"
            }
        ],
        "s_expression": "(ARGMIN (JOIN (R music.artist.album) m.0ycfj) music.album.release_date)",
        "s_expression_processed": "(ARGMIN (JOIN (R music.artist.album) m.0ycfj) music.album.release_date)"
    },
    {
        "qid": "WebQTest-959",
        "question": "who did brett gardner play for in 2008",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02px3wt",
                    "class": "common.topic",
                    "friendly_name": "brett gardner",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2008,
                        "sports.sports_team_roster.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02px3wt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02px3wt ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2008-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2008-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.02px3wt",
        "answer": [
            {
                "answer_argument": "m.0cqt41",
                "answer_type": "Entity",
                "entity_name": "New York Yankees"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.02px3wt) sports.sports_team_roster.from 2008))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.02px3wt) sports.sports_team_roster.from 2008))"
    },
    {
        "qid": "WebQTest-962",
        "question": "what county is san diego ca",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.071vr",
                    "class": "common.topic",
                    "friendly_name": "san diego ca",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.hud_county_place.county"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.071vr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.071vr ns:location.hud_county_place.county ?x .\n}\n",
        "topic_entity": "m.071vr",
        "answer": [
            {
                "answer_argument": "m.0l2rj",
                "answer_type": "Entity",
                "entity_name": "San Diego County"
            }
        ],
        "s_expression": "(JOIN (R location.hud_county_place.county) m.071vr)",
        "s_expression_processed": "(JOIN (R location.hud_county_place.county) m.071vr)"
    },
    {
        "qid": "WebQTest-965",
        "question": "where did anne frank go to school",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03d9rk",
                    "class": "common.topic",
                    "friendly_name": "anne frank",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03d9rk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03d9rk ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.03d9rk",
        "answer": [
            {
                "answer_argument": "m.03wf8d8",
                "answer_type": "Entity",
                "entity_name": "Montessori Lyceum Amsterdam"
            },
            {
                "answer_argument": "m.074600n",
                "answer_type": "Entity",
                "entity_name": "Jewish Lyceum"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.03d9rk))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.03d9rk))"
    },
    {
        "qid": "WebQTest-966",
        "question": "what basketball player is married to monica",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01fs85",
                    "class": "common.topic",
                    "friendly_name": "monica",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "people.marriage.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                },
                {
                    "nid": 4,
                    "node_type": "entity",
                    "id": "m.02h664x",
                    "class": "common.topic",
                    "friendly_name": "Basketball player",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                },
                {
                    "start": 0,
                    "end": 4,
                    "relation": "people.person.profession"
                }
            ]
        },
        "function": "none",
        "num_node": 5,
        "num_edge": 4,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01fs85)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01fs85 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?x ns:people.person.profession ns:m.02h664x .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.01fs85",
        "answer": [
            {
                "answer_argument": "m.0f2zfl",
                "answer_type": "Entity",
                "entity_name": "Shannon Brown"
            }
        ],
        "s_expression": "(AND (JOIN (R people.marriage.spouse) (TC (AND (JOIN (R people.person.spouse_s) m.01fs85) (JOIN people.marriage.type_of_union m.04ztj)) people.marriage.from NOW)) (JOIN people.person.profession m.02h664x))",
        "s_expression_processed": "(AND (JOIN (R people.marriage.spouse) (TC (CONS (JOIN (R people.person.spouse_s) m.01fs85) people.marriage.type_of_union m.04ztj) people.marriage.from NOW)) (JOIN people.person.profession m.02h664x))"
    },
    {
        "qid": "WebQTest-971",
        "question": "what style of music did bessie smith perform",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dq47",
                    "class": "common.topic",
                    "friendly_name": "bessie smith",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "music.artist.genre"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dq47)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dq47 ns:music.artist.genre ?x .\n}\n",
        "topic_entity": "m.0dq47",
        "answer": [
            {
                "answer_argument": "m.0155w",
                "answer_type": "Entity",
                "entity_name": "Blues"
            },
            {
                "answer_argument": "m.03_d0",
                "answer_type": "Entity",
                "entity_name": "Jazz"
            }
        ],
        "s_expression": "(JOIN (R music.artist.genre) m.0dq47)",
        "s_expression_processed": "(JOIN (R music.artist.genre) m.0dq47)"
    },
    {
        "qid": "WebQTest-983",
        "question": "where did tennessee williams go to college",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0c4y8",
                    "class": "common.topic",
                    "friendly_name": "tennessee williams",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c4y8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c4y8 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.0c4y8",
        "answer": [
            {
                "answer_argument": "m.0187nd",
                "answer_type": "Entity",
                "entity_name": "University of Missouri"
            },
            {
                "answer_argument": "m.01j_9c",
                "answer_type": "Entity",
                "entity_name": "University of Iowa"
            },
            {
                "answer_argument": "m.06thjt",
                "answer_type": "Entity",
                "entity_name": "The New School"
            },
            {
                "answer_argument": "m.0g2jl",
                "answer_type": "Entity",
                "entity_name": "Washington University in St. Louis"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.0c4y8)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.0c4y8)))"
    },
    {
        "qid": "WebQTest-997",
        "question": "who killed lee harvey oswald shot",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04gwy",
                    "class": "common.topic",
                    "friendly_name": "lee harvey oswald",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "user.alexander.misc.murdered_person.murdered_by"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04gwy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04gwy ns:user.alexander.misc.murdered_person.murdered_by ?x .\n}\n",
        "topic_entity": "m.04gwy",
        "answer": [
            {
                "answer_argument": "m.044sb",
                "answer_type": "Entity",
                "entity_name": "Jack Ruby"
            }
        ],
        "s_expression": "(JOIN (R user.alexander.misc.murdered_person.murdered_by) m.04gwy)",
        "s_expression_processed": "(JOIN (R user.alexander.misc.murdered_person.murdered_by) m.04gwy)"
    },
    {
        "qid": "WebQTest-1008",
        "question": "where is walton indiana",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0skd2",
                    "class": "common.topic",
                    "friendly_name": "walton indiana",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0skd2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0skd2 ns:location.location.containedby ?x .\n}\n",
        "topic_entity": "m.0skd2",
        "answer": [
            {
                "answer_argument": "m.03chrxx",
                "answer_type": "Entity",
                "entity_name": "Tipton Township"
            },
            {
                "answer_argument": "m.03v1s",
                "answer_type": "Entity",
                "entity_name": "Indiana"
            },
            {
                "answer_argument": "m.09c7w0",
                "answer_type": "Entity",
                "entity_name": "United States of America"
            },
            {
                "answer_argument": "m.0ntm1",
                "answer_type": "Entity",
                "entity_name": "Cass County"
            }
        ],
        "s_expression": "(JOIN (R location.location.containedby) m.0skd2)",
        "s_expression_processed": "(JOIN (R location.location.containedby) m.0skd2)"
    },
    {
        "qid": "WebQTest-1015",
        "question": "what town did justin bieber grew up in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06w2sn5",
                    "class": "common.topic",
                    "friendly_name": "justin bieber",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.places_lived"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.place_lived.location"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06w2sn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06w2sn5 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "topic_entity": "m.06w2sn5",
        "answer": [
            {
                "answer_argument": "m.01gc9t",
                "answer_type": "Entity",
                "entity_name": "Stratford"
            },
            {
                "answer_argument": "m.0d060g",
                "answer_type": "Entity",
                "entity_name": "Canada"
            }
        ],
        "s_expression": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.06w2sn5))",
        "s_expression_processed": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.06w2sn5))"
    },
    {
        "qid": "WebQTest-1035",
        "question": "what was f. scott fitzgerald",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02zjd",
                    "class": "common.topic",
                    "friendly_name": "f. scott fitzgerald",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.profession"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zjd ns:people.person.profession ?x .\n}\n",
        "topic_entity": "m.02zjd",
        "answer": [
            {
                "answer_argument": "m.02xhgwq",
                "answer_type": "Entity",
                "entity_name": "Novelist"
            },
            {
                "answer_argument": "m.05z96",
                "answer_type": "Entity",
                "entity_name": "Poet"
            },
            {
                "answer_argument": "m.0cbd2",
                "answer_type": "Entity",
                "entity_name": "Writer"
            }
        ],
        "s_expression": "(JOIN (R people.person.profession) m.02zjd)",
        "s_expression_processed": "(JOIN (R people.person.profession) m.02zjd)"
    },
    {
        "qid": "WebQTest-1047",
        "question": "who does amy stiller play in dodgeball",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0194r1",
                    "class": "common.topic",
                    "friendly_name": "amy stiller",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.034qrh",
                    "class": "common.topic",
                    "friendly_name": "dodgeball",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0194r1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0194r1 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.034qrh .\n}\n",
        "topic_entity": "m.0194r1",
        "answer": [
            {
                "answer_argument": "m.0h5kk2x",
                "answer_type": "Entity",
                "entity_name": "Keno Waitress"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.0194r1) (JOIN film.performance.film m.034qrh)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.0194r1) (JOIN film.performance.film m.034qrh)))"
    },
    {
        "qid": "WebQTest-1050",
        "question": "who does mila kunis play on family guy",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.019nnl",
                    "class": "common.topic",
                    "friendly_name": "family guy",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.023v4_",
                    "class": "common.topic",
                    "friendly_name": "Mila Kunis",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_program.regular_cast"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "tv.regular_tv_appearance.actor"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019nnl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019nnl ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.character ?x .\n?y ns:tv.regular_tv_appearance.actor ns:m.023v4_ .\n}\n",
        "topic_entity": "m.019nnl",
        "answer": [
            {
                "answer_argument": "m.035szd",
                "answer_type": "Entity",
                "entity_name": "Meg Griffin"
            }
        ],
        "s_expression": "(JOIN (R tv.regular_tv_appearance.character) (AND (JOIN (R tv.tv_program.regular_cast) m.019nnl) (JOIN tv.regular_tv_appearance.actor m.023v4_)))",
        "s_expression_processed": "(JOIN (R tv.regular_tv_appearance.character) (AND (JOIN (R tv.tv_program.regular_cast) m.019nnl) (JOIN tv.regular_tv_appearance.actor m.023v4_)))"
    },
    {
        "qid": "WebQTest-1065",
        "question": "who does darth vaders voice",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0f2y0",
                    "class": "common.topic",
                    "friendly_name": "darth vaders",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02nsjvf",
                    "class": "common.topic",
                    "friendly_name": "Voice",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film_character.portrayed_in_films"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.special_performance_type"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "topic_entity": "m.0f2y0",
        "answer": [
            {
                "answer_argument": "m.0113l6zy",
                "answer_type": "Entity",
                "entity_name": "Dr. Smoov"
            },
            {
                "answer_argument": "m.06wm0z",
                "answer_type": "Entity",
                "entity_name": "Zac Efron"
            },
            {
                "answer_argument": "m.0945y8",
                "answer_type": "Entity",
                "entity_name": "Abraham Benrubi"
            },
            {
                "answer_argument": "m.0b2l8f",
                "answer_type": "Entity",
                "entity_name": "Matt Lanter"
            },
            {
                "answer_argument": "m.0f6_x",
                "answer_type": "Entity",
                "entity_name": "James Earl Jones"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film_character.portrayed_in_films) m.0f2y0) (JOIN film.performance.special_performance_type m.02nsjvf)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (CONS (JOIN (R film.film_character.portrayed_in_films) m.0f2y0) film.performance.special_performance_type m.02nsjvf))"
    },
    {
        "qid": "WebQTest-1070",
        "question": "what are the names of michael jackson 's 3 children",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09889g",
                    "class": "common.topic",
                    "friendly_name": "michael jackson",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.children"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09889g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09889g ns:people.person.children ?x .\n}\n",
        "topic_entity": "m.09889g",
        "answer": [
            {
                "answer_argument": "m.0598rm4",
                "answer_type": "Entity",
                "entity_name": "Paris-Michael Katherine Jackson"
            },
            {
                "answer_argument": "m.0598rmb",
                "answer_type": "Entity",
                "entity_name": "Michael Joseph Jackson, Jr."
            },
            {
                "answer_argument": "m.065qbyj",
                "answer_type": "Entity",
                "entity_name": "Prince Michael Jackson II"
            }
        ],
        "s_expression": "(JOIN (R people.person.children) m.09889g)",
        "s_expression_processed": "(JOIN (R people.person.children) m.09889g)"
    },
    {
        "qid": "WebQTest-1072",
        "question": "who is the current governor of arizona 2010",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0vmt",
                    "class": "common.topic",
                    "friendly_name": "arizona",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2010,
                        "government.government_position_held.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0fkvn",
                    "class": "common.topic",
                    "friendly_name": "Governor",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.basic_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vmt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vmt ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.0vmt",
        "answer": [
            {
                "answer_argument": "m.02pkb1c",
                "answer_type": "Entity",
                "entity_name": "Jan Brewer"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (AND (JOIN (R government.governmental_jurisdiction.governing_officials) m.0vmt) (JOIN government.government_position_held.basic_title m.0fkvn)) government.government_position_held.from 2010))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (CONS (JOIN (R government.governmental_jurisdiction.governing_officials) m.0vmt) government.government_position_held.basic_title m.0fkvn) government.government_position_held.from 2010))"
    },
    {
        "qid": "WebQTest-1081",
        "question": "where did george washington carver go to collage",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03djm",
                    "class": "common.topic",
                    "friendly_name": "george washington carver",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03djm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03djm ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.03djm",
        "answer": [
            {
                "answer_argument": "m.01xssh",
                "answer_type": "Entity",
                "entity_name": "Simpson College"
            },
            {
                "answer_argument": "m.03v6t",
                "answer_type": "Entity",
                "entity_name": "Iowa State University"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.03djm)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.03djm)))"
    },
    {
        "qid": "WebQTest-1085",
        "question": "who was demi lovato dating",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02wb6yq",
                    "class": "common.topic",
                    "friendly_name": "demi lovato",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "base.popstra.celebrity.dated"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.popstra.dated.participant"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02wb6yq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02wb6yq ns:base.popstra.celebrity.dated ?y .\n?y ns:base.popstra.dated.participant ?x .\n}\n",
        "topic_entity": "m.02wb6yq",
        "answer": [
            {
                "answer_argument": "m.03cg2rv",
                "answer_type": "Entity",
                "entity_name": "Nicholas Braun"
            },
            {
                "answer_argument": "m.04cr6qv",
                "answer_type": "Entity",
                "entity_name": "Joe Jonas"
            },
            {
                "answer_argument": "m.0cq3wn",
                "answer_type": "Entity",
                "entity_name": "Cody Linley"
            }
        ],
        "s_expression": "(JOIN (R base.popstra.dated.participant) (JOIN (R base.popstra.celebrity.dated) m.02wb6yq))",
        "s_expression_processed": "(JOIN (R base.popstra.dated.participant) (JOIN (R base.popstra.celebrity.dated) m.02wb6yq))"
    },
    {
        "qid": "WebQTest-1087",
        "question": "what films has scarlett johansson been in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02114t",
                    "class": "common.topic",
                    "friendly_name": "scarlett johansson",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02114t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02114t ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.02114t",
        "answer": [
            {
                "answer_argument": "m.0110nff9",
                "answer_type": "Entity",
                "entity_name": "The Jungle Book"
            },
            {
                "answer_argument": "m.0125zrjx",
                "answer_type": "Entity",
                "entity_name": "Captain America: Civil War"
            },
            {
                "answer_argument": "m.01jzyf",
                "answer_type": "Entity",
                "entity_name": "The Man Who Wasn't There"
            },
            {
                "answer_argument": "m.01n30p",
                "answer_type": "Entity",
                "entity_name": "Ghost World"
            },
            {
                "answer_argument": "m.0209xj",
                "answer_type": "Entity",
                "entity_name": "Lost in Translation"
            },
            {
                "answer_argument": "m.02qpt1w",
                "answer_type": "Entity",
                "entity_name": "Vicky Cristina Barcelona"
            },
            {
                "answer_argument": "m.02rq3jq",
                "answer_type": "Entity",
                "entity_name": "My Brother the Pig"
            },
            {
                "answer_argument": "m.02vdw6",
                "answer_type": "Entity",
                "entity_name": "An American Rhapsody"
            },
            {
                "answer_argument": "m.033g39",
                "answer_type": "Entity",
                "entity_name": "Home Alone 3"
            },
            {
                "answer_argument": "m.033s0w",
                "answer_type": "Entity",
                "entity_name": "The Horse Whisperer"
            },
            {
                "answer_argument": "m.03bzjpm",
                "answer_type": "Entity",
                "entity_name": "He's Just Not That Into You"
            },
            {
                "answer_argument": "m.03rtz1",
                "answer_type": "Entity",
                "entity_name": "North"
            },
            {
                "answer_argument": "m.03t6l4",
                "answer_type": "Entity",
                "entity_name": "Eight Legged Freaks"
            },
            {
                "answer_argument": "m.03vfr_",
                "answer_type": "Entity",
                "entity_name": "The SpongeBob SquarePants Movie"
            },
            {
                "answer_argument": "m.0435vm",
                "answer_type": "Entity",
                "entity_name": "The Island"
            },
            {
                "answer_argument": "m.04fvch",
                "answer_type": "Entity",
                "entity_name": "The Perfect Score"
            },
            {
                "answer_argument": "m.04gcw8",
                "answer_type": "Entity",
                "entity_name": "A Love Song for Bobby Long"
            },
            {
                "answer_argument": "m.04j1zl8",
                "answer_type": "Entity",
                "entity_name": "Fall"
            },
            {
                "answer_argument": "m.05fmsx",
                "answer_type": "Entity",
                "entity_name": "In Good Company"
            },
            {
                "answer_argument": "m.05qbckf",
                "answer_type": "Entity",
                "entity_name": "Iron Man 2"
            },
            {
                "answer_argument": "m.062zm5h",
                "answer_type": "Entity",
                "entity_name": "The Avengers"
            },
            {
                "answer_argument": "m.0693hm",
                "answer_type": "Entity",
                "entity_name": "A Good Woman"
            },
            {
                "answer_argument": "m.06gjk9",
                "answer_type": "Entity",
                "entity_name": "Match Point"
            },
            {
                "answer_argument": "m.07l5v6",
                "answer_type": "Entity",
                "entity_name": "Just Cause"
            },
            {
                "answer_argument": "m.07z6xs",
                "answer_type": "Entity",
                "entity_name": "The Black Dahlia"
            },
            {
                "answer_argument": "m.084302",
                "answer_type": "Entity",
                "entity_name": "The Prestige"
            },
            {
                "answer_argument": "m.09jcj6",
                "answer_type": "Entity",
                "entity_name": "Scoop"
            },
            {
                "answer_argument": "m.0c0rz3",
                "answer_type": "Entity",
                "entity_name": "The Nanny Diaries"
            },
            {
                "answer_argument": "m.0ds1glg",
                "answer_type": "Entity",
                "entity_name": "We Bought a Zoo"
            },
            {
                "answer_argument": "m.0dy575",
                "answer_type": "Entity",
                "entity_name": "If Lucy Fell"
            },
            {
                "answer_argument": "m.0fgpvf",
                "answer_type": "Entity",
                "entity_name": "Girl with a Pearl Earring"
            },
            {
                "answer_argument": "m.0fldjy",
                "answer_type": "Entity",
                "entity_name": "The Spirit"
            },
            {
                "answer_argument": "m.0g1vcm",
                "answer_type": "Entity",
                "entity_name": "Manny & Lo"
            },
            {
                "answer_argument": "m.0g4nxzt",
                "answer_type": "Entity",
                "entity_name": "Buck"
            },
            {
                "answer_argument": "m.0gxbjgn",
                "answer_type": "Entity",
                "entity_name": "Under the Skin"
            },
            {
                "answer_argument": "m.0gyy53",
                "answer_type": "Entity",
                "entity_name": "The Other Boleyn Girl"
            },
            {
                "answer_argument": "m.0hz07jj",
                "answer_type": "Entity",
                "entity_name": "Hitchcock"
            },
            {
                "answer_argument": "m.0jzt8tx",
                "answer_type": "Entity",
                "entity_name": "Captain America: The Winter Soldier"
            },
            {
                "answer_argument": "m.0kd0k5k",
                "answer_type": "Entity",
                "entity_name": "Don Jon"
            },
            {
                "answer_argument": "m.0lq6fb5",
                "answer_type": "Entity",
                "entity_name": "Her"
            },
            {
                "answer_argument": "m.0n15g8q",
                "answer_type": "Entity",
                "entity_name": "The Avengers: Age of Ultron"
            },
            {
                "answer_argument": "m.0w1rtg8",
                "answer_type": "Entity",
                "entity_name": "Chef"
            },
            {
                "answer_argument": "m.0w36vqd",
                "answer_type": "Entity",
                "entity_name": "Lucy"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.02114t))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.02114t))"
    },
    {
        "qid": "WebQTest-1090",
        "question": "where are boeing headquarters",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0178g",
                    "class": "common.topic",
                    "friendly_name": "boeing",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "organization.organization.headquarters"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.mailing_address.citytown"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0178g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0178g ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "topic_entity": "m.0178g",
        "answer": [
            {
                "answer_argument": "m.01_d4",
                "answer_type": "Entity",
                "entity_name": "Chicago"
            }
        ],
        "s_expression": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.0178g))",
        "s_expression_processed": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.0178g))"
    },
    {
        "qid": "WebQTest-1091",
        "question": "what type of religions are in the united states",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "common.topic",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.statistical_region.religions"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.religion_percentage.religion"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.statistical_region.religions ?y .\n?y ns:location.religion_percentage.religion ?x .\n}\n",
        "topic_entity": "m.09c7w0",
        "answer": [
            {
                "answer_argument": "m.01lp8",
                "answer_type": "Entity",
                "entity_name": "Christianity"
            },
            {
                "answer_argument": "m.03_gx",
                "answer_type": "Entity",
                "entity_name": "Judaism"
            },
            {
                "answer_argument": "m.03j6c",
                "answer_type": "Entity",
                "entity_name": "Hinduism"
            },
            {
                "answer_argument": "m.07w8f",
                "answer_type": "Entity",
                "entity_name": "Unitarian Universalism"
            },
            {
                "answer_argument": "m.092bf5",
                "answer_type": "Entity",
                "entity_name": "Buddhism"
            },
            {
                "answer_argument": "m.0flw86",
                "answer_type": "Entity",
                "entity_name": "Islam"
            },
            {
                "answer_argument": "m.0kpl",
                "answer_type": "Entity",
                "entity_name": "Atheism"
            }
        ],
        "s_expression": "(JOIN (R location.religion_percentage.religion) (JOIN (R location.statistical_region.religions) m.09c7w0))",
        "s_expression_processed": "(JOIN (R location.religion_percentage.religion) (JOIN (R location.statistical_region.religions) m.09c7w0))"
    },
    {
        "qid": "WebQTest-1092",
        "question": "who did viggo mortensen play in lord of the rings",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01ps2h8",
                    "class": "common.topic",
                    "friendly_name": "viggo mortensen",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.017gl1",
                    "class": "common.topic",
                    "friendly_name": "lord of the rings",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ps2h8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ps2h8 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.017gl1 .\n}\n",
        "topic_entity": "m.01ps2h8",
        "answer": [
            {
                "answer_argument": "m.0gwlg",
                "answer_type": "Entity",
                "entity_name": "Aragorn"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.01ps2h8) (JOIN film.performance.film m.017gl1)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.01ps2h8) (JOIN film.performance.film m.017gl1)))"
    },
    {
        "qid": "WebQTest-1097",
        "question": "where did michelle obama graduated from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.025s5v9",
                    "class": "common.topic",
                    "friendly_name": "michelle obama",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.025s5v9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.025s5v9 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.025s5v9",
        "answer": [
            {
                "answer_argument": "m.014zws",
                "answer_type": "Entity",
                "entity_name": "Harvard Law School"
            },
            {
                "answer_argument": "m.05zl0",
                "answer_type": "Entity",
                "entity_name": "Princeton University"
            },
            {
                "answer_argument": "m.09rs7mx",
                "answer_type": "Entity",
                "entity_name": "Whitney M. Young Magnet High School"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.025s5v9))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.025s5v9))"
    },
    {
        "qid": "WebQTest-1104",
        "question": "what do we call the currency of france",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0f8l9c",
                    "class": "common.topic",
                    "friendly_name": "france",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.0f8l9c",
        "answer": [
            {
                "answer_argument": "m.01qyjx",
                "answer_type": "Entity",
                "entity_name": "CFP franc"
            },
            {
                "answer_argument": "m.02l6h",
                "answer_type": "Entity",
                "entity_name": "Euro"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.0f8l9c)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.0f8l9c)"
    },
    {
        "qid": "WebQTest-1116",
        "question": "what is the capital city of spain wiki answers",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06mkj",
                    "class": "common.topic",
                    "friendly_name": "spain",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.capital"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mkj ns:location.country.capital ?x .\n}\n",
        "topic_entity": "m.06mkj",
        "answer": [
            {
                "answer_argument": "m.056_y",
                "answer_type": "Entity",
                "entity_name": "Madrid"
            }
        ],
        "s_expression": "(JOIN (R location.country.capital) m.06mkj)",
        "s_expression_processed": "(JOIN (R location.country.capital) m.06mkj)"
    },
    {
        "qid": "WebQTest-1118",
        "question": "when did mark mcgwire retired",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0550x",
                    "class": "common.topic",
                    "friendly_name": "mark mcgwire",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "baseball.baseball_player.lifetime_batting_statistics"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "baseball.lifetime_batting_statistics.ending_season"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0550x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0550x ns:baseball.baseball_player.lifetime_batting_statistics ?y .\n?y ns:baseball.lifetime_batting_statistics.ending_season ?x .\n}\n",
        "topic_entity": "m.0550x",
        "answer": [
            {
                "answer_argument": "m.02h7sdf",
                "answer_type": "Entity",
                "entity_name": "2001 Major League Baseball Season"
            }
        ],
        "s_expression": "(JOIN (R baseball.lifetime_batting_statistics.ending_season) (JOIN (R baseball.baseball_player.lifetime_batting_statistics) m.0550x))",
        "s_expression_processed": "(JOIN (R baseball.lifetime_batting_statistics.ending_season) (JOIN (R baseball.baseball_player.lifetime_batting_statistics) m.0550x))"
    },
    {
        "qid": "WebQTest-1120",
        "question": "what was the currency used in france before the euro",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0f8l9c",
                    "class": "common.topic",
                    "friendly_name": "france",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_formerly_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f8l9c)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f8l9c ns:location.country.currency_formerly_used ?x .\n}\n",
        "topic_entity": "m.0f8l9c",
        "answer": [
            {
                "answer_argument": "m.01m4tk",
                "answer_type": "Entity",
                "entity_name": "Assignat"
            },
            {
                "answer_argument": "m.0298sr",
                "answer_type": "Entity",
                "entity_name": "French franc"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_formerly_used) m.0f8l9c)",
        "s_expression_processed": "(JOIN (R location.country.currency_formerly_used) m.0f8l9c)"
    },
    {
        "qid": "WebQTest-1145",
        "question": "where did romney graduated college",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0271_s",
                    "class": "common.topic",
                    "friendly_name": "romney",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.014mlp",
                    "class": "common.topic",
                    "friendly_name": "Bachelor of Arts",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "education.education.degree"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.014mlp .\n}\n",
        "topic_entity": "m.0271_s",
        "answer": [
            {
                "answer_argument": "m.0l2tk",
                "answer_type": "Entity",
                "entity_name": "Brigham Young University"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (AND (JOIN (R people.person.education) m.0271_s) (JOIN education.education.degree m.014mlp)))",
        "s_expression_processed": "(JOIN (R education.education.institution) (CONS (JOIN (R people.person.education) m.0271_s) education.education.degree m.014mlp))"
    },
    {
        "qid": "WebQTest-1146",
        "question": "who did johnny depp play in corpse bride",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0jfx1",
                    "class": "common.topic",
                    "friendly_name": "johnny depp",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.050xxm",
                    "class": "common.topic",
                    "friendly_name": "Corpse Bride",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jfx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jfx1 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.050xxm .\n}\n",
        "topic_entity": "m.0jfx1",
        "answer": [
            {
                "answer_argument": "m.04fllb9",
                "answer_type": "Entity",
                "entity_name": "Victor Van Dort"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.0jfx1) (JOIN film.performance.film m.050xxm)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.0jfx1) (JOIN film.performance.film m.050xxm)))"
    },
    {
        "qid": "WebQTest-1151",
        "question": "where did charles darwin and his wife live",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01lwx",
                    "class": "common.topic",
                    "friendly_name": "charles darwin",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.places_lived"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.place_lived.location"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01lwx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01lwx ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "topic_entity": "m.01lwx",
        "answer": [
            {
                "answer_argument": "m.0235n9",
                "answer_type": "Entity",
                "entity_name": "Shrewsbury"
            },
            {
                "answer_argument": "m.02jx1",
                "answer_type": "Entity",
                "entity_name": "England"
            },
            {
                "answer_argument": "m.030r7l4",
                "answer_type": "Entity",
                "entity_name": "Downe, Kent"
            },
            {
                "answer_argument": "m.04jpl",
                "answer_type": "Entity",
                "entity_name": "London"
            }
        ],
        "s_expression": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.01lwx))",
        "s_expression_processed": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.01lwx))"
    },
    {
        "qid": "WebQTest-1153",
        "question": "what is eminem 's real full name",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01vsgrn",
                    "class": "common.topic",
                    "friendly_name": "eminem",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.schemastaging.context_name.official_name"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vsgrn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vsgrn ns:base.schemastaging.context_name.official_name ?x .\n}\n",
        "topic_entity": "m.01vsgrn",
        "answer": [
            {
                "answer_argument": "Marshall Bruce Mathers III",
                "answer_type": "Value",
                "entity_name": null
            }
        ],
        "s_expression": "(JOIN (R base.schemastaging.context_name.official_name) m.01vsgrn)",
        "s_expression_processed": "(JOIN (R base.schemastaging.context_name.official_name) m.01vsgrn)"
    },
    {
        "qid": "WebQTest-1176",
        "question": "what time zone is pennsylvania in right now",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05tbn",
                    "class": "common.topic",
                    "friendly_name": "pennsylvania",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.time_zones"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tbn ns:location.location.time_zones ?x .\n}\n",
        "topic_entity": "m.05tbn",
        "answer": [
            {
                "answer_argument": "m.02_37z",
                "answer_type": "Entity",
                "entity_name": "UTC−05:00"
            },
            {
                "answer_argument": "m.02hcv8",
                "answer_type": "Entity",
                "entity_name": "Eastern Time Zone"
            }
        ],
        "s_expression": "(JOIN (R location.location.time_zones) m.05tbn)",
        "s_expression_processed": "(JOIN (R location.location.time_zones) m.05tbn)"
    },
    {
        "qid": "WebQTest-1177",
        "question": "where did mario lopez go to school",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02w5q6",
                    "class": "common.topic",
                    "friendly_name": "mario lopez",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02w5q6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02w5q6 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.02w5q6",
        "answer": [
            {
                "answer_argument": "m.0h0sx6",
                "answer_type": "Entity",
                "entity_name": "Chula Vista High School"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.02w5q6))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.02w5q6))"
    },
    {
        "qid": "WebQTest-1212",
        "question": "what did mark zuckerberg study",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.086dny",
                    "class": "common.topic",
                    "friendly_name": "mark zuckerberg",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.major_field_of_study"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.086dny)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.086dny ns:people.person.education ?y .\n?y ns:education.education.major_field_of_study ?x .\n}\n",
        "topic_entity": "m.086dny",
        "answer": [
            {
                "answer_argument": "m.01mf_",
                "answer_type": "Entity",
                "entity_name": "Computer programming"
            },
            {
                "answer_argument": "m.01mkq",
                "answer_type": "Entity",
                "entity_name": "Computer Science"
            },
            {
                "answer_argument": "m.05qfh",
                "answer_type": "Entity",
                "entity_name": "Psychology"
            }
        ],
        "s_expression": "(JOIN (R education.education.major_field_of_study) (JOIN (R people.person.education) m.086dny))",
        "s_expression_processed": "(JOIN (R education.education.major_field_of_study) (JOIN (R people.person.education) m.086dny))"
    },
    {
        "qid": "WebQTest-1216",
        "question": "what country was stalin in charge of",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03_lf",
                    "class": "common.topic",
                    "friendly_name": "stalin",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.politician.government_positions_held"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.jurisdiction_of_office"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_lf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_lf ns:government.politician.government_positions_held ?y .\n?y ns:government.government_position_held.jurisdiction_of_office ?x .\n}\n",
        "topic_entity": "m.03_lf",
        "answer": [
            {
                "answer_argument": "m.05vz3zq",
                "answer_type": "Entity",
                "entity_name": "Soviet Union"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.jurisdiction_of_office) (JOIN (R government.politician.government_positions_held) m.03_lf))",
        "s_expression_processed": "(JOIN (R government.government_position_held.jurisdiction_of_office) (JOIN (R government.politician.government_positions_held) m.03_lf))"
    },
    {
        "qid": "WebQTest-1229",
        "question": "what timezone is elizabethtown kentucky",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0tdxc",
                    "class": "common.topic",
                    "friendly_name": "elizabethtown kentucky",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.time_zones"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tdxc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tdxc ns:location.location.time_zones ?x .\n}\n",
        "topic_entity": "m.0tdxc",
        "answer": [
            {
                "answer_argument": "m.02hcv8",
                "answer_type": "Entity",
                "entity_name": "Eastern Time Zone"
            }
        ],
        "s_expression": "(JOIN (R location.location.time_zones) m.0tdxc)",
        "s_expression_processed": "(JOIN (R location.location.time_zones) m.0tdxc)"
    },
    {
        "qid": "WebQTest-1230",
        "question": "what to see in christchurch new zealand",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02yc5b",
                    "class": "common.topic",
                    "friendly_name": "christchurch",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "travel.travel_destination.tourist_attractions"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02yc5b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02yc5b ns:travel.travel_destination.tourist_attractions ?x .\n}\n",
        "topic_entity": "m.02yc5b",
        "answer": [
            {
                "answer_argument": "m.02qld5z",
                "answer_type": "Entity",
                "entity_name": "International Antarctic Centre"
            },
            {
                "answer_argument": "m.03vzw6",
                "answer_type": "Entity",
                "entity_name": "Ferrymead Heritage Park"
            },
            {
                "answer_argument": "m.04bgpr",
                "answer_type": "Entity",
                "entity_name": "Cathedral Square, Christchurch"
            },
            {
                "answer_argument": "m.05zrshr",
                "answer_type": "Entity",
                "entity_name": "Willowbank Wildlife Reserve, Christchurch"
            },
            {
                "answer_argument": "m.061hdn",
                "answer_type": "Entity",
                "entity_name": "Christchurch Botanic Gardens"
            },
            {
                "answer_argument": "m.06drcd",
                "answer_type": "Entity",
                "entity_name": "Christchurch Arts Centre"
            },
            {
                "answer_argument": "m.06nnvz",
                "answer_type": "Entity",
                "entity_name": "Air Force Museum of New Zealand"
            },
            {
                "answer_argument": "m.06srm9",
                "answer_type": "Entity",
                "entity_name": "Canterbury Museum, Christchurch"
            },
            {
                "answer_argument": "m.0d902k",
                "answer_type": "Entity",
                "entity_name": "TranzAlpine"
            },
            {
                "answer_argument": "m.0gh8h3s",
                "answer_type": "Entity",
                "entity_name": "Lyttelton Timeball Station"
            }
        ],
        "s_expression": "(JOIN (R travel.travel_destination.tourist_attractions) m.02yc5b)",
        "s_expression_processed": "(JOIN (R travel.travel_destination.tourist_attractions) m.02yc5b)"
    },
    {
        "qid": "WebQTest-1231",
        "question": "where is chris paul from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0cymln",
                    "class": "common.topic",
                    "friendly_name": "chris paul",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.nationality"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cymln)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cymln ns:people.person.nationality ?x .\n}\n",
        "topic_entity": "m.0cymln",
        "answer": [
            {
                "answer_argument": "m.09c7w0",
                "answer_type": "Entity",
                "entity_name": "United States of America"
            }
        ],
        "s_expression": "(JOIN (R people.person.nationality) m.0cymln)",
        "s_expression_processed": "(JOIN (R people.person.nationality) m.0cymln)"
    },
    {
        "qid": "WebQTest-1237",
        "question": "who did shaq first play for",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.012xdf",
                    "class": "common.topic",
                    "friendly_name": "shaq",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.drafted_athlete.drafted"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_league_draft_pick.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012xdf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012xdf ns:sports.drafted_athlete.drafted ?y .\n?y ns:sports.sports_league_draft_pick.team ?x .\n}\n",
        "topic_entity": "m.012xdf",
        "answer": [
            {
                "answer_argument": "m.0jm4b",
                "answer_type": "Entity",
                "entity_name": "Orlando Magic"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_league_draft_pick.team) (JOIN (R sports.drafted_athlete.drafted) m.012xdf))",
        "s_expression_processed": "(JOIN (R sports.sports_league_draft_pick.team) (JOIN (R sports.drafted_athlete.drafted) m.012xdf))"
    },
    {
        "qid": "WebQTest-1245",
        "question": "what countries are in the euro dollar",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02l6h",
                    "class": "common.topic",
                    "friendly_name": "euro",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "finance.currency.countries_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02l6h)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02l6h ns:finance.currency.countries_used ?x .\n}\n",
        "topic_entity": "m.02l6h",
        "answer": [
            {
                "answer_argument": "m.014mxp",
                "answer_type": "Entity",
                "entity_name": "Åland Islands"
            },
            {
                "answer_argument": "m.0154j",
                "answer_type": "Entity",
                "entity_name": "Belgium"
            },
            {
                "answer_argument": "m.01ppq",
                "answer_type": "Entity",
                "entity_name": "Cyprus"
            },
            {
                "answer_argument": "m.02kmm",
                "answer_type": "Entity",
                "entity_name": "Estonia"
            },
            {
                "answer_argument": "m.02phy_9",
                "answer_type": "Entity",
                "entity_name": "Collectivity of Saint Martin"
            },
            {
                "answer_argument": "m.02vzc",
                "answer_type": "Entity",
                "entity_name": "Finland"
            },
            {
                "answer_argument": "m.0345h",
                "answer_type": "Entity",
                "entity_name": "Germany"
            },
            {
                "answer_argument": "m.035qy",
                "answer_type": "Entity",
                "entity_name": "Greece"
            },
            {
                "answer_argument": "m.037nm",
                "answer_type": "Entity",
                "entity_name": "Guadeloupe"
            },
            {
                "answer_argument": "m.03rjj",
                "answer_type": "Entity",
                "entity_name": "Italy"
            },
            {
                "answer_argument": "m.03rt9",
                "answer_type": "Entity",
                "entity_name": "Republic of Ireland"
            },
            {
                "answer_argument": "m.049nq",
                "answer_type": "Entity",
                "entity_name": "Kingdom of the Netherlands"
            },
            {
                "answer_argument": "m.04dfw1",
                "answer_type": "Entity",
                "entity_name": "Province of Varese"
            },
            {
                "answer_argument": "m.04fh3",
                "answer_type": "Entity",
                "entity_name": "Republic of Kosovo"
            },
            {
                "answer_argument": "m.04g5k",
                "answer_type": "Entity",
                "entity_name": "Latvia"
            },
            {
                "answer_argument": "m.04g61",
                "answer_type": "Entity",
                "entity_name": "Luxembourg"
            },
            {
                "answer_argument": "m.04gzd",
                "answer_type": "Entity",
                "entity_name": "Lithuania"
            },
            {
                "answer_argument": "m.04v3q",
                "answer_type": "Entity",
                "entity_name": "Malta"
            },
            {
                "answer_argument": "m.04vg8",
                "answer_type": "Entity",
                "entity_name": "Martinique"
            },
            {
                "answer_argument": "m.04vws",
                "answer_type": "Entity",
                "entity_name": "Mayotte"
            },
            {
                "answer_argument": "m.04w58",
                "answer_type": "Entity",
                "entity_name": "Monaco"
            },
            {
                "answer_argument": "m.056vv",
                "answer_type": "Entity",
                "entity_name": "Montenegro"
            },
            {
                "answer_argument": "m.059j2",
                "answer_type": "Entity",
                "entity_name": "Netherlands"
            },
            {
                "answer_argument": "m.05r4w",
                "answer_type": "Entity",
                "entity_name": "Portugal"
            },
            {
                "answer_argument": "m.06mkj",
                "answer_type": "Entity",
                "entity_name": "Spain"
            },
            {
                "answer_argument": "m.06npd",
                "answer_type": "Entity",
                "entity_name": "Slovakia"
            },
            {
                "answer_argument": "m.06s4c",
                "answer_type": "Entity",
                "entity_name": "Saint Pierre and Miquelon"
            },
            {
                "answer_argument": "m.06sff",
                "answer_type": "Entity",
                "entity_name": "San Marino"
            },
            {
                "answer_argument": "m.06t8v",
                "answer_type": "Entity",
                "entity_name": "Slovenia"
            },
            {
                "answer_argument": "m.07ytt",
                "answer_type": "Entity",
                "entity_name": "Vatican City"
            },
            {
                "answer_argument": "m.088q4",
                "answer_type": "Entity",
                "entity_name": "Zimbabwe"
            },
            {
                "answer_argument": "m.0bwhs8r",
                "answer_type": "Entity",
                "entity_name": "Caribbean special municipalities of the Netherlands"
            },
            {
                "answer_argument": "m.0f8l9c",
                "answer_type": "Entity",
                "entity_name": "France"
            },
            {
                "answer_argument": "m.0ggt2",
                "answer_type": "Entity",
                "entity_name": "Varese"
            },
            {
                "answer_argument": "m.0h7f9",
                "answer_type": "Entity",
                "entity_name": "Saint Barthélemy"
            },
            {
                "answer_argument": "m.0h7x",
                "answer_type": "Entity",
                "entity_name": "Austria"
            },
            {
                "answer_argument": "m.0hg5",
                "answer_type": "Entity",
                "entity_name": "Andorra"
            }
        ],
        "s_expression": "(JOIN (R finance.currency.countries_used) m.02l6h)",
        "s_expression_processed": "(JOIN (R finance.currency.countries_used) m.02l6h)"
    },
    {
        "qid": "WebQTest-1252",
        "question": "who plays eowyn in lord of the rings",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.017jd9",
                    "class": "common.topic",
                    "friendly_name": "lord of the rings",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0gynx",
                    "class": "common.topic",
                    "friendly_name": "eowyn",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film.starring"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.character"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017jd9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017jd9 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0gynx .\n}\n",
        "topic_entity": "m.017jd9",
        "answer": [
            {
                "answer_argument": "m.0294fd",
                "answer_type": "Entity",
                "entity_name": "Miranda Otto"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.017jd9) (JOIN film.performance.character m.0gynx)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.017jd9) (JOIN film.performance.character m.0gynx)))"
    },
    {
        "qid": "WebQTest-1257",
        "question": "where is denmark south carolina",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0_kl9",
                    "class": "common.topic",
                    "friendly_name": "denmark south carolina",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.hud_county_place.county"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_kl9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_kl9 ns:location.hud_county_place.county ?x .\n}\n",
        "topic_entity": "m.0_kl9",
        "answer": [
            {
                "answer_argument": "m.0mw39",
                "answer_type": "Entity",
                "entity_name": "Bamberg County"
            }
        ],
        "s_expression": "(JOIN (R location.hud_county_place.county) m.0_kl9)",
        "s_expression_processed": "(JOIN (R location.hud_county_place.county) m.0_kl9)"
    },
    {
        "qid": "WebQTest-1261",
        "question": "where did the battle of passchendaele happen",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0c3mz",
                    "class": "common.topic",
                    "friendly_name": "passchendaele",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "time.event.locations"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0c3mz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0c3mz ns:time.event.locations ?x .\n}\n",
        "topic_entity": "m.0c3mz",
        "answer": [
            {
                "answer_argument": "m.02pb6l5",
                "answer_type": "Entity",
                "entity_name": "Passendale"
            },
            {
                "answer_argument": "m.02y4t",
                "answer_type": "Entity",
                "entity_name": "Flanders"
            }
        ],
        "s_expression": "(JOIN (R time.event.locations) m.0c3mz)",
        "s_expression_processed": "(JOIN (R time.event.locations) m.0c3mz)"
    },
    {
        "qid": "WebQTest-1269",
        "question": "where was the boston tea party 1773",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0ccd96",
                    "class": "common.topic",
                    "friendly_name": "boston tea party",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "time.event.locations"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ccd96)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ccd96 ns:time.event.locations ?x .\n}\n",
        "topic_entity": "m.0ccd96",
        "answer": [
            {
                "answer_argument": "m.04n7kgz",
                "answer_type": "Entity",
                "entity_name": "Boston Harbor"
            }
        ],
        "s_expression": "(JOIN (R time.event.locations) m.0ccd96)",
        "s_expression_processed": "(JOIN (R time.event.locations) m.0ccd96)"
    },
    {
        "qid": "WebQTest-1274",
        "question": "who won the governor election in texas",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07b_l",
                    "class": "common.topic",
                    "friendly_name": "texas",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0fkvn",
                    "class": "common.topic",
                    "friendly_name": "Governor",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.basic_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07b_l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07b_l ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\n}\n",
        "topic_entity": "m.07b_l",
        "answer": [
            {
                "answer_argument": "m.01lwvz",
                "answer_type": "Entity",
                "entity_name": "Edward Clark"
            },
            {
                "answer_argument": "m.01lwx3",
                "answer_type": "Entity",
                "entity_name": "Pendleton Murrah"
            },
            {
                "answer_argument": "m.01rtbd",
                "answer_type": "Entity",
                "entity_name": "John Connally"
            },
            {
                "answer_argument": "m.01v2r2",
                "answer_type": "Entity",
                "entity_name": "Ann Richards"
            },
            {
                "answer_argument": "m.02nlj_",
                "answer_type": "Entity",
                "entity_name": "Rick Perry"
            },
            {
                "answer_argument": "m.02pv3w",
                "answer_type": "Entity",
                "entity_name": "James Pinckney Henderson"
            },
            {
                "answer_argument": "m.02py7s",
                "answer_type": "Entity",
                "entity_name": "Francis Lubbock"
            },
            {
                "answer_argument": "m.02r_7k",
                "answer_type": "Entity",
                "entity_name": "Mark White"
            },
            {
                "answer_argument": "m.02r_g_",
                "answer_type": "Entity",
                "entity_name": "Dolph Briscoe"
            },
            {
                "answer_argument": "m.02rv0t",
                "answer_type": "Entity",
                "entity_name": "Bill Clements"
            },
            {
                "answer_argument": "m.02wv_6",
                "answer_type": "Entity",
                "entity_name": "W. Lee O'Daniel"
            },
            {
                "answer_argument": "m.032j8w",
                "answer_type": "Entity",
                "entity_name": "Lawrence Sullivan Ross"
            },
            {
                "answer_argument": "m.0364z4",
                "answer_type": "Entity",
                "entity_name": "Preston Smith"
            },
            {
                "answer_argument": "m.037_45",
                "answer_type": "Entity",
                "entity_name": "Hardin Richard Runnels"
            },
            {
                "answer_argument": "m.037f5r",
                "answer_type": "Entity",
                "entity_name": "Charles Allen Culberson"
            },
            {
                "answer_argument": "m.03848l",
                "answer_type": "Entity",
                "entity_name": "George Tyler Wood"
            },
            {
                "answer_argument": "m.03bbm8",
                "answer_type": "Entity",
                "entity_name": "Beauford H. Jester"
            },
            {
                "answer_argument": "m.03ccjj",
                "answer_type": "Entity",
                "entity_name": "Ross S. Sterling"
            },
            {
                "answer_argument": "m.03clnj",
                "answer_type": "Entity",
                "entity_name": "Coke R. Stevenson"
            },
            {
                "answer_argument": "m.03d1sj",
                "answer_type": "Entity",
                "entity_name": "Fletcher Stockdale"
            },
            {
                "answer_argument": "m.03frg9",
                "answer_type": "Entity",
                "entity_name": "Dan Moody"
            },
            {
                "answer_argument": "m.03htx7",
                "answer_type": "Entity",
                "entity_name": "Miriam A. Ferguson"
            },
            {
                "answer_argument": "m.03r03b",
                "answer_type": "Entity",
                "entity_name": "William P. Hobby"
            },
            {
                "answer_argument": "m.03vhjr",
                "answer_type": "Entity",
                "entity_name": "Allan Shivers"
            },
            {
                "answer_argument": "m.03x_db",
                "answer_type": "Entity",
                "entity_name": "Richard Coke"
            },
            {
                "answer_argument": "m.03xxmq",
                "answer_type": "Entity",
                "entity_name": "James E. Ferguson"
            },
            {
                "answer_argument": "m.03yvp9",
                "answer_type": "Entity",
                "entity_name": "Price Daniel"
            },
            {
                "answer_argument": "m.04g54r",
                "answer_type": "Entity",
                "entity_name": "Andrew Jackson Hamilton"
            },
            {
                "answer_argument": "m.04kn2s",
                "answer_type": "Entity",
                "entity_name": "Elisha M. Pease"
            },
            {
                "answer_argument": "m.04p5r8",
                "answer_type": "Entity",
                "entity_name": "James Allred"
            },
            {
                "answer_argument": "m.04sm5m",
                "answer_type": "Entity",
                "entity_name": "Pat Morris Neff"
            },
            {
                "answer_argument": "m.04tcb9",
                "answer_type": "Entity",
                "entity_name": "Jim Hogg"
            },
            {
                "answer_argument": "m.059rnw",
                "answer_type": "Entity",
                "entity_name": "James W. Throckmorton"
            },
            {
                "answer_argument": "m.059rqc",
                "answer_type": "Entity",
                "entity_name": "Edmund J. Davis"
            },
            {
                "answer_argument": "m.059rsh",
                "answer_type": "Entity",
                "entity_name": "J. W. Henderson"
            },
            {
                "answer_argument": "m.059rty",
                "answer_type": "Entity",
                "entity_name": "Peter Hansborough Bell"
            },
            {
                "answer_argument": "m.059rv9",
                "answer_type": "Entity",
                "entity_name": "Richard B. Hubbard"
            },
            {
                "answer_argument": "m.059rvp",
                "answer_type": "Entity",
                "entity_name": "Oran Milo Roberts"
            },
            {
                "answer_argument": "m.059rw1",
                "answer_type": "Entity",
                "entity_name": "John Ireland"
            },
            {
                "answer_argument": "m.059rx2",
                "answer_type": "Entity",
                "entity_name": "Joseph D. Sayers"
            },
            {
                "answer_argument": "m.059rxf",
                "answer_type": "Entity",
                "entity_name": "S. W. T. Lanham"
            },
            {
                "answer_argument": "m.059ryg",
                "answer_type": "Entity",
                "entity_name": "Thomas Mitchell Campbell"
            },
            {
                "answer_argument": "m.059ryt",
                "answer_type": "Entity",
                "entity_name": "Oscar Branch Colquitt"
            },
            {
                "answer_argument": "m.09b6zr",
                "answer_type": "Entity",
                "entity_name": "George W. Bush"
            },
            {
                "answer_argument": "m.0gbjz",
                "answer_type": "Entity",
                "entity_name": "Sam Houston"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (AND (JOIN (R government.governmental_jurisdiction.governing_officials) m.07b_l) (JOIN government.government_position_held.basic_title m.0fkvn)))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (CONS (JOIN (R government.governmental_jurisdiction.governing_officials) m.07b_l) government.government_position_held.basic_title m.0fkvn))"
    },
    {
        "qid": "WebQTest-1275",
        "question": "what does helen flanagan do",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.087k1_",
                    "class": "common.topic",
                    "friendly_name": "helen flanagan",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.profession"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.087k1_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.087k1_ ns:people.person.profession ?x .\n}\n",
        "topic_entity": "m.087k1_",
        "answer": [
            {
                "answer_argument": "m.02hrh1q",
                "answer_type": "Entity",
                "entity_name": "Actor"
            }
        ],
        "s_expression": "(JOIN (R people.person.profession) m.087k1_)",
        "s_expression_processed": "(JOIN (R people.person.profession) m.087k1_)"
    },
    {
        "qid": "WebQTest-1285",
        "question": "what city is mt lassen in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01ymq1",
                    "class": "common.topic",
                    "friendly_name": "mt lassen",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ymq1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ymq1 ns:location.location.containedby ?x .\n}\n",
        "topic_entity": "m.01ymq1",
        "answer": [
            {
                "answer_argument": "m.01n7q",
                "answer_type": "Entity",
                "entity_name": "California"
            },
            {
                "answer_argument": "m.01ymnm",
                "answer_type": "Entity",
                "entity_name": "Lassen Volcanic National Park"
            },
            {
                "answer_argument": "m.059g4",
                "answer_type": "Entity",
                "entity_name": "North America"
            },
            {
                "answer_argument": "m.09c7w0",
                "answer_type": "Entity",
                "entity_name": "United States of America"
            },
            {
                "answer_argument": "m.0k3nk",
                "answer_type": "Entity",
                "entity_name": "Cascade Range"
            },
            {
                "answer_argument": "m.0l30v",
                "answer_type": "Entity",
                "entity_name": "Shasta County"
            }
        ],
        "s_expression": "(JOIN (R location.location.containedby) m.01ymq1)",
        "s_expression_processed": "(JOIN (R location.location.containedby) m.01ymq1)"
    },
    {
        "qid": "WebQTest-1295",
        "question": "what does matt damon play in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0169dl",
                    "class": "common.topic",
                    "friendly_name": "matt damon",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0169dl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0169dl ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.0169dl",
        "answer": [
            {
                "answer_argument": "m.01149vs4",
                "answer_type": "Entity",
                "entity_name": "Extreme Realities"
            },
            {
                "answer_argument": "m.0114bqb3",
                "answer_type": "Entity",
                "entity_name": "Judge Not: In Defense of Dogma"
            },
            {
                "answer_argument": "m.011ypx",
                "answer_type": "Entity",
                "entity_name": "Good Will Hunting"
            },
            {
                "answer_argument": "m.01295z79",
                "answer_type": "Entity",
                "entity_name": "The Martian"
            },
            {
                "answer_argument": "m.01b195",
                "answer_type": "Entity",
                "entity_name": "The Rainmaker"
            },
            {
                "answer_argument": "m.01dw49",
                "answer_type": "Entity",
                "entity_name": "Gerry"
            },
            {
                "answer_argument": "m.01j5ql",
                "answer_type": "Entity",
                "entity_name": "Courage Under Fire"
            },
            {
                "answer_argument": "m.01s1wm",
                "answer_type": "Entity",
                "entity_name": "The Majestic"
            },
            {
                "answer_argument": "m.02b5wk",
                "answer_type": "Entity",
                "entity_name": "EuroTrip"
            },
            {
                "answer_argument": "m.02hvyj",
                "answer_type": "Entity",
                "entity_name": "Mystic Pizza"
            },
            {
                "answer_argument": "m.02mpyh",
                "answer_type": "Entity",
                "entity_name": "The Talented Mr. Ripley"
            },
            {
                "answer_argument": "m.02q88q8",
                "answer_type": "Entity",
                "entity_name": "The Good Mother"
            },
            {
                "answer_argument": "m.02qzh2",
                "answer_type": "Entity",
                "entity_name": "Jersey Girl"
            },
            {
                "answer_argument": "m.02x3y41",
                "answer_type": "Entity",
                "entity_name": "Green Zone"
            },
            {
                "answer_argument": "m.034c5l",
                "answer_type": "Entity",
                "entity_name": "Spirit: Stallion of the Cimarron"
            },
            {
                "answer_argument": "m.037j_8",
                "answer_type": "Entity",
                "entity_name": "Titan A.E."
            },
            {
                "answer_argument": "m.03k8th",
                "answer_type": "Entity",
                "entity_name": "The Bourne Supremacy"
            },
            {
                "answer_argument": "m.03qbfb",
                "answer_type": "Entity",
                "entity_name": "Rounders"
            },
            {
                "answer_argument": "m.03s6l2",
                "answer_type": "Entity",
                "entity_name": "Confessions of a Dangerous Mind"
            },
            {
                "answer_argument": "m.03twd6",
                "answer_type": "Entity",
                "entity_name": "The Bourne Identity"
            },
            {
                "answer_argument": "m.0418wg",
                "answer_type": "Entity",
                "entity_name": "Ocean's Twelve"
            },
            {
                "answer_argument": "m.043tz0c",
                "answer_type": "Entity",
                "entity_name": "The Informant!"
            },
            {
                "answer_argument": "m.04dnhc_",
                "answer_type": "Entity",
                "entity_name": "Howard Zinn: You Can´t Be Neutral on a Moving Train"
            },
            {
                "answer_argument": "m.04ldj71",
                "answer_type": "Entity",
                "entity_name": "The People Speak"
            },
            {
                "answer_argument": "m.04t46v",
                "answer_type": "Entity",
                "entity_name": "Finding Forrester"
            },
            {
                "answer_argument": "m.04vr_f",
                "answer_type": "Entity",
                "entity_name": "The Departed"
            },
            {
                "answer_argument": "m.04z257",
                "answer_type": "Entity",
                "entity_name": "The Brothers Grimm"
            },
            {
                "answer_argument": "m.04zm1f",
                "answer_type": "Entity",
                "entity_name": "School Ties"
            },
            {
                "answer_argument": "m.057__d",
                "answer_type": "Entity",
                "entity_name": "The Legend of Bagger Vance"
            },
            {
                "answer_argument": "m.061681",
                "answer_type": "Entity",
                "entity_name": "The Bourne Ultimatum"
            },
            {
                "answer_argument": "m.06hq4s",
                "answer_type": "Entity",
                "entity_name": "Stuck on You"
            },
            {
                "answer_argument": "m.06lsnn",
                "answer_type": "Entity",
                "entity_name": "Glory Daze"
            },
            {
                "answer_argument": "m.06z8s_",
                "answer_type": "Entity",
                "entity_name": "Ocean's Eleven"
            },
            {
                "answer_argument": "m.06zjsc_",
                "answer_type": "Entity",
                "entity_name": "The Adjustment Bureau"
            },
            {
                "answer_argument": "m.07_466",
                "answer_type": "Entity",
                "entity_name": "Magnificent Desolation: Walking On The Moon 3D"
            },
            {
                "answer_argument": "m.07024",
                "answer_type": "Entity",
                "entity_name": "Saving Private Ryan"
            },
            {
                "answer_argument": "m.078sj4",
                "answer_type": "Entity",
                "entity_name": "Syriana"
            },
            {
                "answer_argument": "m.07dtx3",
                "answer_type": "Entity",
                "entity_name": "Push, Nevada"
            },
            {
                "answer_argument": "m.07nxvj",
                "answer_type": "Entity",
                "entity_name": "The Good Shepherd"
            },
            {
                "answer_argument": "m.07t7246",
                "answer_type": "Entity",
                "entity_name": "The Good Old Boys"
            },
            {
                "answer_argument": "m.07yd9z",
                "answer_type": "Entity",
                "entity_name": "The Third Wheel"
            },
            {
                "answer_argument": "m.07yk1xz",
                "answer_type": "Entity",
                "entity_name": "Invictus"
            },
            {
                "answer_argument": "m.095yw_",
                "answer_type": "Entity",
                "entity_name": "Margaret"
            },
            {
                "answer_argument": "m.09gdh6k",
                "answer_type": "Entity",
                "entity_name": "Hereafter"
            },
            {
                "answer_argument": "m.09rvvpm",
                "answer_type": "Entity",
                "entity_name": "Happy Feet Two"
            },
            {
                "answer_argument": "m.09xbpt",
                "answer_type": "Entity",
                "entity_name": "Ocean's Thirteen"
            },
            {
                "answer_argument": "m.0b_w98s",
                "answer_type": "Entity",
                "entity_name": "Rising Son"
            },
            {
                "answer_argument": "m.0b73_1d",
                "answer_type": "Entity",
                "entity_name": "True Grit"
            },
            {
                "answer_argument": "m.0c_3nd",
                "answer_type": "Entity",
                "entity_name": "Geronimo: An American Legend"
            },
            {
                "answer_argument": "m.0c030yv",
                "answer_type": "Entity",
                "entity_name": "Inside Job"
            },
            {
                "answer_argument": "m.0cp1_1",
                "answer_type": "Entity",
                "entity_name": "Che: Part Two"
            },
            {
                "answer_argument": "m.0crw8cx",
                "answer_type": "Entity",
                "entity_name": "Behind the Screens"
            },
            {
                "answer_argument": "m.0ctnxn",
                "answer_type": "Entity",
                "entity_name": "All the Pretty Horses"
            },
            {
                "answer_argument": "m.0dgnwwr",
                "answer_type": "Entity",
                "entity_name": "Contagion"
            },
            {
                "answer_argument": "m.0djb3zw",
                "answer_type": "Entity",
                "entity_name": "Unauthorized: The Harvey Weinstein Project"
            },
            {
                "answer_argument": "m.0ds_wq",
                "answer_type": "Entity",
                "entity_name": "Youth Without Youth"
            },
            {
                "answer_argument": "m.0ds1glg",
                "answer_type": "Entity",
                "entity_name": "We Bought a Zoo"
            },
            {
                "answer_argument": "m.0dvdmg",
                "answer_type": "Entity",
                "entity_name": "Oh, What a Lovely Tea Party"
            },
            {
                "answer_argument": "m.0fkf28",
                "answer_type": "Entity",
                "entity_name": "Interstellar"
            },
            {
                "answer_argument": "m.0gd92",
                "answer_type": "Entity",
                "entity_name": "Chasing Amy"
            },
            {
                "answer_argument": "m.0gwm_wy",
                "answer_type": "Entity",
                "entity_name": "Elysium"
            },
            {
                "answer_argument": "m.0mzjx5c",
                "answer_type": "Entity",
                "entity_name": "Rounders 2"
            },
            {
                "answer_argument": "m.0n5tytm",
                "answer_type": "Entity",
                "entity_name": "The Zero Theorem"
            },
            {
                "answer_argument": "m.0ndx3rt",
                "answer_type": "Entity",
                "entity_name": "The Monuments Men"
            },
            {
                "answer_argument": "m.0p9lw",
                "answer_type": "Entity",
                "entity_name": "Dogma"
            },
            {
                "answer_argument": "m.0pd6bpq",
                "answer_type": "Entity",
                "entity_name": "Promised Land"
            },
            {
                "answer_argument": "m.0prrm",
                "answer_type": "Entity",
                "entity_name": "Jay and Silent Bob Strike Back"
            },
            {
                "answer_argument": "m.0t51n95",
                "answer_type": "Entity",
                "entity_name": "Behind the Candelabra"
            },
            {
                "answer_argument": "m.0v2vjxh",
                "answer_type": "Entity",
                "entity_name": "The Great Wall"
            },
            {
                "answer_argument": "m.0yzp8",
                "answer_type": "Entity",
                "entity_name": "Field of Dreams"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.0169dl))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.0169dl))"
    },
    {
        "qid": "WebQTest-1304",
        "question": "what was hitler the leader of",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07_m9_",
                    "class": "common.topic",
                    "friendly_name": "hitler",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.organization_founder.organizations_founded"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:organization.organization_founder.organizations_founded ?x .\n}\n",
        "topic_entity": "m.07_m9_",
        "answer": [
            {
                "answer_argument": "m.01c73n",
                "answer_type": "Entity",
                "entity_name": "Hitler Youth"
            },
            {
                "answer_argument": "m.03cqs",
                "answer_type": "Entity",
                "entity_name": "Gestapo"
            },
            {
                "answer_argument": "m.03w7xf",
                "answer_type": "Entity",
                "entity_name": "1st SS Panzer Division Leibstandarte SS Adolf Hitler"
            },
            {
                "answer_argument": "m.05g9h",
                "answer_type": "Entity",
                "entity_name": "Nazi Party"
            },
            {
                "answer_argument": "m.06qmk",
                "answer_type": "Entity",
                "entity_name": "Schutzstaffel"
            },
            {
                "answer_argument": "m.082mc",
                "answer_type": "Entity",
                "entity_name": "Waffen-SS"
            },
            {
                "answer_argument": "m.082x5",
                "answer_type": "Entity",
                "entity_name": "Wehrmacht"
            },
            {
                "answer_argument": "m.0f6ck",
                "answer_type": "Entity",
                "entity_name": "Sturmabteilung"
            }
        ],
        "s_expression": "(JOIN (R organization.organization_founder.organizations_founded) m.07_m9_)",
        "s_expression_processed": "(JOIN (R organization.organization_founder.organizations_founded) m.07_m9_)"
    },
    {
        "qid": "WebQTest-1305",
        "question": "what awards did marilyn monroe won",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04wqr",
                    "class": "common.topic",
                    "friendly_name": "marilyn monroe",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "award.award_winner.awards_won"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "award.award_honor.award"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04wqr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04wqr ns:award.award_winner.awards_won ?y .\n?y ns:award.award_honor.award ?x .\n}\n",
        "topic_entity": "m.04wqr",
        "answer": [
            {
                "answer_argument": "m.019f6s",
                "answer_type": "Entity",
                "entity_name": "Golden Globe Award for Best Actress – Motion Picture – Musical or Comedy"
            },
            {
                "answer_argument": "m.02kgb7",
                "answer_type": "Entity",
                "entity_name": "Playboy Playmate"
            },
            {
                "answer_argument": "m.0c1fs8r",
                "answer_type": "Entity",
                "entity_name": "David di Donatello Golden Plate Award"
            },
            {
                "answer_argument": "m.0l_d69j",
                "answer_type": "Entity",
                "entity_name": "Golden Globe Henrietta Award for World Film Favorites"
            }
        ],
        "s_expression": "(JOIN (R award.award_honor.award) (JOIN (R award.award_winner.awards_won) m.04wqr))",
        "s_expression_processed": "(JOIN (R award.award_honor.award) (JOIN (R award.award_winner.awards_won) m.04wqr))"
    },
    {
        "qid": "WebQTest-1308",
        "question": "what college did jrr tolkien go to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.041h0",
                    "class": "common.topic",
                    "friendly_name": "jrr tolkien",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.041h0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.041h0 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.041h0",
        "answer": [
            {
                "answer_argument": "m.07tgn",
                "answer_type": "Entity",
                "entity_name": "University of Oxford"
            },
            {
                "answer_argument": "m.0ylvj",
                "answer_type": "Entity",
                "entity_name": "Exeter College, Oxford"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.041h0)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.041h0)))"
    },
    {
        "qid": "WebQTest-1309",
        "question": "what art did wassily kandinsky do",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0856z",
                    "class": "common.topic",
                    "friendly_name": "wassily kandinsky",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "visual_art.visual_artist.art_forms"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0856z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0856z ns:visual_art.visual_artist.art_forms ?x .\n}\n",
        "topic_entity": "m.0856z",
        "answer": [
            {
                "answer_argument": "m.05qdh",
                "answer_type": "Entity",
                "entity_name": "Painting"
            }
        ],
        "s_expression": "(JOIN (R visual_art.visual_artist.art_forms) m.0856z)",
        "s_expression_processed": "(JOIN (R visual_art.visual_artist.art_forms) m.0856z)"
    },
    {
        "qid": "WebQTest-1310",
        "question": "who won the league cup in 2002",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.012dbw",
                    "class": "common.topic",
                    "friendly_name": "league cup",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.sports_award_type.winners"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_award.award_winner"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.012dbw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.012dbw ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n}\n",
        "topic_entity": "m.012dbw",
        "answer": [
            {
                "answer_argument": "m.04ltf",
                "answer_type": "Entity",
                "entity_name": "Liverpool F.C."
            }
        ],
        "s_expression": "(JOIN (R sports.sports_award.award_winner) (JOIN (R sports.sports_award_type.winners) m.012dbw))",
        "s_expression_processed": "(JOIN (R sports.sports_award.award_winner) (JOIN (R sports.sports_award_type.winners) m.012dbw))"
    },
    {
        "qid": "WebQTest-1316",
        "question": "what was the name of benjamin franklin wife",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.019fz",
                    "class": "common.topic",
                    "friendly_name": "benjamin franklin",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.01bl8s",
                    "class": "common.topic",
                    "friendly_name": "Common-law marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.01bl8s .\n}\n",
        "topic_entity": "m.019fz",
        "answer": [
            {
                "answer_argument": "m.0b15_0",
                "answer_type": "Entity",
                "entity_name": "Deborah Read"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (AND (JOIN (R people.person.spouse_s) m.019fz) (JOIN people.marriage.type_of_union m.01bl8s)))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (CONS (JOIN (R people.person.spouse_s) m.019fz) people.marriage.type_of_union m.01bl8s))"
    },
    {
        "qid": "WebQTest-1325",
        "question": "what language do maltese speak",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04v3q",
                    "class": "common.topic",
                    "friendly_name": "maltese",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.languages_spoken"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v3q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v3q ns:location.country.languages_spoken ?x .\n}\n",
        "topic_entity": "m.04v3q",
        "answer": [
            {
                "answer_argument": "m.02h40lc",
                "answer_type": "Entity",
                "entity_name": "English Language"
            }
        ],
        "s_expression": "(JOIN (R location.country.languages_spoken) m.04v3q)",
        "s_expression_processed": "(JOIN (R location.country.languages_spoken) m.04v3q)"
    },
    {
        "qid": "WebQTest-1331",
        "question": "who is my state senator arizona",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0vmt",
                    "class": "common.topic",
                    "friendly_name": "arizona",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02_7l8y",
                    "class": "common.topic",
                    "friendly_name": "United States Senator",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.political_district.representatives"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.office_position_or_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vmt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vmt ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.02_7l8y .\n}\n",
        "topic_entity": "m.0vmt",
        "answer": [
            {
                "answer_argument": "m.01j6t",
                "answer_type": "Entity",
                "entity_name": "Barry Goldwater"
            },
            {
                "answer_argument": "m.01y0mp",
                "answer_type": "Entity",
                "entity_name": "Jon Kyl"
            },
            {
                "answer_argument": "m.024p7j",
                "answer_type": "Entity",
                "entity_name": "Jeff Flake"
            },
            {
                "answer_argument": "m.02rzt9",
                "answer_type": "Entity",
                "entity_name": "Carl Hayden"
            },
            {
                "answer_argument": "m.03l8kj",
                "answer_type": "Entity",
                "entity_name": "Ernest McFarland"
            },
            {
                "answer_argument": "m.03mchy",
                "answer_type": "Entity",
                "entity_name": "Dennis DeConcini"
            },
            {
                "answer_argument": "m.04dt8k",
                "answer_type": "Entity",
                "entity_name": "Paul Fannin"
            },
            {
                "answer_argument": "m.07s4f1",
                "answer_type": "Entity",
                "entity_name": "Henry F. Ashurst"
            },
            {
                "answer_argument": "m.07sckt",
                "answer_type": "Entity",
                "entity_name": "Marcus A. Smith"
            },
            {
                "answer_argument": "m.07sgkx",
                "answer_type": "Entity",
                "entity_name": "Ralph H. Cameron"
            },
            {
                "answer_argument": "m.0bymv",
                "answer_type": "Entity",
                "entity_name": "John McCain"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (AND (JOIN (R government.political_district.representatives) m.0vmt) (JOIN government.government_position_held.office_position_or_title m.02_7l8y)))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (CONS (JOIN (R government.political_district.representatives) m.0vmt) government.government_position_held.office_position_or_title m.02_7l8y))"
    },
    {
        "qid": "WebQTest-1333",
        "question": "where does the tennessee river go",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01spb0",
                    "class": "common.topic",
                    "friendly_name": "tennessee river",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "geography.river.mouth"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01spb0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01spb0 ns:geography.river.mouth ?x .\n}\n",
        "topic_entity": "m.01spb0",
        "answer": [
            {
                "answer_argument": "m.05lx3",
                "answer_type": "Entity",
                "entity_name": "Ohio River"
            }
        ],
        "s_expression": "(JOIN (R geography.river.mouth) m.01spb0)",
        "s_expression_processed": "(JOIN (R geography.river.mouth) m.01spb0)"
    },
    {
        "qid": "WebQTest-1336",
        "question": "what is utah 's state capitol",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09b86q",
                    "class": "common.topic",
                    "friendly_name": "state capitol",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.location.street_address"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.mailing_address.citytown"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09b86q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09b86q ns:location.location.street_address ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "topic_entity": "m.09b86q",
        "answer": [
            {
                "answer_argument": "m.0f2r6",
                "answer_type": "Entity",
                "entity_name": "Salt Lake City"
            }
        ],
        "s_expression": "(JOIN (R location.mailing_address.citytown) (JOIN (R location.location.street_address) m.09b86q))",
        "s_expression_processed": "(JOIN (R location.mailing_address.citytown) (JOIN (R location.location.street_address) m.09b86q))"
    },
    {
        "qid": "WebQTest-1341",
        "question": "who are the u s senators of pennsylvania",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05tbn",
                    "class": "common.topic",
                    "friendly_name": "pennsylvania",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02_7l8y",
                    "class": "common.topic",
                    "friendly_name": "United States Senator",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.political_district.representatives"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.office_position_or_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tbn ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.office_position_or_title ns:m.02_7l8y .\n}\n",
        "topic_entity": "m.05tbn",
        "answer": [
            {
                "answer_argument": "m.01fgd3",
                "answer_type": "Entity",
                "entity_name": "Rick Santorum"
            },
            {
                "answer_argument": "m.01h4lz",
                "answer_type": "Entity",
                "entity_name": "Peter Muhlenberg"
            },
            {
                "answer_argument": "m.01hh_b",
                "answer_type": "Entity",
                "entity_name": "Robert Morris"
            },
            {
                "answer_argument": "m.01p369",
                "answer_type": "Entity",
                "entity_name": "Albert Gallatin"
            },
            {
                "answer_argument": "m.02_kk7",
                "answer_type": "Entity",
                "entity_name": "Pat Toomey"
            },
            {
                "answer_argument": "m.0204ym",
                "answer_type": "Entity",
                "entity_name": "Arlen Specter"
            },
            {
                "answer_argument": "m.020xvj",
                "answer_type": "Entity",
                "entity_name": "Simon Cameron"
            },
            {
                "answer_argument": "m.0245tw",
                "answer_type": "Entity",
                "entity_name": "H. John Heinz III"
            },
            {
                "answer_argument": "m.024pf4",
                "answer_type": "Entity",
                "entity_name": "Matthew Quay"
            },
            {
                "answer_argument": "m.0285_t",
                "answer_type": "Entity",
                "entity_name": "Philander C. Knox"
            },
            {
                "answer_argument": "m.0293dd",
                "answer_type": "Entity",
                "entity_name": "William Findlay"
            },
            {
                "answer_argument": "m.0293z9",
                "answer_type": "Entity",
                "entity_name": "William Bigler"
            },
            {
                "answer_argument": "m.02d56c",
                "answer_type": "Entity",
                "entity_name": "William Maclay"
            },
            {
                "answer_argument": "m.033l_z",
                "answer_type": "Entity",
                "entity_name": "William Bingham"
            },
            {
                "answer_argument": "m.037rgj",
                "answer_type": "Entity",
                "entity_name": "James H. Duff"
            },
            {
                "answer_argument": "m.038445",
                "answer_type": "Entity",
                "entity_name": "Harris Wofford"
            },
            {
                "answer_argument": "m.039myb",
                "answer_type": "Entity",
                "entity_name": "Hugh Scott"
            },
            {
                "answer_argument": "m.03wt_5",
                "answer_type": "Entity",
                "entity_name": "William Wilkins"
            },
            {
                "answer_argument": "m.03ww2x",
                "answer_type": "Entity",
                "entity_name": "Joseph S. Clark, Jr."
            },
            {
                "answer_argument": "m.042fk",
                "answer_type": "Entity",
                "entity_name": "James Buchanan"
            },
            {
                "answer_argument": "m.043p20",
                "answer_type": "Entity",
                "entity_name": "James Ross"
            },
            {
                "answer_argument": "m.0478p7",
                "answer_type": "Entity",
                "entity_name": "Richard Schweiker"
            },
            {
                "answer_argument": "m.047ymw",
                "answer_type": "Entity",
                "entity_name": "Bob Casey, Jr."
            },
            {
                "answer_argument": "m.05fc78g",
                "answer_type": "Entity",
                "entity_name": "Isaac D. Barnard"
            },
            {
                "answer_argument": "m.05hr3x",
                "answer_type": "Entity",
                "entity_name": "James J. Davis"
            },
            {
                "answer_argument": "m.05ygxh",
                "answer_type": "Entity",
                "entity_name": "William Scott Vare"
            },
            {
                "answer_argument": "m.060v2g",
                "answer_type": "Entity",
                "entity_name": "George Logan"
            },
            {
                "answer_argument": "m.06q523",
                "answer_type": "Entity",
                "entity_name": "Andrew Gregg"
            },
            {
                "answer_argument": "m.07qs7m",
                "answer_type": "Entity",
                "entity_name": "Boies Penrose"
            },
            {
                "answer_argument": "m.08nl9z",
                "answer_type": "Entity",
                "entity_name": "Samuel Maclay"
            },
            {
                "answer_argument": "m.08nlgl",
                "answer_type": "Entity",
                "entity_name": "Michael Leib"
            },
            {
                "answer_argument": "m.08nlt0",
                "answer_type": "Entity",
                "entity_name": "Jonathan Roberts"
            },
            {
                "answer_argument": "m.08nng2",
                "answer_type": "Entity",
                "entity_name": "Samuel McKean"
            },
            {
                "answer_argument": "m.08nnqk",
                "answer_type": "Entity",
                "entity_name": "Richard Brodhead"
            },
            {
                "answer_argument": "m.08npc4",
                "answer_type": "Entity",
                "entity_name": "Daniel Sturgeon"
            },
            {
                "answer_argument": "m.08p_3q",
                "answer_type": "Entity",
                "entity_name": "William Marks"
            },
            {
                "answer_argument": "m.08pdhc",
                "answer_type": "Entity",
                "entity_name": "George T. Oliver"
            },
            {
                "answer_argument": "m.08pj__",
                "answer_type": "Entity",
                "entity_name": "David A. Reed"
            },
            {
                "answer_argument": "m.08pjx4",
                "answer_type": "Entity",
                "entity_name": "William E. Crow"
            },
            {
                "answer_argument": "m.08pkdz",
                "answer_type": "Entity",
                "entity_name": "Joseph F. Guffey"
            },
            {
                "answer_argument": "m.08pkx2",
                "answer_type": "Entity",
                "entity_name": "Edward Martin"
            },
            {
                "answer_argument": "m.08pllp",
                "answer_type": "Entity",
                "entity_name": "Abner Lacock"
            },
            {
                "answer_argument": "m.08pzc9",
                "answer_type": "Entity",
                "entity_name": "Walter Lowrie"
            },
            {
                "answer_argument": "m.08r2xf",
                "answer_type": "Entity",
                "entity_name": "George W. Pepper"
            },
            {
                "answer_argument": "m.08r3f5",
                "answer_type": "Entity",
                "entity_name": "Joseph R. Grundy"
            },
            {
                "answer_argument": "m.08r3tg",
                "answer_type": "Entity",
                "entity_name": "Francis J. Myers"
            },
            {
                "answer_argument": "m.0m89b",
                "answer_type": "Entity",
                "entity_name": "George M. Dallas"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (AND (JOIN (R government.political_district.representatives) m.05tbn) (JOIN government.government_position_held.office_position_or_title m.02_7l8y)))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (CONS (JOIN (R government.political_district.representatives) m.05tbn) government.government_position_held.office_position_or_title m.02_7l8y))"
    },
    {
        "qid": "WebQTest-1355",
        "question": "what school did robert f kennedy go to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06hx2",
                    "class": "common.topic",
                    "friendly_name": "robert f kennedy",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06hx2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06hx2 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.06hx2",
        "answer": [
            {
                "answer_argument": "m.01mpwj",
                "answer_type": "Entity",
                "entity_name": "Harvard College"
            },
            {
                "answer_argument": "m.01vc5m",
                "answer_type": "Entity",
                "entity_name": "Bates College"
            },
            {
                "answer_argument": "m.02h45k",
                "answer_type": "Entity",
                "entity_name": "Milton Academy"
            },
            {
                "answer_argument": "m.03ksy",
                "answer_type": "Entity",
                "entity_name": "Harvard University"
            },
            {
                "answer_argument": "m.05qgd9",
                "answer_type": "Entity",
                "entity_name": "University of Virginia School of Law"
            },
            {
                "answer_argument": "m.0g8rj",
                "answer_type": "Entity",
                "entity_name": "University of Virginia"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.06hx2))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.06hx2))"
    },
    {
        "qid": "WebQTest-1370",
        "question": "where did thomas hobbes live",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07c37",
                    "class": "common.topic",
                    "friendly_name": "thomas hobbes",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.places_lived"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.place_lived.location"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07c37)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07c37 ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "topic_entity": "m.07c37",
        "answer": [
            {
                "answer_argument": "m.05qtj",
                "answer_type": "Entity",
                "entity_name": "Paris"
            }
        ],
        "s_expression": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.07c37))",
        "s_expression_processed": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.07c37))"
    },
    {
        "qid": "WebQTest-1378",
        "question": "who does kellan lutz play in prom night",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02pjwn5",
                    "class": "common.topic",
                    "friendly_name": "kellan lutz",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02rxbq6",
                    "class": "common.topic",
                    "friendly_name": "Prom Night",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02pjwn5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02pjwn5 ns:film.actor.film ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.film ns:m.02rxbq6 .\n}\n",
        "topic_entity": "m.02pjwn5",
        "answer": [
            {
                "answer_argument": "m.0gyg58j",
                "answer_type": "Entity",
                "entity_name": "Rick Leland"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.02pjwn5) (JOIN film.performance.film m.02rxbq6)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.actor.film) m.02pjwn5) (JOIN film.performance.film m.02rxbq6)))"
    },
    {
        "qid": "WebQTest-1395",
        "question": "what other countries does south africa share borders with",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0hzlz",
                    "class": "common.topic",
                    "friendly_name": "south africa",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.location.adjoin_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.adjoining_relationship.adjoins"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hzlz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hzlz ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n}\n",
        "topic_entity": "m.0hzlz",
        "answer": [
            {
                "answer_argument": "m.0166v",
                "answer_type": "Entity",
                "entity_name": "Botswana"
            },
            {
                "answer_argument": "m.04hvw",
                "answer_type": "Entity",
                "entity_name": "Lesotho"
            },
            {
                "answer_argument": "m.04wlh",
                "answer_type": "Entity",
                "entity_name": "Mozambique"
            },
            {
                "answer_argument": "m.05bmq",
                "answer_type": "Entity",
                "entity_name": "Namibia"
            },
            {
                "answer_argument": "m.06v36",
                "answer_type": "Entity",
                "entity_name": "Swaziland"
            },
            {
                "answer_argument": "m.088q4",
                "answer_type": "Entity",
                "entity_name": "Zimbabwe"
            }
        ],
        "s_expression": "(JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.0hzlz))",
        "s_expression_processed": "(JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.0hzlz))"
    },
    {
        "qid": "WebQTest-1399",
        "question": "what products does the united states export",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09c7w0",
                    "class": "common.topic",
                    "friendly_name": "united states",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.statistical_region.major_exports"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.imports_exports_by_industry.industry"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09c7w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09c7w0 ns:location.statistical_region.major_exports ?y .\n?y ns:location.imports_exports_by_industry.industry ?x .\n}\n",
        "topic_entity": "m.09c7w0",
        "answer": [
            {
                "answer_argument": "m.015smg",
                "answer_type": "Entity",
                "entity_name": "Automotive industry"
            },
            {
                "answer_argument": "m.03q9wp2",
                "answer_type": "Entity",
                "entity_name": "Food Manufacturing"
            },
            {
                "answer_argument": "m.03qtd_n",
                "answer_type": "Entity",
                "entity_name": "Pharmaceutical Preparation"
            },
            {
                "answer_argument": "m.03qtf10",
                "answer_type": "Entity",
                "entity_name": "Industrial Organic Chemicals, NEC"
            }
        ],
        "s_expression": "(JOIN (R location.imports_exports_by_industry.industry) (JOIN (R location.statistical_region.major_exports) m.09c7w0))",
        "s_expression_processed": "(JOIN (R location.imports_exports_by_industry.industry) (JOIN (R location.statistical_region.major_exports) m.09c7w0))"
    },
    {
        "qid": "WebQTest-1402",
        "question": "what is the kentucky state bird",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0498y",
                    "class": "common.topic",
                    "friendly_name": "kentucky",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04627hw",
                    "class": "common.topic",
                    "friendly_name": "State bird",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.official_symbols"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location_symbol_relationship.symbol"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "location.location_symbol_relationship.Kind_of_symbol"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0498y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0498y ns:government.governmental_jurisdiction.official_symbols ?y .\n?y ns:location.location_symbol_relationship.symbol ?x .\n?y ns:location.location_symbol_relationship.Kind_of_symbol ns:m.04627hw .\n}\n",
        "topic_entity": "m.0498y",
        "answer": [
            {
                "answer_argument": "m.01m0p1",
                "answer_type": "Entity",
                "entity_name": "Cardinal"
            }
        ],
        "s_expression": "(JOIN (R location.location_symbol_relationship.symbol) (AND (JOIN (R government.governmental_jurisdiction.official_symbols) m.0498y) (JOIN location.location_symbol_relationship.Kind_of_symbol m.04627hw)))",
        "s_expression_processed": "(JOIN (R location.location_symbol_relationship.symbol) (AND (JOIN (R government.governmental_jurisdiction.official_symbols) m.0498y) (JOIN location.location_symbol_relationship.Kind_of_symbol m.04627hw)))"
    },
    {
        "qid": "WebQTest-1423",
        "question": "what language did they speak in ghana",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.035dk",
                    "class": "common.topic",
                    "friendly_name": "ghana",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.languages_spoken"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.035dk)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.035dk ns:location.country.languages_spoken ?x .\n}\n",
        "topic_entity": "m.035dk",
        "answer": [
            {
                "answer_argument": "m.01_lfh",
                "answer_type": "Entity",
                "entity_name": "Asante dialect"
            },
            {
                "answer_argument": "m.01kphj",
                "answer_type": "Entity",
                "entity_name": "Ga Language"
            },
            {
                "answer_argument": "m.02h40lc",
                "answer_type": "Entity",
                "entity_name": "English Language"
            },
            {
                "answer_argument": "m.02hw_03",
                "answer_type": "Entity",
                "entity_name": "Akan Language"
            },
            {
                "answer_argument": "m.02hwm3m",
                "answer_type": "Entity",
                "entity_name": "Kasem Language"
            },
            {
                "answer_argument": "m.02hx8z6",
                "answer_type": "Entity",
                "entity_name": "Nzema Language"
            },
            {
                "answer_argument": "m.02j199",
                "answer_type": "Entity",
                "entity_name": "Éwé Language"
            },
            {
                "answer_argument": "m.02vkpsr",
                "answer_type": "Entity",
                "entity_name": "Dagaare language"
            },
            {
                "answer_argument": "m.04wm85",
                "answer_type": "Entity",
                "entity_name": "Dagbani Language"
            },
            {
                "answer_argument": "m.05781j",
                "answer_type": "Entity",
                "entity_name": "Dangme Language"
            },
            {
                "answer_argument": "m.05n7jk",
                "answer_type": "Entity",
                "entity_name": "Fula language"
            },
            {
                "answer_argument": "m.08r4hf",
                "answer_type": "Entity",
                "entity_name": "Gonja Language"
            }
        ],
        "s_expression": "(JOIN (R location.country.languages_spoken) m.035dk)",
        "s_expression_processed": "(JOIN (R location.country.languages_spoken) m.035dk)"
    },
    {
        "qid": "WebQTest-1425",
        "question": "what colleges did mitt romney attend",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0271_s",
                    "class": "common.topic",
                    "friendly_name": "mitt romney",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0271_s)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0271_s ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.0271_s",
        "answer": [
            {
                "answer_argument": "m.014zws",
                "answer_type": "Entity",
                "entity_name": "Harvard Law School"
            },
            {
                "answer_argument": "m.03ksy",
                "answer_type": "Entity",
                "entity_name": "Harvard University"
            },
            {
                "answer_argument": "m.06pwq",
                "answer_type": "Entity",
                "entity_name": "Stanford University"
            },
            {
                "answer_argument": "m.0kqj1",
                "answer_type": "Entity",
                "entity_name": "Harvard Business School"
            },
            {
                "answer_argument": "m.0l2tk",
                "answer_type": "Entity",
                "entity_name": "Brigham Young University"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.0271_s)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.0271_s)))"
    },
    {
        "qid": "WebQTest-1429",
        "question": "what currency is accepted in new zealand",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0ctw_b",
                    "class": "common.topic",
                    "friendly_name": "new zealand",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ctw_b)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ctw_b ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.0ctw_b",
        "answer": [
            {
                "answer_argument": "m.015f1d",
                "answer_type": "Entity",
                "entity_name": "New Zealand dollar"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.0ctw_b)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.0ctw_b)"
    },
    {
        "qid": "WebQTest-1432",
        "question": "what places are in the west midlands",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0dyjz",
                    "class": "common.topic",
                    "friendly_name": "west midlands",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.aareas.schema.administrative_area.administrative_children"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dyjz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dyjz ns:base.aareas.schema.administrative_area.administrative_children ?x .\n}\n",
        "topic_entity": "m.0dyjz",
        "answer": [
            {
                "answer_argument": "m.01ycxx",
                "answer_type": "Entity",
                "entity_name": "Sandwell"
            },
            {
                "answer_argument": "m.0257kt",
                "answer_type": "Entity",
                "entity_name": "Metropolitan Borough of Dudley"
            },
            {
                "answer_argument": "m.02z8_s",
                "answer_type": "Entity",
                "entity_name": "Metropolitan Borough of Solihull"
            },
            {
                "answer_argument": "m.0c5_3",
                "answer_type": "Entity",
                "entity_name": "Coventry"
            },
            {
                "answer_argument": "m.0k33p",
                "answer_type": "Entity",
                "entity_name": "Birmingham"
            }
        ],
        "s_expression": "(JOIN (R base.aareas.schema.administrative_area.administrative_children) m.0dyjz)",
        "s_expression_processed": "(JOIN (R base.aareas.schema.administrative_area.administrative_children) m.0dyjz)"
    },
    {
        "qid": "WebQTest-1447",
        "question": "who plays anakin skywalker in star wars 1",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0ddt_",
                    "class": "common.topic",
                    "friendly_name": "star wars 1",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0f2y0",
                    "class": "common.topic",
                    "friendly_name": "anakin skywalker",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film.starring"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.character"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ddt_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ddt_ ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0f2y0 .\n}\n",
        "topic_entity": "m.0ddt_",
        "answer": [
            {
                "answer_argument": "m.02p8dm",
                "answer_type": "Entity",
                "entity_name": "Jake Lloyd"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.0ddt_) (JOIN film.performance.character m.0f2y0)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.0ddt_) (JOIN film.performance.character m.0f2y0)))"
    },
    {
        "qid": "WebQTest-1453",
        "question": "who is nick lachey married to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.039bpc",
                    "class": "common.topic",
                    "friendly_name": "nick lachey",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "people.marriage.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.039bpc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.039bpc ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.039bpc",
        "answer": [
            {
                "answer_argument": "m.063yvp",
                "answer_type": "Entity",
                "entity_name": "Vanessa Lachey"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (TC (AND (JOIN (R people.person.spouse_s) m.039bpc) (JOIN people.marriage.type_of_union m.04ztj)) people.marriage.from NOW))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (TC (CONS (JOIN (R people.person.spouse_s) m.039bpc) people.marriage.type_of_union m.04ztj) people.marriage.from NOW))"
    },
    {
        "qid": "WebQTest-1455",
        "question": "what capital city of brazil",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.015fr",
                    "class": "common.topic",
                    "friendly_name": "brazil",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.capital"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.capital ?x .\n}\n",
        "topic_entity": "m.015fr",
        "answer": [
            {
                "answer_argument": "m.01hy_",
                "answer_type": "Entity",
                "entity_name": "Brasília"
            }
        ],
        "s_expression": "(JOIN (R location.country.capital) m.015fr)",
        "s_expression_processed": "(JOIN (R location.country.capital) m.015fr)"
    },
    {
        "qid": "WebQTest-1462",
        "question": "who is running for vice president with barack obama 2012",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02mjmr",
                    "class": "common.topic",
                    "friendly_name": "barack obama",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.us_president.vice_president"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:government.us_president.vice_president ?x .\n}\n",
        "topic_entity": "m.02mjmr",
        "answer": [
            {
                "answer_argument": "m.012gx2",
                "answer_type": "Entity",
                "entity_name": "Joe Biden"
            }
        ],
        "s_expression": "(JOIN (R government.us_president.vice_president) m.02mjmr)",
        "s_expression_processed": "(JOIN (R government.us_president.vice_president) m.02mjmr)"
    },
    {
        "qid": "WebQTest-1494",
        "question": "who is kevin jonas married to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04d_mtq",
                    "class": "common.topic",
                    "friendly_name": "kevin jonas",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "people.marriage.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04d_mtq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04d_mtq ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.04d_mtq",
        "answer": [
            {
                "answer_argument": "m.064hjjr",
                "answer_type": "Entity",
                "entity_name": "Danielle Deleasa"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (TC (AND (JOIN (R people.person.spouse_s) m.04d_mtq) (JOIN people.marriage.type_of_union m.04ztj)) people.marriage.from NOW))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (TC (CONS (JOIN (R people.person.spouse_s) m.04d_mtq) people.marriage.type_of_union m.04ztj) people.marriage.from NOW))"
    },
    {
        "qid": "WebQTest-1496",
        "question": "where does the city of paris get its name",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05qtj",
                    "class": "common.topic",
                    "friendly_name": "paris",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "symbols.namesake.named_after"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qtj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qtj ns:symbols.namesake.named_after ?x .\n}\n",
        "topic_entity": "m.05qtj",
        "answer": [
            {
                "answer_argument": "m.0283_dl",
                "answer_type": "Entity",
                "entity_name": "Parisii"
            }
        ],
        "s_expression": "(JOIN (R symbols.namesake.named_after) m.05qtj)",
        "s_expression_processed": "(JOIN (R symbols.namesake.named_after) m.05qtj)"
    },
    {
        "qid": "WebQTest-1508",
        "question": "when did bill clinton go to college",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0157m",
                    "class": "common.topic",
                    "friendly_name": "bill clinton",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0157m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0157m ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.0157m",
        "answer": [
            {
                "answer_argument": "m.02bq1j",
                "answer_type": "Entity",
                "entity_name": "Yale Law School"
            },
            {
                "answer_argument": "m.02ckl3",
                "answer_type": "Entity",
                "entity_name": "Edmund A. Walsh School of Foreign Service"
            },
            {
                "answer_argument": "m.07tgn",
                "answer_type": "Entity",
                "entity_name": "University of Oxford"
            },
            {
                "answer_argument": "m.08815",
                "answer_type": "Entity",
                "entity_name": "University Yale"
            },
            {
                "answer_argument": "m.0pspl",
                "answer_type": "Entity",
                "entity_name": "Georgetown University"
            },
            {
                "answer_argument": "m.0ymf1",
                "answer_type": "Entity",
                "entity_name": "University College, Oxford"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.0157m)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.0157m)))"
    },
    {
        "qid": "WebQTest-1516",
        "question": "where did sanjay gupta go to school",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02yyk6",
                    "class": "common.topic",
                    "friendly_name": "sanjay gupta",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02yyk6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02yyk6 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.02yyk6",
        "answer": [
            {
                "answer_argument": "m.027j22s",
                "answer_type": "Entity",
                "entity_name": "Novi High School"
            },
            {
                "answer_argument": "m.07szy",
                "answer_type": "Entity",
                "entity_name": "University of Michigan"
            },
            {
                "answer_argument": "m.08mhmx",
                "answer_type": "Entity",
                "entity_name": "University of Michigan Health System"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.02yyk6))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.02yyk6))"
    },
    {
        "qid": "WebQTest-1518",
        "question": "what countries are involved in the nafta",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.country",
                    "class": "location.country",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05jj_",
                    "class": "common.topic",
                    "friendly_name": "nafta",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "organization.membership_organization.members"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.organization_membership.member"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05jj_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05jj_ ns:organization.membership_organization.members ?y .\n?y ns:organization.organization_membership.member ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
        "topic_entity": "m.05jj_",
        "answer": [
            {
                "answer_argument": "m.09c7w0",
                "answer_type": "Entity",
                "entity_name": "United States of America"
            },
            {
                "answer_argument": "m.0b90_r",
                "answer_type": "Entity",
                "entity_name": "Mexico"
            },
            {
                "answer_argument": "m.0d060g",
                "answer_type": "Entity",
                "entity_name": "Canada"
            }
        ],
        "s_expression": "(AND location.country (JOIN (R organization.organization_membership.member) (JOIN (R organization.membership_organization.members) m.05jj_)))",
        "s_expression_processed": "(AND location.country (JOIN (R organization.organization_membership.member) (JOIN (R organization.membership_organization.members) m.05jj_)))"
    },
    {
        "qid": "WebQTest-1520",
        "question": "what language speak in brazil",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.015fr",
                    "class": "common.topic",
                    "friendly_name": "brazil",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.languages_spoken"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.languages_spoken ?x .\n}\n",
        "topic_entity": "m.015fr",
        "answer": [
            {
                "answer_argument": "m.02bjrlw",
                "answer_type": "Entity",
                "entity_name": "Italian Language"
            },
            {
                "answer_argument": "m.02zj58",
                "answer_type": "Entity",
                "entity_name": "Brazilian Portuguese"
            },
            {
                "answer_argument": "m.05zjd",
                "answer_type": "Entity",
                "entity_name": "Portuguese Language"
            }
        ],
        "s_expression": "(JOIN (R location.country.languages_spoken) m.015fr)",
        "s_expression_processed": "(JOIN (R location.country.languages_spoken) m.015fr)"
    },
    {
        "qid": "WebQTest-1524",
        "question": "who invented islamic religion",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0flw86",
                    "class": "common.topic",
                    "friendly_name": "islamic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "religion.religion.founding_figures"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.founding_figures ?x .\n}\n",
        "topic_entity": "m.0flw86",
        "answer": [
            {
                "answer_argument": "m.04s9n",
                "answer_type": "Entity",
                "entity_name": "Muhammad in Islam"
            }
        ],
        "s_expression": "(JOIN (R religion.religion.founding_figures) m.0flw86)",
        "s_expression_processed": "(JOIN (R religion.religion.founding_figures) m.0flw86)"
    },
    {
        "qid": "WebQTest-1526",
        "question": "how many languages do they speak in switzerland",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06mzp",
                    "class": "common.topic",
                    "friendly_name": "switzerland",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.languages_spoken"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mzp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mzp ns:location.country.languages_spoken ?x .\n}\n",
        "topic_entity": "m.06mzp",
        "answer": [
            {
                "answer_argument": "m.02bjrlw",
                "answer_type": "Entity",
                "entity_name": "Italian Language"
            },
            {
                "answer_argument": "m.04306rv",
                "answer_type": "Entity",
                "entity_name": "German Language"
            },
            {
                "answer_argument": "m.064_8sq",
                "answer_type": "Entity",
                "entity_name": "French"
            },
            {
                "answer_argument": "m.06ctk",
                "answer_type": "Entity",
                "entity_name": "Romansh language"
            }
        ],
        "s_expression": "(JOIN (R location.country.languages_spoken) m.06mzp)",
        "s_expression_processed": "(JOIN (R location.country.languages_spoken) m.06mzp)"
    },
    {
        "qid": "WebQTest-1528",
        "question": "what movies does logan lerman play in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04f1s6",
                    "class": "common.topic",
                    "friendly_name": "logan lerman",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04f1s6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04f1s6 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.04f1s6",
        "answer": [
            {
                "answer_argument": "g.122h61qh",
                "answer_type": "Entity",
                "entity_name": "The Flannerys"
            },
            {
                "answer_argument": "m.02bg55",
                "answer_type": "Entity",
                "entity_name": "The Butterfly Effect"
            },
            {
                "answer_argument": "m.02pjkz7",
                "answer_type": "Entity",
                "entity_name": "Gamer"
            },
            {
                "answer_argument": "m.04f46k7",
                "answer_type": "Entity",
                "entity_name": "My One and Only"
            },
            {
                "answer_argument": "m.0642xf3",
                "answer_type": "Entity",
                "entity_name": "Percy Jackson & the Olympians: The Lightning Thief"
            },
            {
                "answer_argument": "m.06y_y74",
                "answer_type": "Entity",
                "entity_name": "A Painted House"
            },
            {
                "answer_argument": "m.07799g",
                "answer_type": "Entity",
                "entity_name": "Riding in Cars with Boys"
            },
            {
                "answer_argument": "m.0b7hdh",
                "answer_type": "Entity",
                "entity_name": "Hoot"
            },
            {
                "answer_argument": "m.0btbyn",
                "answer_type": "Entity",
                "entity_name": "3:10 to Yuma"
            },
            {
                "answer_argument": "m.0c4mcp",
                "answer_type": "Entity",
                "entity_name": "The Number 23"
            },
            {
                "answer_argument": "m.0crc2cp",
                "answer_type": "Entity",
                "entity_name": "The Three Musketeers"
            },
            {
                "answer_argument": "m.0d31rqr",
                "answer_type": "Entity",
                "entity_name": "Percy Jackson: Sea of Monsters"
            },
            {
                "answer_argument": "m.0d67yl",
                "answer_type": "Entity",
                "entity_name": "Meet Bill"
            },
            {
                "answer_argument": "m.0g57wgv",
                "answer_type": "Entity",
                "entity_name": "The Perks of Being a Wallflower"
            },
            {
                "answer_argument": "m.0gltv",
                "answer_type": "Entity",
                "entity_name": "The Patriot"
            },
            {
                "answer_argument": "m.0gwrkkn",
                "answer_type": "Entity",
                "entity_name": "The Only Living Boy in New York"
            },
            {
                "answer_argument": "m.0j27n5r",
                "answer_type": "Entity",
                "entity_name": "Stuck in Love"
            },
            {
                "answer_argument": "m.0kdy118",
                "answer_type": "Entity",
                "entity_name": "Noah"
            },
            {
                "answer_argument": "m.0lbcy8h",
                "answer_type": "Entity",
                "entity_name": "The Scribe"
            },
            {
                "answer_argument": "m.0qlz9",
                "answer_type": "Entity",
                "entity_name": "What Women Want"
            },
            {
                "answer_argument": "m.0t_5p_m",
                "answer_type": "Entity",
                "entity_name": "Fury"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.04f1s6))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.04f1s6))"
    },
    {
        "qid": "WebQTest-1531",
        "question": "where is mali located",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04v09",
                    "class": "common.topic",
                    "friendly_name": "mali",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.locations.countries.continent"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04v09)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04v09 ns:base.locations.countries.continent ?x .\n}\n",
        "topic_entity": "m.04v09",
        "answer": [
            {
                "answer_argument": "m.0dg3n1",
                "answer_type": "Entity",
                "entity_name": "Africa"
            }
        ],
        "s_expression": "(JOIN (R base.locations.countries.continent) m.04v09)",
        "s_expression_processed": "(JOIN (R base.locations.countries.continent) m.04v09)"
    },
    {
        "qid": "WebQTest-1539",
        "question": "who is ryan reynolds married to 2012",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.036hf4",
                    "class": "common.topic",
                    "friendly_name": "ryan reynolds",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                },
                {
                    "nid": 4,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                },
                {
                    "start": 1,
                    "end": 4,
                    "relation": "people.marriage.from"
                }
            ]
        },
        "function": "argmax",
        "num_node": 5,
        "num_edge": 4,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.036hf4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.036hf4 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n?y ns:people.marriage.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "topic_entity": "m.036hf4",
        "answer": [
            {
                "answer_argument": "m.06_bq1",
                "answer_type": "Entity",
                "entity_name": "Blake Lively"
            }
        ],
        "s_expression": "(ARGMAX (JOIN (R people.marriage.spouse) (AND (JOIN (R people.person.spouse_s) m.036hf4) (JOIN people.marriage.type_of_union m.04ztj))) (JOIN (R people.marriage.spouse) people.marriage.from))",
        "s_expression_processed": "(ARGMAX (JOIN (R people.marriage.spouse) (CONS (JOIN (R people.person.spouse_s) m.036hf4) people.marriage.type_of_union m.04ztj)) (JOIN (R people.marriage.spouse) people.marriage.from))"
    },
    {
        "qid": "WebQTest-1540",
        "question": "what is newt gingrich 's wife 's name",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.018fzs",
                    "class": "common.topic",
                    "friendly_name": "newt gingrich",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax",
                    "time_constraint": "none"
                },
                {
                    "nid": 4,
                    "node_type": "entity",
                    "id": "m.02zsn",
                    "class": "common.topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1,
                    "friendly_name": "female"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.from"
                },
                {
                    "start": 0,
                    "end": 4,
                    "relation": "people.person.gender"
                }
            ]
        },
        "function": "argmax",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018fzs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018fzs ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?x ns:people.person.gender ns:m.02zsn .\n?y ns:people.marriage.from ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "topic_entity": "m.018fzs",
        "answer": [
            {
                "answer_argument": "m.05znhhq",
                "answer_type": "Entity",
                "entity_name": "Callista Gingrich"
            }
        ],
        "s_expression": "(ARGMAX (AND (JOIN (R people.marriage.spouse) (JOIN (R people.person.spouse_s) m.018fzs)) (JOIN people.person.gender m.02zsn)) (JOIN (R people.marriage.spouse) people.marriage.from))",
        "s_expression_processed": "(ARGMAX (CONS (JOIN (R people.marriage.spouse) (JOIN (R people.person.spouse_s) m.018fzs)) people.person.gender m.02zsn) (JOIN (R people.marriage.spouse) people.marriage.from))"
    },
    {
        "qid": "WebQTest-1550",
        "question": "what is the name of king george vi wife",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0cm83",
                    "class": "common.topic",
                    "friendly_name": "king george vi",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cm83)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cm83 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\n}\n",
        "topic_entity": "m.0cm83",
        "answer": [
            {
                "answer_argument": "m.0cm63",
                "answer_type": "Entity",
                "entity_name": "Queen Elizabeth The Queen Mother"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (AND (JOIN (R people.person.spouse_s) m.0cm83) (JOIN people.marriage.type_of_union m.04ztj)))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (CONS (JOIN (R people.person.spouse_s) m.0cm83) people.marriage.type_of_union m.04ztj))"
    },
    {
        "qid": "WebQTest-1565",
        "question": "where does houston dynamo play",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.09cl0w",
                    "class": "common.topic",
                    "friendly_name": "houston dynamo",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team.location"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09cl0w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09cl0w ns:sports.sports_team.location ?x .\n}\n",
        "topic_entity": "m.09cl0w",
        "answer": [
            {
                "answer_argument": "m.03l2n",
                "answer_type": "Entity",
                "entity_name": "Houston"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team.location) m.09cl0w)",
        "s_expression_processed": "(JOIN (R sports.sports_team.location) m.09cl0w)"
    },
    {
        "qid": "WebQTest-1568",
        "question": "what university did obama graduated from",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02mjmr",
                    "class": "common.topic",
                    "friendly_name": "obama",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.014mlp",
                    "class": "common.topic",
                    "friendly_name": "Bachelor of Arts",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "education.education.degree"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?y ns:education.education.degree ns:m.014mlp .\n}\n",
        "topic_entity": "m.02mjmr",
        "answer": [
            {
                "answer_argument": "m.01w5m",
                "answer_type": "Entity",
                "entity_name": "Columbia University"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (AND (JOIN (R people.person.education) m.02mjmr) (JOIN education.education.degree m.014mlp)))",
        "s_expression_processed": "(JOIN (R education.education.institution) (CONS (JOIN (R people.person.education) m.02mjmr) education.education.degree m.014mlp))"
    },
    {
        "qid": "WebQTest-1569",
        "question": "what jamaican money called",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03_r3",
                    "class": "common.topic",
                    "friendly_name": "jamaican",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_r3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_r3 ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.03_r3",
        "answer": [
            {
                "answer_argument": "m.04xc2m",
                "answer_type": "Entity",
                "entity_name": "Jamaican dollar"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.03_r3)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.03_r3)"
    },
    {
        "qid": "WebQTest-1573",
        "question": "who influenced picasso art",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.060_7",
                    "class": "common.topic",
                    "friendly_name": "picasso",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "influence.influence_node.influenced_by"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.060_7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.060_7 ns:influence.influence_node.influenced_by ?x .\n}\n",
        "topic_entity": "m.060_7",
        "answer": [
            {
                "answer_argument": "m.016s03",
                "answer_type": "Entity",
                "entity_name": "Eugène Delacroix"
            },
            {
                "answer_argument": "m.02mbk",
                "answer_type": "Entity",
                "entity_name": "Édouard Manet"
            },
            {
                "answer_argument": "m.02rdf6",
                "answer_type": "Entity",
                "entity_name": "Henri Rousseau"
            },
            {
                "answer_argument": "m.02y23",
                "answer_type": "Entity",
                "entity_name": "Francisco Goya"
            },
            {
                "answer_argument": "m.03p_bz",
                "answer_type": "Entity",
                "entity_name": "Sara Murphy"
            },
            {
                "answer_argument": "m.063mx",
                "answer_type": "Entity",
                "entity_name": "Paul Cézanne"
            },
            {
                "answer_argument": "m.07_m2",
                "answer_type": "Entity",
                "entity_name": "Vincent van Gogh"
            },
            {
                "answer_argument": "m.0cwk2",
                "answer_type": "Entity",
                "entity_name": "Jean-Auguste-Dominique Ingres"
            },
            {
                "answer_argument": "m.0h7vt",
                "answer_type": "Entity",
                "entity_name": "Henri de Toulouse-Lautrec"
            },
            {
                "answer_argument": "m.0h82x",
                "answer_type": "Entity",
                "entity_name": "Paul Gauguin"
            },
            {
                "answer_argument": "m.0k92y",
                "answer_type": "Entity",
                "entity_name": "Diego Velázquez"
            },
            {
                "answer_argument": "m.0tth",
                "answer_type": "Entity",
                "entity_name": "Alfred Jarry"
            }
        ],
        "s_expression": "(JOIN (R influence.influence_node.influenced_by) m.060_7)",
        "s_expression_processed": "(JOIN (R influence.influence_node.influenced_by) m.060_7)"
    },
    {
        "qid": "WebQTest-1574",
        "question": "what is my timezone in pennsylvania",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.05tbn",
                    "class": "common.topic",
                    "friendly_name": "pennsylvania",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.time_zones"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05tbn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05tbn ns:location.location.time_zones ?x .\n}\n",
        "topic_entity": "m.05tbn",
        "answer": [
            {
                "answer_argument": "m.02_37z",
                "answer_type": "Entity",
                "entity_name": "UTC−05:00"
            },
            {
                "answer_argument": "m.02hcv8",
                "answer_type": "Entity",
                "entity_name": "Eastern Time Zone"
            }
        ],
        "s_expression": "(JOIN (R location.location.time_zones) m.05tbn)",
        "s_expression_processed": "(JOIN (R location.location.time_zones) m.05tbn)"
    },
    {
        "qid": "WebQTest-1586",
        "question": "who was queen isabella 's mother",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0jd6m",
                    "class": "common.topic",
                    "friendly_name": "queen isabella",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02zsn",
                    "class": "common.topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1,
                    "friendly_name": "female"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.parents"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "people.person.gender"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jd6m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jd6m ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "topic_entity": "m.0jd6m",
        "answer": [
            {
                "answer_argument": "m.0d18m0",
                "answer_type": "Entity",
                "entity_name": "Isabella of Portugal, Queen of Castile"
            }
        ],
        "s_expression": "(AND (JOIN (R people.person.parents) m.0jd6m) (JOIN people.person.gender m.02zsn))",
        "s_expression_processed": "(CONS (JOIN (R people.person.parents) m.0jd6m) people.person.gender m.02zsn)"
    },
    {
        "qid": "WebQTest-1595",
        "question": "what new movies is robert pattinson in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.062dn7",
                    "class": "common.topic",
                    "friendly_name": "robert pattinson",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.062dn7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.062dn7 ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.062dn7",
        "answer": [
            {
                "answer_argument": "m.0_s30t6",
                "answer_type": "Entity",
                "entity_name": "Life"
            },
            {
                "answer_argument": "m.012sdm5f",
                "answer_type": "Entity",
                "entity_name": "The Childhood of a Leader"
            },
            {
                "answer_argument": "m.031786",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Goblet of Fire"
            },
            {
                "answer_argument": "m.031hcx",
                "answer_type": "Entity",
                "entity_name": "Harry Potter and the Order of the Phoenix"
            },
            {
                "answer_argument": "m.03nm_fh",
                "answer_type": "Entity",
                "entity_name": "Twilight"
            },
            {
                "answer_argument": "m.047fhg8",
                "answer_type": "Entity",
                "entity_name": "How to Be"
            },
            {
                "answer_argument": "m.04m_qkz",
                "answer_type": "Entity",
                "entity_name": "Little Ashes"
            },
            {
                "answer_argument": "m.04qk12",
                "answer_type": "Entity",
                "entity_name": "Vanity Fair"
            },
            {
                "answer_argument": "m.05pdh86",
                "answer_type": "Entity",
                "entity_name": "The Twilight Saga: New Moon"
            },
            {
                "answer_argument": "m.065_t2_",
                "answer_type": "Entity",
                "entity_name": "Unbound Captives"
            },
            {
                "answer_argument": "m.06w67tn",
                "answer_type": "Entity",
                "entity_name": "Remember Me"
            },
            {
                "answer_argument": "m.075wx7_",
                "answer_type": "Entity",
                "entity_name": "Eclipse"
            },
            {
                "answer_argument": "m.075wx89",
                "answer_type": "Entity",
                "entity_name": "The Twilight Saga: Breaking Dawn - Part 1"
            },
            {
                "answer_argument": "m.09v9mks",
                "answer_type": "Entity",
                "entity_name": "Bel Ami"
            },
            {
                "answer_argument": "m.0bpkq4",
                "answer_type": "Entity",
                "entity_name": "Dark Kingdom: The Dragon King"
            },
            {
                "answer_argument": "m.0c1sgd3",
                "answer_type": "Entity",
                "entity_name": "Water for Elephants"
            },
            {
                "answer_argument": "m.0crwqwj",
                "answer_type": "Entity",
                "entity_name": "The Bad Mother's Handbook"
            },
            {
                "answer_argument": "m.0djz0rc",
                "answer_type": "Entity",
                "entity_name": "The Twilight Saga: Breaking Dawn - Part 2"
            },
            {
                "answer_argument": "m.0fsmw2",
                "answer_type": "Entity",
                "entity_name": "Maps to the Stars"
            },
            {
                "answer_argument": "m.0g57n3s",
                "answer_type": "Entity",
                "entity_name": "Love & Distrust"
            },
            {
                "answer_argument": "m.0gtvrv3",
                "answer_type": "Entity",
                "entity_name": "Cosmopolis"
            },
            {
                "answer_argument": "m.0gx3vhy",
                "answer_type": "Entity",
                "entity_name": "The Summer House"
            },
            {
                "answer_argument": "m.0j310_v",
                "answer_type": "Entity",
                "entity_name": "The Haunted Airman"
            },
            {
                "answer_argument": "m.0k24hpb",
                "answer_type": "Entity",
                "entity_name": "Mission: Blacklist"
            },
            {
                "answer_argument": "m.0ngns90",
                "answer_type": "Entity",
                "entity_name": "Queen of the Desert"
            },
            {
                "answer_argument": "m.0ngxkxx",
                "answer_type": "Entity",
                "entity_name": "The Rover"
            },
            {
                "answer_argument": "m.0w1yhhx",
                "answer_type": "Entity",
                "entity_name": "Hold on to Me"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.062dn7))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.062dn7))"
    },
    {
        "qid": "WebQTest-1603",
        "question": "what is the sacred text of daoism",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07gvx",
                    "class": "common.topic",
                    "friendly_name": "daoism",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "religion.religion.texts"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07gvx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07gvx ns:religion.religion.texts ?x .\n}\n",
        "topic_entity": "m.07gvx",
        "answer": [
            {
                "answer_argument": "m.0164zy",
                "answer_type": "Entity",
                "entity_name": "Zhuang Zhou"
            },
            {
                "answer_argument": "m.02czn",
                "answer_type": "Entity",
                "entity_name": "Tao Te Ching"
            },
            {
                "answer_argument": "m.03ydb",
                "answer_type": "Entity",
                "entity_name": "I Ching"
            },
            {
                "answer_argument": "m.05blr4",
                "answer_type": "Entity",
                "entity_name": "Daozang"
            }
        ],
        "s_expression": "(JOIN (R religion.religion.texts) m.07gvx)",
        "s_expression_processed": "(JOIN (R religion.religion.texts) m.07gvx)"
    },
    {
        "qid": "WebQTest-1622",
        "question": "what ocean is around hawaii",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0jbt3",
                    "class": "common.topic",
                    "friendly_name": "hawaii",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "geography.island.body_of_water"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbt3 ns:geography.island.body_of_water ?x .\n}\n",
        "topic_entity": "m.0jbt3",
        "answer": [
            {
                "answer_argument": "m.05rgl",
                "answer_type": "Entity",
                "entity_name": "Pacific Ocean"
            }
        ],
        "s_expression": "(JOIN (R geography.island.body_of_water) m.0jbt3)",
        "s_expression_processed": "(JOIN (R geography.island.body_of_water) m.0jbt3)"
    },
    {
        "qid": "WebQTest-1641",
        "question": "who is nicolas cage married too",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01vvb4m",
                    "class": "common.topic",
                    "friendly_name": "nicolas cage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "people.marriage.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.04ztj",
                    "class": "common.topic",
                    "friendly_name": "Marriage",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.type_of_union"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01vvb4m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01vvb4m ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.type_of_union ns:m.04ztj .\nFILTER(NOT EXISTS {?y ns:people.marriage.from ?sk0} || \nEXISTS {?y ns:people.marriage.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:people.marriage.to ?sk2} || \nEXISTS {?y ns:people.marriage.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.01vvb4m",
        "answer": [
            {
                "answer_argument": "m.025dscf",
                "answer_type": "Entity",
                "entity_name": "Alice Kim"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.spouse) (TC (AND (JOIN (R people.person.spouse_s) m.01vvb4m) (JOIN people.marriage.type_of_union m.04ztj)) people.marriage.from NOW))",
        "s_expression_processed": "(JOIN (R people.marriage.spouse) (TC (CONS (JOIN (R people.person.spouse_s) m.01vvb4m) people.marriage.type_of_union m.04ztj) people.marriage.from NOW))"
    },
    {
        "qid": "WebQTest-1649",
        "question": "what was dr seuss real name",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02g3w",
                    "class": "common.topic",
                    "friendly_name": "dr seuss",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "base.schemastaging.context_name.official_name"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02g3w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02g3w ns:base.schemastaging.context_name.official_name ?x .\n}\n",
        "topic_entity": "m.02g3w",
        "answer": [
            {
                "answer_argument": "Theodor Seuss Geisel",
                "answer_type": "Value",
                "entity_name": null
            }
        ],
        "s_expression": "(JOIN (R base.schemastaging.context_name.official_name) m.02g3w)",
        "s_expression_processed": "(JOIN (R base.schemastaging.context_name.official_name) m.02g3w)"
    },
    {
        "qid": "WebQTest-1656",
        "question": "what are some of leonardo da vinci most famous inventions",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.04lg6",
                    "class": "common.topic",
                    "friendly_name": "leonardo da vinci",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "law.inventor.inventions"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04lg6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04lg6 ns:law.inventor.inventions ?x .\n}\n",
        "topic_entity": "m.04lg6",
        "answer": [
            {
                "answer_argument": "m.012rm",
                "answer_type": "Entity",
                "entity_name": "Anemometer"
            },
            {
                "answer_argument": "m.01w6mc",
                "answer_type": "Entity",
                "entity_name": "Diving suit"
            },
            {
                "answer_argument": "m.01x3y7",
                "answer_type": "Entity",
                "entity_name": "Ornithopter"
            },
            {
                "answer_argument": "m.05my_3",
                "answer_type": "Entity",
                "entity_name": "Viola organista"
            },
            {
                "answer_argument": "m.0796wt",
                "answer_type": "Entity",
                "entity_name": "Double hull"
            },
            {
                "answer_argument": "m.0cyfs",
                "answer_type": "Entity",
                "entity_name": "Parachute"
            },
            {
                "answer_argument": "m.0w11gwh",
                "answer_type": "Entity",
                "entity_name": "Triple Barrel Canon"
            },
            {
                "answer_argument": "m.0w11h15",
                "answer_type": "Entity",
                "entity_name": "33-Barreled Organ"
            },
            {
                "answer_argument": "m.0w11hbh",
                "answer_type": "Entity",
                "entity_name": "Aerial Screw"
            },
            {
                "answer_argument": "m.0y8r",
                "answer_type": "Entity",
                "entity_name": "Armored car"
            }
        ],
        "s_expression": "(JOIN (R law.inventor.inventions) m.04lg6)",
        "s_expression_processed": "(JOIN (R law.inventor.inventions) m.04lg6)"
    },
    {
        "qid": "WebQTest-1658",
        "question": "where do they speak turkish",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02hwyss",
                    "class": "common.topic",
                    "friendly_name": "turkish",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "language.human_language.countries_spoken_in"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02hwyss)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02hwyss ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "topic_entity": "m.02hwyss",
        "answer": [
            {
                "answer_argument": "m.01ppq",
                "answer_type": "Entity",
                "entity_name": "Cyprus"
            },
            {
                "answer_argument": "m.01znc_",
                "answer_type": "Entity",
                "entity_name": "Turkey"
            },
            {
                "answer_argument": "m.04fh3",
                "answer_type": "Entity",
                "entity_name": "Republic of Kosovo"
            },
            {
                "answer_argument": "m.0bjv6",
                "answer_type": "Entity",
                "entity_name": "Republic of Macedonia"
            },
            {
                "answer_argument": "m.0h7x",
                "answer_type": "Entity",
                "entity_name": "Austria"
            }
        ],
        "s_expression": "(JOIN (R language.human_language.countries_spoken_in) m.02hwyss)",
        "s_expression_processed": "(JOIN (R language.human_language.countries_spoken_in) m.02hwyss)"
    },
    {
        "qid": "WebQTest-1667",
        "question": "who were the children of king solomon",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.070h3",
                    "class": "common.topic",
                    "friendly_name": "king solomon",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.children"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.070h3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.070h3 ns:people.person.children ?x .\n}\n",
        "topic_entity": "m.070h3",
        "answer": [
            {
                "answer_argument": "m.01qn77",
                "answer_type": "Entity",
                "entity_name": "Menelik I"
            },
            {
                "answer_argument": "m.06h5t",
                "answer_type": "Entity",
                "entity_name": "Rehoboam"
            }
        ],
        "s_expression": "(JOIN (R people.person.children) m.070h3)",
        "s_expression_processed": "(JOIN (R people.person.children) m.070h3)"
    },
    {
        "qid": "WebQTest-1672",
        "question": "what language do the maasai speak",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.054vv",
                    "class": "common.topic",
                    "friendly_name": "maasai",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.ethnicity.languages_spoken"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.054vv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.054vv ns:people.ethnicity.languages_spoken ?x .\n}\n",
        "topic_entity": "m.054vv",
        "answer": [
            {
                "answer_argument": "m.064kl7",
                "answer_type": "Entity",
                "entity_name": "Maasai Language"
            }
        ],
        "s_expression": "(JOIN (R people.ethnicity.languages_spoken) m.054vv)",
        "s_expression_processed": "(JOIN (R people.ethnicity.languages_spoken) m.054vv)"
    },
    {
        "qid": "WebQTest-1673",
        "question": "what political party was hitler in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07_m9_",
                    "class": "common.topic",
                    "friendly_name": "hitler",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.politician.party"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.political_party_tenure.party"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07_m9_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07_m9_ ns:government.politician.party ?y .\n?y ns:government.political_party_tenure.party ?x .\n}\n",
        "topic_entity": "m.07_m9_",
        "answer": [
            {
                "answer_argument": "m.05g9h",
                "answer_type": "Entity",
                "entity_name": "Nazi Party"
            },
            {
                "answer_argument": "m.0dl13",
                "answer_type": "Entity",
                "entity_name": "German Workers' Party"
            }
        ],
        "s_expression": "(JOIN (R government.political_party_tenure.party) (JOIN (R government.politician.party) m.07_m9_))",
        "s_expression_processed": "(JOIN (R government.political_party_tenure.party) (JOIN (R government.politician.party) m.07_m9_))"
    },
    {
        "qid": "WebQTest-1674",
        "question": "who is the leader of north korea today",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05b7q",
                    "class": "common.topic",
                    "friendly_name": "north korea",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "government.government_position_held.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0h7p97k",
                    "class": "common.topic",
                    "friendly_name": "Supreme leader",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.basic_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05b7q)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05b7q ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0h7p97k .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.05b7q",
        "answer": [
            {
                "answer_argument": "m.0fgw19",
                "answer_type": "Entity",
                "entity_name": "Kim Jong-un"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (AND (JOIN (R government.governmental_jurisdiction.governing_officials) m.05b7q) (JOIN government.government_position_held.basic_title m.0h7p97k)) government.government_position_held.from NOW))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (CONS (JOIN (R government.governmental_jurisdiction.governing_officials) m.05b7q) government.government_position_held.basic_title m.0h7p97k) government.government_position_held.from NOW))"
    },
    {
        "qid": "WebQTest-1684",
        "question": "what influenced william shakespeare to start writing",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.081k8",
                    "class": "common.topic",
                    "friendly_name": "william shakespeare",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "influence.influence_node.influenced_by"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.081k8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.081k8 ns:influence.influence_node.influenced_by ?x .\n}\n",
        "topic_entity": "m.081k8",
        "answer": [
            {
                "answer_argument": "m.01612m",
                "answer_type": "Entity",
                "entity_name": "Lucian"
            },
            {
                "answer_argument": "m.01r7z",
                "answer_type": "Entity",
                "entity_name": "Christopher Marlowe"
            },
            {
                "answer_argument": "m.02lqj",
                "answer_type": "Entity",
                "entity_name": "Edmund Spenser"
            },
            {
                "answer_argument": "m.03b_m",
                "answer_type": "Entity",
                "entity_name": "Geoffrey Chaucer"
            },
            {
                "answer_argument": "m.03cdqxx",
                "answer_type": "Entity",
                "entity_name": "John Pory"
            },
            {
                "answer_argument": "m.060yy",
                "answer_type": "Entity",
                "entity_name": "Plautus"
            },
            {
                "answer_argument": "m.063_9",
                "answer_type": "Entity",
                "entity_name": "Plutarch"
            },
            {
                "answer_argument": "m.07hl9",
                "answer_type": "Entity",
                "entity_name": "Thomas More"
            },
            {
                "answer_argument": "m.07km7",
                "answer_type": "Entity",
                "entity_name": "Terence"
            },
            {
                "answer_argument": "m.07yhg",
                "answer_type": "Entity",
                "entity_name": "Virgil"
            },
            {
                "answer_argument": "m.09fdm",
                "answer_type": "Entity",
                "entity_name": "Ovid"
            },
            {
                "answer_argument": "m.0c2cl",
                "answer_type": "Entity",
                "entity_name": "Michel de Montaigne"
            },
            {
                "answer_argument": "m.0c5h0",
                "answer_type": "Entity",
                "entity_name": "Thomas Kyd"
            },
            {
                "answer_argument": "m.0j_8y",
                "answer_type": "Entity",
                "entity_name": "Seneca the Younger"
            }
        ],
        "s_expression": "(JOIN (R influence.influence_node.influenced_by) m.081k8)",
        "s_expression_processed": "(JOIN (R influence.influence_node.influenced_by) m.081k8)"
    },
    {
        "qid": "WebQTest-1685",
        "question": "where did benjamin franklin went to school",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.019fz",
                    "class": "common.topic",
                    "friendly_name": "benjamin franklin",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.019fz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.019fz ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.019fz",
        "answer": [
            {
                "answer_argument": "m.02kj7g",
                "answer_type": "Entity",
                "entity_name": "Boston Latin School"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.019fz))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.019fz))"
    },
    {
        "qid": "WebQTest-1686",
        "question": "who is the governor of arizona 2009",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0vmt",
                    "class": "common.topic",
                    "friendly_name": "arizona",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2009,
                        "government.government_position_held.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0fkvn",
                    "class": "common.topic",
                    "friendly_name": "Governor",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.basic_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vmt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vmt ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.0fkvn .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2009-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2009-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.0vmt",
        "answer": [
            {
                "answer_argument": "m.01kf06",
                "answer_type": "Entity",
                "entity_name": "Janet Napolitano"
            },
            {
                "answer_argument": "m.02pkb1c",
                "answer_type": "Entity",
                "entity_name": "Jan Brewer"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (AND (JOIN (R government.governmental_jurisdiction.governing_officials) m.0vmt) (JOIN government.government_position_held.basic_title m.0fkvn)) government.government_position_held.from 2009))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (CONS (JOIN (R government.governmental_jurisdiction.governing_officials) m.0vmt) government.government_position_held.basic_title m.0fkvn) government.government_position_held.from 2009))"
    },
    {
        "qid": "WebQTest-1700",
        "question": "where is mt st helens located",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.094xz",
                    "class": "common.topic",
                    "friendly_name": "mt st helens",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.094xz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.094xz ns:location.location.containedby ?x .\n}\n",
        "topic_entity": "m.094xz",
        "answer": [
            {
                "answer_argument": "m.059g4",
                "answer_type": "Entity",
                "entity_name": "North America"
            },
            {
                "answer_argument": "m.081yw",
                "answer_type": "Entity",
                "entity_name": "Washington"
            },
            {
                "answer_argument": "m.09c7w0",
                "answer_type": "Entity",
                "entity_name": "United States of America"
            },
            {
                "answer_argument": "m.0k3nk",
                "answer_type": "Entity",
                "entity_name": "Cascade Range"
            },
            {
                "answer_argument": "m.0mly4",
                "answer_type": "Entity",
                "entity_name": "Skamania County"
            }
        ],
        "s_expression": "(JOIN (R location.location.containedby) m.094xz)",
        "s_expression_processed": "(JOIN (R location.location.containedby) m.094xz)"
    },
    {
        "qid": "WebQTest-1711",
        "question": "when was the last time the la kings won a playoff series",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0jnq8",
                    "class": "common.topic",
                    "friendly_name": "la kings",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmax",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team.championships"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "time.event.end_date"
                }
            ]
        },
        "function": "argmax",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jnq8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jnq8 ns:sports.sports_team.championships ?x .\n?x ns:time.event.end_date ?sk0 .\n}\nORDER BY DESC(xsd:datetime(?sk0))\nLIMIT 1\n",
        "topic_entity": "m.0jnq8",
        "answer": [
            {
                "answer_argument": "m.010fdzhp",
                "answer_type": "Entity",
                "entity_name": "2014 Stanley Cup Finals"
            }
        ],
        "s_expression": "(ARGMAX (JOIN (R sports.sports_team.championships) m.0jnq8) time.event.end_date)",
        "s_expression_processed": "(ARGMAX (JOIN (R sports.sports_team.championships) m.0jnq8) time.event.end_date)"
    },
    {
        "qid": "WebQTest-1724",
        "question": "when did arsenal won the league",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0xbm",
                    "class": "common.topic",
                    "friendly_name": "arsenal",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02_p0",
                    "class": "common.topic",
                    "friendly_name": "FA Cup",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.sports_award_winner.awards"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_award.season"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "sports.sports_award.award"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xbm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xbm ns:sports.sports_award_winner.awards ?y .\n?y ns:sports.sports_award.season ?x .\n?y ns:sports.sports_award.award ns:m.02_p0 .\n}\n",
        "topic_entity": "m.0xbm",
        "answer": [
            {
                "answer_argument": "m.03ntmq0",
                "answer_type": "Entity",
                "entity_name": "2004–05 FA Cup"
            },
            {
                "answer_argument": "m.03qp0n6",
                "answer_type": "Entity",
                "entity_name": "1992–93 FA Cup"
            },
            {
                "answer_argument": "m.03wbzvj",
                "answer_type": "Entity",
                "entity_name": "2002–03 FA Cup"
            },
            {
                "answer_argument": "m.03wcjy2",
                "answer_type": "Entity",
                "entity_name": "2001–02 FA Cup"
            },
            {
                "answer_argument": "m.03wcr3x",
                "answer_type": "Entity",
                "entity_name": "1997–98 FA Cup"
            },
            {
                "answer_argument": "m.04gjljy",
                "answer_type": "Entity",
                "entity_name": "1978–79 FA Cup"
            },
            {
                "answer_argument": "m.04jjvq6",
                "answer_type": "Entity",
                "entity_name": "1970–71 FA Cup"
            },
            {
                "answer_argument": "m.0vptrcs",
                "answer_type": "Entity",
                "entity_name": "2013–14 FA Cup"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_award.season) (AND (JOIN (R sports.sports_award_winner.awards) m.0xbm) (JOIN sports.sports_award.award m.02_p0)))",
        "s_expression_processed": "(JOIN (R sports.sports_award.season) (CONS (JOIN (R sports.sports_award_winner.awards) m.0xbm) sports.sports_award.award m.02_p0))"
    },
    {
        "qid": "WebQTest-1725",
        "question": "what timezone is phoenix az in right now",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d35y",
                    "class": "common.topic",
                    "friendly_name": "phoenix az",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.time_zones"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d35y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d35y ns:location.location.time_zones ?x .\n}\n",
        "topic_entity": "m.0d35y",
        "answer": [
            {
                "answer_argument": "m.02hczc",
                "answer_type": "Entity",
                "entity_name": "Mountain Time Zone"
            }
        ],
        "s_expression": "(JOIN (R location.location.time_zones) m.0d35y)",
        "s_expression_processed": "(JOIN (R location.location.time_zones) m.0d35y)"
    },
    {
        "qid": "WebQTest-1729",
        "question": "what was the name of henry viii first wife",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03p77",
                    "class": "common.topic",
                    "friendly_name": "henry viii",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.spouse"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "people.marriage.from"
                }
            ]
        },
        "function": "argmin",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03p77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03p77 ns:people.person.spouse_s ?y .\n?y ns:people.marriage.spouse ?x .\n?y ns:people.marriage.from ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "topic_entity": "m.03p77",
        "answer": [
            {
                "answer_argument": "m.01_tz",
                "answer_type": "Entity",
                "entity_name": "Catherine of Aragon"
            }
        ],
        "s_expression": "(ARGMIN (JOIN (R people.marriage.spouse) (JOIN (R people.person.spouse_s) m.03p77)) (JOIN (R people.marriage.spouse) people.marriage.from))",
        "s_expression_processed": "(ARGMIN (JOIN (R people.marriage.spouse) (JOIN (R people.person.spouse_s) m.03p77)) (JOIN (R people.marriage.spouse) people.marriage.from))"
    },
    {
        "qid": "WebQTest-1732",
        "question": "where did theodor schwann get his education",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.040000",
                    "class": "common.topic",
                    "friendly_name": "theodor schwann",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.040000)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.040000 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.040000",
        "answer": [
            {
                "answer_argument": "m.01stzp",
                "answer_type": "Entity",
                "entity_name": "Humboldt University of Berlin"
            },
            {
                "answer_argument": "m.03563j",
                "answer_type": "Entity",
                "entity_name": "University of Würzburg"
            },
            {
                "answer_argument": "m.0m7yh",
                "answer_type": "Entity",
                "entity_name": "University of Bonn"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.040000))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.040000))"
    },
    {
        "qid": "WebQTest-1734",
        "question": "what year did houston rockets win their first championship",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0jmfb",
                    "class": "common.topic",
                    "friendly_name": "houston rockets",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "literal",
                    "id": "0^^http://www.w3.org/2001/XMLSchema#int",
                    "class": "common.topic",
                    "friendly_name": "0",
                    "question_node": 0,
                    "function": "argmin",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team.championships"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "time.event.start_date"
                }
            ]
        },
        "function": "argmin",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jmfb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jmfb ns:sports.sports_team.championships ?x .\n?x ns:time.event.start_date ?sk0 .\n}\nORDER BY xsd:datetime(?sk0)\nLIMIT 1\n",
        "topic_entity": "m.0jmfb",
        "answer": [
            {
                "answer_argument": "m.08x9cq",
                "answer_type": "Entity",
                "entity_name": "1994 NBA Finals"
            }
        ],
        "s_expression": "(ARGMIN (JOIN (R sports.sports_team.championships) m.0jmfb) time.event.start_date)",
        "s_expression_processed": "(ARGMIN (JOIN (R sports.sports_team.championships) m.0jmfb) time.event.start_date)"
    },
    {
        "qid": "WebQTest-1737",
        "question": "what movies has liam hemsworth played in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.04yd0fh",
                    "class": "common.topic",
                    "friendly_name": "liam hemsworth",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04yd0fh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04yd0fh ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.04yd0fh",
        "answer": [
            {
                "answer_argument": "m.01222hf6",
                "answer_type": "Entity",
                "entity_name": "By Way of Helena"
            },
            {
                "answer_argument": "m.0123hmcd",
                "answer_type": "Entity",
                "entity_name": "The Dressmaker"
            },
            {
                "answer_argument": "m.0134v4hd",
                "answer_type": "Entity",
                "entity_name": "Draft:Independence Day 2"
            },
            {
                "answer_argument": "m.047v2p4",
                "answer_type": "Entity",
                "entity_name": "Knowing"
            },
            {
                "answer_argument": "m.06_vszc",
                "answer_type": "Entity",
                "entity_name": "Triangle"
            },
            {
                "answer_argument": "m.07ykkx5",
                "answer_type": "Entity",
                "entity_name": "The Last Song"
            },
            {
                "answer_argument": "m.0gffmn8",
                "answer_type": "Entity",
                "entity_name": "The Expendables 2"
            },
            {
                "answer_argument": "m.0gkz15s",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games"
            },
            {
                "answer_argument": "m.0gxtt2w",
                "answer_type": "Entity",
                "entity_name": "Love and Honor"
            },
            {
                "answer_argument": "m.0gxtt3_",
                "answer_type": "Entity",
                "entity_name": "Arabian Nights"
            },
            {
                "answer_argument": "m.0hz6697",
                "answer_type": "Entity",
                "entity_name": "Timeless"
            },
            {
                "answer_argument": "m.0k9390g",
                "answer_type": "Entity",
                "entity_name": "Paranoia"
            },
            {
                "answer_argument": "m.0lcw1gn",
                "answer_type": "Entity",
                "entity_name": "Empire State"
            },
            {
                "answer_argument": "m.0n40qmp",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games: Catching Fire"
            },
            {
                "answer_argument": "m.0ngvsvk",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games: Mockingjay, Part 1"
            },
            {
                "answer_argument": "m.0ngvtb_",
                "answer_type": "Entity",
                "entity_name": "The Hunger Games: Mockingjay, Part 2"
            },
            {
                "answer_argument": "m.0v9rfj5",
                "answer_type": "Entity",
                "entity_name": "Aurora Rising"
            },
            {
                "answer_argument": "m.0wk4knj",
                "answer_type": "Entity",
                "entity_name": "Cut Bank"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.04yd0fh))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.04yd0fh))"
    },
    {
        "qid": "WebQTest-1740",
        "question": "who is angelina jolies brother",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0f4vbz",
                    "class": "common.topic",
                    "friendly_name": "angelina jolies",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.05zppz",
                    "class": "common.topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1,
                    "friendly_name": "male"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.sibling_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.sibling_relationship.sibling"
                },
                {
                    "start": 0,
                    "end": 3,
                    "relation": "people.person.gender"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f4vbz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f4vbz ns:people.person.sibling_s ?y .\n?y ns:people.sibling_relationship.sibling ?x .\n?x ns:people.person.gender ns:m.05zppz .\n}\n",
        "topic_entity": "m.0f4vbz",
        "answer": [
            {
                "answer_argument": "m.01mqg0",
                "answer_type": "Entity",
                "entity_name": "James Haven"
            }
        ],
        "s_expression": "(AND (JOIN (R people.sibling_relationship.sibling) (JOIN (R people.person.sibling_s) m.0f4vbz)) (JOIN people.person.gender m.05zppz))",
        "s_expression_processed": "(CONS (JOIN (R people.sibling_relationship.sibling) (JOIN (R people.person.sibling_s) m.0f4vbz)) people.person.gender m.05zppz)"
    },
    {
        "qid": "WebQTest-1741",
        "question": "where is the headquarters of bank of america",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01yx7f",
                    "class": "common.topic",
                    "friendly_name": "bank of america",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "organization.organization.headquarters"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.mailing_address.citytown"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01yx7f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01yx7f ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "topic_entity": "m.01yx7f",
        "answer": [
            {
                "answer_argument": "m.0fsb8",
                "answer_type": "Entity",
                "entity_name": "Charlotte"
            }
        ],
        "s_expression": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.01yx7f))",
        "s_expression_processed": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.01yx7f))"
    },
    {
        "qid": "WebQTest-1752",
        "question": "what did f. scott fitzgerald do",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02zjd",
                    "class": "common.topic",
                    "friendly_name": "f. scott fitzgerald",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.profession"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02zjd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02zjd ns:people.person.profession ?x .\n}\n",
        "topic_entity": "m.02zjd",
        "answer": [
            {
                "answer_argument": "m.02xhgwq",
                "answer_type": "Entity",
                "entity_name": "Novelist"
            },
            {
                "answer_argument": "m.05z96",
                "answer_type": "Entity",
                "entity_name": "Poet"
            },
            {
                "answer_argument": "m.0cbd2",
                "answer_type": "Entity",
                "entity_name": "Writer"
            }
        ],
        "s_expression": "(JOIN (R people.person.profession) m.02zjd)",
        "s_expression_processed": "(JOIN (R people.person.profession) m.02zjd)"
    },
    {
        "qid": "WebQTest-1757",
        "question": "what did michael crabtree do",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03ccsym",
                    "class": "common.topic",
                    "friendly_name": "michael crabtree",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "american_football.football_player.position_s"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:american_football.football_player.position_s ?x .\n}\n",
        "topic_entity": "m.03ccsym",
        "answer": [
            {
                "answer_argument": "m.02g_6x",
                "answer_type": "Entity",
                "entity_name": "Wide receiver"
            }
        ],
        "s_expression": "(JOIN (R american_football.football_player.position_s) m.03ccsym)",
        "s_expression_processed": "(JOIN (R american_football.football_player.position_s) m.03ccsym)"
    },
    {
        "qid": "WebQTest-1758",
        "question": "where do they speak afrikaans",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0x82",
                    "class": "common.topic",
                    "friendly_name": "afrikaans",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "language.human_language.countries_spoken_in"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0x82)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0x82 ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "topic_entity": "m.0x82",
        "answer": [
            {
                "answer_argument": "m.0166v",
                "answer_type": "Entity",
                "entity_name": "Botswana"
            },
            {
                "answer_argument": "m.016p5p",
                "answer_type": "Entity",
                "entity_name": "Transkei"
            },
            {
                "answer_argument": "m.04tr1",
                "answer_type": "Entity",
                "entity_name": "Malawi"
            },
            {
                "answer_argument": "m.05bmq",
                "answer_type": "Entity",
                "entity_name": "Namibia"
            },
            {
                "answer_argument": "m.065skb",
                "answer_type": "Entity",
                "entity_name": "Gazankulu"
            },
            {
                "answer_argument": "m.088vb",
                "answer_type": "Entity",
                "entity_name": "Zambia"
            }
        ],
        "s_expression": "(JOIN (R language.human_language.countries_spoken_in) m.0x82)",
        "s_expression_processed": "(JOIN (R language.human_language.countries_spoken_in) m.0x82)"
    },
    {
        "qid": "WebQTest-1759",
        "question": "what 3 states border florida",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.us_state",
                    "class": "location.us_state",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02xry",
                    "class": "common.topic",
                    "friendly_name": "florida",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "location.location.adjoin_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.adjoining_relationship.adjoins"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02xry)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02xry ns:location.location.adjoin_s ?y .\n?y ns:location.adjoining_relationship.adjoins ?x .\n?x ns:common.topic.notable_types ns:m.0kpys4 .\n}\n",
        "topic_entity": "m.02xry",
        "answer": [
            {
                "answer_argument": "m.0d0x8",
                "answer_type": "Entity",
                "entity_name": "Georgia"
            },
            {
                "answer_argument": "m.0gyh",
                "answer_type": "Entity",
                "entity_name": "Alabama"
            }
        ],
        "s_expression": "(AND location.us_state (JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.02xry)))",
        "s_expression_processed": "(AND location.us_state (JOIN (R location.adjoining_relationship.adjoins) (JOIN (R location.location.adjoin_s) m.02xry)))"
    },
    {
        "qid": "WebQTest-1760",
        "question": "who plays ziva david on ncis",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.093xn8",
                    "class": "common.topic",
                    "friendly_name": "ziva david",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.03m8sg",
                    "class": "common.topic",
                    "friendly_name": "NCIS",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_character.appeared_in_tv_program"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "tv.regular_tv_appearance.series"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.093xn8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.093xn8 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.03m8sg .\n}\n",
        "topic_entity": "m.093xn8",
        "answer": [
            {
                "answer_argument": "m.0cpd76",
                "answer_type": "Entity",
                "entity_name": "Cote de Pablo"
            }
        ],
        "s_expression": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_character.appeared_in_tv_program) m.093xn8) (JOIN tv.regular_tv_appearance.series m.03m8sg)))",
        "s_expression_processed": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_character.appeared_in_tv_program) m.093xn8) (JOIN tv.regular_tv_appearance.series m.03m8sg)))"
    },
    {
        "qid": "WebQTest-1767",
        "question": "where was martin luther king jr buried",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.051cc",
                    "class": "common.topic",
                    "friendly_name": "martin luther king jr",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.place_of_burial"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.051cc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.051cc ns:people.deceased_person.place_of_burial ?x .\n}\n",
        "topic_entity": "m.051cc",
        "answer": [
            {
                "answer_argument": "m.050my1",
                "answer_type": "Entity",
                "entity_name": "Martin Luther King, Jr. National Historic Site"
            }
        ],
        "s_expression": "(JOIN (R people.deceased_person.place_of_burial) m.051cc)",
        "s_expression_processed": "(JOIN (R people.deceased_person.place_of_burial) m.051cc)"
    },
    {
        "qid": "WebQTest-1771",
        "question": "what is the islamic belief",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0flw86",
                    "class": "common.topic",
                    "friendly_name": "islamic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "religion.religion.beliefs"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0flw86)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0flw86 ns:religion.religion.beliefs ?x .\n}\n",
        "topic_entity": "m.0flw86",
        "answer": [
            {
                "answer_argument": "m.019vqj",
                "answer_type": "Entity",
                "entity_name": "Mahdi"
            },
            {
                "answer_argument": "m.01bbmp",
                "answer_type": "Entity",
                "entity_name": "Tawhid"
            },
            {
                "answer_argument": "m.024b22",
                "answer_type": "Entity",
                "entity_name": "Prophets in Islam"
            },
            {
                "answer_argument": "m.025w817",
                "answer_type": "Entity",
                "entity_name": "Predestination in Islam"
            },
            {
                "answer_argument": "m.02wvcg4",
                "answer_type": "Entity",
                "entity_name": "Entering Heaven alive"
            },
            {
                "answer_argument": "m.04xy3",
                "answer_type": "Entity",
                "entity_name": "Monotheism"
            },
            {
                "answer_argument": "m.0698fs",
                "answer_type": "Entity",
                "entity_name": "Islamic view of angels"
            },
            {
                "answer_argument": "m.06rvp0",
                "answer_type": "Entity",
                "entity_name": "Qiyamah"
            },
            {
                "answer_argument": "m.074hw",
                "answer_type": "Entity",
                "entity_name": "Sharia"
            },
            {
                "answer_argument": "m.07bfrc",
                "answer_type": "Entity",
                "entity_name": "Masih ad-Dajjal"
            },
            {
                "answer_argument": "m.07r6vw",
                "answer_type": "Entity",
                "entity_name": "Islamic holy books"
            },
            {
                "answer_argument": "m.09kb_2",
                "answer_type": "Entity",
                "entity_name": "God in Islam"
            },
            {
                "answer_argument": "m.0hr6vbp",
                "answer_type": "Entity",
                "entity_name": "Ṭūbā"
            }
        ],
        "s_expression": "(JOIN (R religion.religion.beliefs) m.0flw86)",
        "s_expression_processed": "(JOIN (R religion.religion.beliefs) m.0flw86)"
    },
    {
        "qid": "WebQTest-1776",
        "question": "where are the sahara desert located",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01w1vt",
                    "class": "common.topic",
                    "friendly_name": "sahara desert",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01w1vt)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01w1vt ns:location.location.containedby ?x .\n}\n",
        "topic_entity": "m.01w1vt",
        "answer": [
            {
                "answer_argument": "m.05g2v",
                "answer_type": "Entity",
                "entity_name": "North Africa"
            }
        ],
        "s_expression": "(JOIN (R location.location.containedby) m.01w1vt)",
        "s_expression_processed": "(JOIN (R location.location.containedby) m.01w1vt)"
    },
    {
        "qid": "WebQTest-1777",
        "question": "what is rihanna mum called",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.06mt91",
                    "class": "common.topic",
                    "friendly_name": "rihanna",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02zsn",
                    "class": "common.topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1,
                    "friendly_name": "female"
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.parents"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "people.person.gender"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06mt91)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06mt91 ns:people.person.parents ?x .\n?x ns:people.person.gender ns:m.02zsn .\n}\n",
        "topic_entity": "m.06mt91",
        "answer": [
            {
                "answer_argument": "m.0h30zg_",
                "answer_type": "Entity",
                "entity_name": "Monica Braithwaite"
            }
        ],
        "s_expression": "(AND (JOIN (R people.person.parents) m.06mt91) (JOIN people.person.gender m.02zsn))",
        "s_expression_processed": "(CONS (JOIN (R people.person.parents) m.06mt91) people.person.gender m.02zsn)"
    },
    {
        "qid": "WebQTest-1788",
        "question": "what artistic style did henri rousseau work in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02rdf6",
                    "class": "common.topic",
                    "friendly_name": "henri rousseau",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "visual_art.visual_artist.associated_periods_or_movements"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02rdf6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02rdf6 ns:visual_art.visual_artist.associated_periods_or_movements ?x .\n}\n",
        "topic_entity": "m.02rdf6",
        "answer": [
            {
                "answer_argument": "m.015r61",
                "answer_type": "Entity",
                "entity_name": "Modern art"
            },
            {
                "answer_argument": "m.015xrq",
                "answer_type": "Entity",
                "entity_name": "Post-Impressionism"
            },
            {
                "answer_argument": "m.01b8q0",
                "answer_type": "Entity",
                "entity_name": "Naïve art"
            },
            {
                "answer_argument": "m.06s0d7",
                "answer_type": "Entity",
                "entity_name": "Primitivism"
            }
        ],
        "s_expression": "(JOIN (R visual_art.visual_artist.associated_periods_or_movements) m.02rdf6)",
        "s_expression_processed": "(JOIN (R visual_art.visual_artist.associated_periods_or_movements) m.02rdf6)"
    },
    {
        "qid": "WebQTest-1790",
        "question": "where was huey newton killed",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.018y0w",
                    "class": "common.topic",
                    "friendly_name": "huey newton",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.deceased_person.place_of_death"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.018y0w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.018y0w ns:people.deceased_person.place_of_death ?x .\n}\n",
        "topic_entity": "m.018y0w",
        "answer": [
            {
                "answer_argument": "m.0dc95",
                "answer_type": "Entity",
                "entity_name": "Oakland"
            }
        ],
        "s_expression": "(JOIN (R people.deceased_person.place_of_death) m.018y0w)",
        "s_expression_processed": "(JOIN (R people.deceased_person.place_of_death) m.018y0w)"
    },
    {
        "qid": "WebQTest-1804",
        "question": "what do people speak in uk",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.07ssc",
                    "class": "common.topic",
                    "friendly_name": "uk",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.languages_spoken"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.languages_spoken ?x .\n}\n",
        "topic_entity": "m.07ssc",
        "answer": [
            {
                "answer_argument": "m.01v0g",
                "answer_type": "Entity",
                "entity_name": "Cornish Language"
            },
            {
                "answer_argument": "m.02h40lc",
                "answer_type": "Entity",
                "entity_name": "English Language"
            },
            {
                "answer_argument": "m.02jcw",
                "answer_type": "Entity",
                "entity_name": "Esperanto Language"
            },
            {
                "answer_argument": "m.03x42",
                "answer_type": "Entity",
                "entity_name": "Irish"
            },
            {
                "answer_argument": "m.070zw",
                "answer_type": "Entity",
                "entity_name": "Scottish Gaelic"
            },
            {
                "answer_argument": "m.083tk",
                "answer_type": "Entity",
                "entity_name": "Welsh Language"
            },
            {
                "answer_argument": "m.0ct8m",
                "answer_type": "Entity",
                "entity_name": "British Sign Language"
            },
            {
                "answer_argument": "m.0h407",
                "answer_type": "Entity",
                "entity_name": "Scots Language"
            }
        ],
        "s_expression": "(JOIN (R location.country.languages_spoken) m.07ssc)",
        "s_expression_processed": "(JOIN (R location.country.languages_spoken) m.07ssc)"
    },
    {
        "qid": "WebQTest-1806",
        "question": "what position did lebron james play",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01jz6d",
                    "class": "common.topic",
                    "friendly_name": "lebron james",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "basketball.basketball_player.position_s"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:basketball.basketball_player.position_s ?x .\n}\n",
        "topic_entity": "m.01jz6d",
        "answer": [
            {
                "answer_argument": "m.01pv51",
                "answer_type": "Entity",
                "entity_name": "Power forward"
            },
            {
                "answer_argument": "m.0355dz",
                "answer_type": "Entity",
                "entity_name": "Small forward"
            },
            {
                "answer_argument": "m.03ww62",
                "answer_type": "Entity",
                "entity_name": "Point forward"
            }
        ],
        "s_expression": "(JOIN (R basketball.basketball_player.position_s) m.01jz6d)",
        "s_expression_processed": "(JOIN (R basketball.basketball_player.position_s) m.01jz6d)"
    },
    {
        "qid": "WebQTest-1808",
        "question": "who is the president of peru now",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.016wzw",
                    "class": "common.topic",
                    "friendly_name": "peru",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "government.government_position_held.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.060c4",
                    "class": "common.topic",
                    "friendly_name": "President",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.basic_title"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016wzw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016wzw ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.basic_title ns:m.060c4 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.016wzw",
        "answer": [
            {
                "answer_argument": "m.0d2m0y",
                "answer_type": "Entity",
                "entity_name": "Ollanta Humala"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (AND (JOIN (R government.governmental_jurisdiction.governing_officials) m.016wzw) (JOIN government.government_position_held.basic_title m.060c4)) government.government_position_held.from NOW))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (CONS (JOIN (R government.governmental_jurisdiction.governing_officials) m.016wzw) government.government_position_held.basic_title m.060c4) government.government_position_held.from NOW))"
    },
    {
        "qid": "WebQTest-1811",
        "question": "who are the senators of new jersey now",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05fjf",
                    "class": "common.topic",
                    "friendly_name": "new jersey",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        "NOW",
                        "government.government_position_held.from"
                    ]
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.07t58",
                    "class": "common.topic",
                    "friendly_name": "United States Senate",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.political_district.representatives"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.office_holder"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "government.government_position_held.governmental_body"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fjf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fjf ns:government.political_district.representatives ?y .\n?y ns:government.government_position_held.office_holder ?x .\n?y ns:government.government_position_held.governmental_body ns:m.07t58 .\nFILTER(NOT EXISTS {?y ns:government.government_position_held.from ?sk0} || \nEXISTS {?y ns:government.government_position_held.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:government.government_position_held.to ?sk2} || \nEXISTS {?y ns:government.government_position_held.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.05fjf",
        "answer": [
            {
                "answer_argument": "m.033d3p",
                "answer_type": "Entity",
                "entity_name": "Bob Menendez"
            },
            {
                "answer_argument": "m.06p430",
                "answer_type": "Entity",
                "entity_name": "Cory Booker"
            }
        ],
        "s_expression": "(JOIN (R government.government_position_held.office_holder) (TC (AND (JOIN (R government.political_district.representatives) m.05fjf) (JOIN government.government_position_held.governmental_body m.07t58)) government.government_position_held.from NOW))",
        "s_expression_processed": "(JOIN (R government.government_position_held.office_holder) (TC (CONS (JOIN (R government.political_district.representatives) m.05fjf) government.government_position_held.governmental_body m.07t58) government.government_position_held.from NOW))"
    },
    {
        "qid": "WebQTest-1813",
        "question": "what team does messi play for 2011",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06qjgc",
                    "class": "common.topic",
                    "friendly_name": "messi",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": [
                        2011,
                        "sports.sports_team_roster.from"
                    ]
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.pro_athlete.teams"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_team_roster.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06qjgc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06qjgc ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.team ?x .\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.from ?sk0} || \nEXISTS {?y ns:sports.sports_team_roster.from ?sk1 . \nFILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) })\nFILTER(NOT EXISTS {?y ns:sports.sports_team_roster.to ?sk2} || \nEXISTS {?y ns:sports.sports_team_roster.to ?sk3 . \nFILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) })\n}\n",
        "topic_entity": "m.06qjgc",
        "answer": [
            {
                "answer_argument": "m.02bh_v",
                "answer_type": "Entity",
                "entity_name": "Argentina national football team"
            },
            {
                "answer_argument": "m.0hvgt",
                "answer_type": "Entity",
                "entity_name": "FC Barcelona"
            }
        ],
        "s_expression": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.06qjgc) sports.sports_team_roster.from 2011))",
        "s_expression_processed": "(JOIN (R sports.sports_team_roster.team) (TC (JOIN (R sports.pro_athlete.teams) m.06qjgc) sports.sports_team_roster.from 2011))"
    },
    {
        "qid": "WebQTest-1815",
        "question": "where does lil wayne go to school",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.016kjs",
                    "class": "common.topic",
                    "friendly_name": "lil wayne",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.016kjs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.016kjs ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.016kjs",
        "answer": [
            {
                "answer_argument": "m.02gnrt",
                "answer_type": "Entity",
                "entity_name": "University of Phoenix"
            },
            {
                "answer_argument": "m.02gr81",
                "answer_type": "Entity",
                "entity_name": "University of Houston"
            },
            {
                "answer_argument": "m.075_jk3",
                "answer_type": "Entity",
                "entity_name": "Lafayette Elementary School"
            },
            {
                "answer_argument": "m.076qq2_",
                "answer_type": "Entity",
                "entity_name": "Mcmain Magnet Secondary School"
            },
            {
                "answer_argument": "m.0h2_zh0",
                "answer_type": "Entity",
                "entity_name": "Eleanor McMain Secondary School"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.016kjs))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.016kjs))"
    },
    {
        "qid": "WebQTest-1818",
        "question": "what state is saint louis university in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "location.us_state",
                    "class": "location.us_state",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02tz9z",
                    "class": "common.topic",
                    "friendly_name": "saint louis university",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02tz9z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02tz9z ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpys4 .\n}\n",
        "topic_entity": "m.02tz9z",
        "answer": [
            {
                "answer_argument": "m.04ych",
                "answer_type": "Entity",
                "entity_name": "Missouri"
            }
        ],
        "s_expression": "(AND location.us_state (JOIN (R location.location.containedby) m.02tz9z))",
        "s_expression_processed": "(AND location.us_state (JOIN (R location.location.containedby) m.02tz9z))"
    },
    {
        "qid": "WebQTest-1823",
        "question": "what government does iraq use",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d05q4",
                    "class": "common.topic",
                    "friendly_name": "iraq",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.form_of_government"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d05q4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d05q4 ns:location.country.form_of_government ?x .\n}\n",
        "topic_entity": "m.0d05q4",
        "answer": [
            {
                "answer_argument": "m.018wl5",
                "answer_type": "Entity",
                "entity_name": "Parliamentary system"
            },
            {
                "answer_argument": "m.06cx9",
                "answer_type": "Entity",
                "entity_name": "Republic"
            },
            {
                "answer_argument": "m.0glnsx",
                "answer_type": "Entity",
                "entity_name": "Parliamentary republic"
            },
            {
                "answer_argument": "m.0j729",
                "answer_type": "Entity",
                "entity_name": "Federal republic"
            }
        ],
        "s_expression": "(JOIN (R location.country.form_of_government) m.0d05q4)",
        "s_expression_processed": "(JOIN (R location.country.form_of_government) m.0d05q4)"
    },
    {
        "qid": "WebQTest-1853",
        "question": "what made richard hammond famous",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.02508x",
                    "class": "common.topic",
                    "friendly_name": "richard hammond",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.person.profession"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02508x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02508x ns:people.person.profession ?x .\n}\n",
        "topic_entity": "m.02508x",
        "answer": [
            {
                "answer_argument": "m.015cjr",
                "answer_type": "Entity",
                "entity_name": "Presenter"
            },
            {
                "answer_argument": "m.01tkqy",
                "answer_type": "Entity",
                "entity_name": "Stunt Performer"
            },
            {
                "answer_argument": "m.03gjzk",
                "answer_type": "Entity",
                "entity_name": "Television producer"
            },
            {
                "answer_argument": "m.08z956",
                "answer_type": "Entity",
                "entity_name": "Radio personality"
            },
            {
                "answer_argument": "m.0cbd2",
                "answer_type": "Entity",
                "entity_name": "Writer"
            },
            {
                "answer_argument": "m.0d8qb",
                "answer_type": "Entity",
                "entity_name": "Journalist"
            },
            {
                "answer_argument": "m.0dxtg",
                "answer_type": "Entity",
                "entity_name": "Screenwriter"
            },
            {
                "answer_argument": "m.0kyk",
                "answer_type": "Entity",
                "entity_name": "Author"
            },
            {
                "answer_argument": "m.0np9r",
                "answer_type": "Entity",
                "entity_name": "Voice Actor"
            }
        ],
        "s_expression": "(JOIN (R people.person.profession) m.02508x)",
        "s_expression_processed": "(JOIN (R people.person.profession) m.02508x)"
    },
    {
        "qid": "WebQTest-1854",
        "question": "who originally voiced lois griffin",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03pcqz",
                    "class": "common.topic",
                    "friendly_name": "lois griffin",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.02nsjvf",
                    "class": "common.topic",
                    "friendly_name": "Voice",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 1
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film_character.portrayed_in_films"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.special_performance_type"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03pcqz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03pcqz ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.special_performance_type ns:m.02nsjvf .\n}\n",
        "topic_entity": "m.03pcqz",
        "answer": [
            {
                "answer_argument": "m.03jldb",
                "answer_type": "Entity",
                "entity_name": "Alex Borstein"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film_character.portrayed_in_films) m.03pcqz) (JOIN film.performance.special_performance_type m.02nsjvf)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (CONS (JOIN (R film.film_character.portrayed_in_films) m.03pcqz) film.performance.special_performance_type m.02nsjvf))"
    },
    {
        "qid": "WebQTest-1855",
        "question": "what airport do you fly into in paris",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "aviation.airport",
                    "class": "aviation.airport",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.05qtj",
                    "class": "common.topic",
                    "friendly_name": "paris",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "travel.travel_destination.how_to_get_here"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "travel.transportation.transport_terminus"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05qtj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05qtj ns:travel.travel_destination.how_to_get_here ?y .\n?y ns:travel.transportation.transport_terminus ?x .\n?x ns:common.topic.notable_types ns:m.01xpjyz .\n}\n",
        "topic_entity": "m.05qtj",
        "answer": [
            {
                "answer_argument": "m.01l525",
                "answer_type": "Entity",
                "entity_name": "Paris Orly Airport"
            },
            {
                "answer_argument": "m.0qk79",
                "answer_type": "Entity",
                "entity_name": "Charles de Gaulle Airport"
            }
        ],
        "s_expression": "(AND aviation.airport (JOIN (R travel.transportation.transport_terminus) (JOIN (R travel.travel_destination.how_to_get_here) m.05qtj)))",
        "s_expression_processed": "(AND aviation.airport (JOIN (R travel.transportation.transport_terminus) (JOIN (R travel.travel_destination.how_to_get_here) m.05qtj)))"
    },
    {
        "qid": "WebQTest-1864",
        "question": "who plays the role of tony dinozzo on ncis",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.07wp25",
                    "class": "common.topic",
                    "friendly_name": "tony dinozzo",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.03m8sg",
                    "class": "common.topic",
                    "friendly_name": "NCIS",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "tv.tv_character.appeared_in_tv_program"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "tv.regular_tv_appearance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "tv.regular_tv_appearance.series"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07wp25)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07wp25 ns:tv.tv_character.appeared_in_tv_program ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.series ns:m.03m8sg .\n}\n",
        "topic_entity": "m.07wp25",
        "answer": [
            {
                "answer_argument": "m.0578mx",
                "answer_type": "Entity",
                "entity_name": "Michael Weatherly"
            }
        ],
        "s_expression": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_character.appeared_in_tv_program) m.07wp25) (JOIN tv.regular_tv_appearance.series m.03m8sg)))",
        "s_expression_processed": "(JOIN (R tv.regular_tv_appearance.actor) (AND (JOIN (R tv.tv_character.appeared_in_tv_program) m.07wp25) (JOIN tv.regular_tv_appearance.series m.03m8sg)))"
    },
    {
        "qid": "WebQTest-1870",
        "question": "what movies did david carradine play in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02p5hf",
                    "class": "common.topic",
                    "friendly_name": "david carradine",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02p5hf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02p5hf ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.02p5hf",
        "answer": [
            {
                "answer_argument": "m.011pzwg5",
                "answer_type": "Entity",
                "entity_name": "Kill Bill: The Whole Bloody Affair"
            },
            {
                "answer_argument": "m.0134lcx0",
                "answer_type": "Entity",
                "entity_name": "Nowhere to Run"
            },
            {
                "answer_argument": "m.01rxyb",
                "answer_type": "Entity",
                "entity_name": "Kill Bill Volume 1"
            },
            {
                "answer_argument": "m.01xrqm9",
                "answer_type": "Entity",
                "entity_name": "Crime Zone"
            },
            {
                "answer_argument": "m.0272qjg",
                "answer_type": "Entity",
                "entity_name": "Hair High"
            },
            {
                "answer_argument": "m.0272v9w",
                "answer_type": "Entity",
                "entity_name": "The Golden Boys"
            },
            {
                "answer_argument": "m.0274g5q",
                "answer_type": "Entity",
                "entity_name": "Crime School"
            },
            {
                "answer_argument": "m.027grw3",
                "answer_type": "Entity",
                "entity_name": "Last Hour"
            },
            {
                "answer_argument": "m.027t7gk",
                "answer_type": "Entity",
                "entity_name": "Mr. Horn"
            },
            {
                "answer_argument": "m.02qds4w",
                "answer_type": "Entity",
                "entity_name": "Deathsport"
            },
            {
                "answer_argument": "m.02qjtml",
                "answer_type": "Entity",
                "entity_name": "Evil Toons"
            },
            {
                "answer_argument": "m.02qp9s8",
                "answer_type": "Entity",
                "entity_name": "Archie's Final Project"
            },
            {
                "answer_argument": "m.02r96lm",
                "answer_type": "Entity",
                "entity_name": "Last Stand at Saber River"
            },
            {
                "answer_argument": "m.02vr32y",
                "answer_type": "Entity",
                "entity_name": "Fall Down Dead"
            },
            {
                "answer_argument": "m.02z46bf",
                "answer_type": "Entity",
                "entity_name": "Fuego"
            },
            {
                "answer_argument": "m.03gtwh_",
                "answer_type": "Entity",
                "entity_name": "Crank: High Voltage"
            },
            {
                "answer_argument": "m.03zndp",
                "answer_type": "Entity",
                "entity_name": "Death Race 2000"
            },
            {
                "answer_argument": "m.047g4lw",
                "answer_type": "Entity",
                "entity_name": "Circle of Iron"
            },
            {
                "answer_argument": "m.047p6w8",
                "answer_type": "Entity",
                "entity_name": "Trick or Treats"
            },
            {
                "answer_argument": "m.04gsxgr",
                "answer_type": "Entity",
                "entity_name": "The Outsider"
            },
            {
                "answer_argument": "m.04gvw_z",
                "answer_type": "Entity",
                "entity_name": "Martial Law"
            },
            {
                "answer_argument": "m.04j08hn",
                "answer_type": "Entity",
                "entity_name": "Naked Movie"
            },
            {
                "answer_argument": "m.04j0q52",
                "answer_type": "Entity",
                "entity_name": "Criminal Desire"
            },
            {
                "answer_argument": "m.04j0qqp",
                "answer_type": "Entity",
                "entity_name": "Final Move"
            },
            {
                "answer_argument": "m.04j0yld",
                "answer_type": "Entity",
                "entity_name": "The Last Sect"
            },
            {
                "answer_argument": "m.04j1d9l",
                "answer_type": "Entity",
                "entity_name": "Brothers in Arms"
            },
            {
                "answer_argument": "m.04j1xrt",
                "answer_type": "Entity",
                "entity_name": "Future Force"
            },
            {
                "answer_argument": "m.04j21g6",
                "answer_type": "Entity",
                "entity_name": "The Monster Hunter"
            },
            {
                "answer_argument": "m.04j26sc",
                "answer_type": "Entity",
                "entity_name": "Kiss of a Stranger"
            },
            {
                "answer_argument": "m.04j29v0",
                "answer_type": "Entity",
                "entity_name": "Kill Zone"
            },
            {
                "answer_argument": "m.04j2mhm",
                "answer_type": "Entity",
                "entity_name": "Capital Punishment"
            },
            {
                "answer_argument": "m.04j2q8v",
                "answer_type": "Entity",
                "entity_name": "Macon County Jail"
            },
            {
                "answer_argument": "m.04j2sfx",
                "answer_type": "Entity",
                "entity_name": "Guaranteed on Delivery"
            },
            {
                "answer_argument": "m.04j2zp2",
                "answer_type": "Entity",
                "entity_name": "Cybercity"
            },
            {
                "answer_argument": "m.04j2zx0",
                "answer_type": "Entity",
                "entity_name": "Code Name Jaguar"
            },
            {
                "answer_argument": "m.04j34y2",
                "answer_type": "Entity",
                "entity_name": "Project Eliminator"
            },
            {
                "answer_argument": "m.04j3579",
                "answer_type": "Entity",
                "entity_name": "Knocking On Death's Door"
            },
            {
                "answer_argument": "m.04jgfgc",
                "answer_type": "Entity",
                "entity_name": "Thunder and Lightning"
            },
            {
                "answer_argument": "m.04lgl2y",
                "answer_type": "Entity",
                "entity_name": "Tropical Snow"
            },
            {
                "answer_argument": "m.04p2fy8",
                "answer_type": "Entity",
                "entity_name": "Camille"
            },
            {
                "answer_argument": "m.04ssf",
                "answer_type": "Entity",
                "entity_name": "Mean Streets"
            },
            {
                "answer_argument": "m.057myy",
                "answer_type": "Entity",
                "entity_name": "The Serpent's Egg"
            },
            {
                "answer_argument": "m.05b4l67",
                "answer_type": "Entity",
                "entity_name": "Being Michael Madsen"
            },
            {
                "answer_argument": "m.05c2853",
                "answer_type": "Entity",
                "entity_name": "Son of the Dragon"
            },
            {
                "answer_argument": "m.05f3y96",
                "answer_type": "Entity",
                "entity_name": "Absolute Evil"
            },
            {
                "answer_argument": "m.05f5pjd",
                "answer_type": "Entity",
                "entity_name": "Maybe I'll Come Home in the Spring"
            },
            {
                "answer_argument": "m.05p89nk",
                "answer_type": "Entity",
                "entity_name": "American Reel"
            },
            {
                "answer_argument": "m.06_v8dw",
                "answer_type": "Entity",
                "entity_name": "I Saw What You Did"
            },
            {
                "answer_argument": "m.062rrj",
                "answer_type": "Entity",
                "entity_name": "Boxcar Bertha"
            },
            {
                "answer_argument": "m.06k4hw",
                "answer_type": "Entity",
                "entity_name": "Cannonball"
            },
            {
                "answer_argument": "m.06qxmj",
                "answer_type": "Entity",
                "entity_name": "Out of the Wilderness"
            },
            {
                "answer_argument": "m.078mng",
                "answer_type": "Entity",
                "entity_name": "Hell Ride"
            },
            {
                "answer_argument": "m.07d83t",
                "answer_type": "Entity",
                "entity_name": "The Long Riders"
            },
            {
                "answer_argument": "m.07dvtc",
                "answer_type": "Entity",
                "entity_name": "Lone Wolf McQuade"
            },
            {
                "answer_argument": "m.07gns9",
                "answer_type": "Entity",
                "entity_name": "Gray Lady Down"
            },
            {
                "answer_argument": "m.07gp3w",
                "answer_type": "Entity",
                "entity_name": "An American Tail: The Treasure of Manhattan Island"
            },
            {
                "answer_argument": "m.07k7bh0",
                "answer_type": "Entity",
                "entity_name": "Nowhere to Run"
            },
            {
                "answer_argument": "m.07kf0d4",
                "answer_type": "Entity",
                "entity_name": "True Legend"
            },
            {
                "answer_argument": "m.07yb1s",
                "answer_type": "Entity",
                "entity_name": "The Ultimate Enemy"
            },
            {
                "answer_argument": "m.083vqj",
                "answer_type": "Entity",
                "entity_name": "Homo Erectus"
            },
            {
                "answer_argument": "m.08y5wd",
                "answer_type": "Entity",
                "entity_name": "Q"
            },
            {
                "answer_argument": "m.09k51yg",
                "answer_type": "Entity",
                "entity_name": "Treasure Raiders"
            },
            {
                "answer_argument": "m.09v17dd",
                "answer_type": "Entity",
                "entity_name": "The Rage"
            },
            {
                "answer_argument": "m.0b__16q",
                "answer_type": "Entity",
                "entity_name": "Americana"
            },
            {
                "answer_argument": "m.0b6k13z",
                "answer_type": "Entity",
                "entity_name": "Safari 3000"
            },
            {
                "answer_argument": "m.0b6lpbm",
                "answer_type": "Entity",
                "entity_name": "Kandisha"
            },
            {
                "answer_argument": "m.0bc9_3",
                "answer_type": "Entity",
                "entity_name": "Taggart"
            },
            {
                "answer_argument": "m.0bcb9g",
                "answer_type": "Entity",
                "entity_name": "Richard III"
            },
            {
                "answer_argument": "m.0bcbhg",
                "answer_type": "Entity",
                "entity_name": "Kung Fu: The Movie"
            },
            {
                "answer_argument": "m.0bf4gtj",
                "answer_type": "Entity",
                "entity_name": "Brotherhood of the Gun"
            },
            {
                "answer_argument": "m.0bh7jby",
                "answer_type": "Entity",
                "entity_name": "Try This One for Size"
            },
            {
                "answer_argument": "m.0bq8tr",
                "answer_type": "Entity",
                "entity_name": "Bird on a Wire"
            },
            {
                "answer_argument": "m.0bs16n",
                "answer_type": "Entity",
                "entity_name": "Balto II: Wolf Quest"
            },
            {
                "answer_argument": "m.0bx_71h",
                "answer_type": "Entity",
                "entity_name": "The Good Guys and the Bad Guys"
            },
            {
                "answer_argument": "m.0bx_s9v",
                "answer_type": "Entity",
                "entity_name": "Behind Enemy Lines"
            },
            {
                "answer_argument": "m.0bxz0c1",
                "answer_type": "Entity",
                "entity_name": "High Noon, Part II: The Return of Will Kane"
            },
            {
                "answer_argument": "m.0c1c2yt",
                "answer_type": "Entity",
                "entity_name": "Midnight Fear"
            },
            {
                "answer_argument": "m.0c3yq5d",
                "answer_type": "Entity",
                "entity_name": "Macho Callahan"
            },
            {
                "answer_argument": "m.0c41y5f",
                "answer_type": "Entity",
                "entity_name": "Permanent Vacation"
            },
            {
                "answer_argument": "m.0c7y2c",
                "answer_type": "Entity",
                "entity_name": "Dead & Breakfast"
            },
            {
                "answer_argument": "m.0clhj5",
                "answer_type": "Entity",
                "entity_name": "Big Stan"
            },
            {
                "answer_argument": "m.0crr_yx",
                "answer_type": "Entity",
                "entity_name": "Bad Cop"
            },
            {
                "answer_argument": "m.0crrb94",
                "answer_type": "Entity",
                "entity_name": "Starz Inside: Unforgettably Evil"
            },
            {
                "answer_argument": "m.0crrckw",
                "answer_type": "Entity",
                "entity_name": "Future Zone"
            },
            {
                "answer_argument": "m.0crrj82",
                "answer_type": "Entity",
                "entity_name": "Night of the Templar"
            },
            {
                "answer_argument": "m.0crrl_t",
                "answer_type": "Entity",
                "entity_name": "Nightfall"
            },
            {
                "answer_argument": "m.0crrsd4",
                "answer_type": "Entity",
                "entity_name": "Miracle at Sage Creek"
            },
            {
                "answer_argument": "m.0crrwjq",
                "answer_type": "Entity",
                "entity_name": "Armed Response"
            },
            {
                "answer_argument": "m.0crrwl7",
                "answer_type": "Entity",
                "entity_name": "Warlords"
            },
            {
                "answer_argument": "m.0crs071",
                "answer_type": "Entity",
                "entity_name": "Road of No Return"
            },
            {
                "answer_argument": "m.0crsfhl",
                "answer_type": "Entity",
                "entity_name": "By Dawn's Early Light"
            },
            {
                "answer_argument": "m.0crshly",
                "answer_type": "Entity",
                "entity_name": "Oceans of Fire"
            },
            {
                "answer_argument": "m.0crsr0l",
                "answer_type": "Entity",
                "entity_name": "Bala Perdida"
            },
            {
                "answer_argument": "m.0crt6rf",
                "answer_type": "Entity",
                "entity_name": "On the Line"
            },
            {
                "answer_argument": "m.0crtfzr",
                "answer_type": "Entity",
                "entity_name": "Six Against the Rock"
            },
            {
                "answer_argument": "m.0crtspw",
                "answer_type": "Entity",
                "entity_name": "Detention"
            },
            {
                "answer_argument": "m.0crtsrd",
                "answer_type": "Entity",
                "entity_name": "Break"
            },
            {
                "answer_argument": "m.0crttx5",
                "answer_type": "Entity",
                "entity_name": "Autumn"
            },
            {
                "answer_argument": "m.0crvkxc",
                "answer_type": "Entity",
                "entity_name": "The Donor"
            },
            {
                "answer_argument": "m.0crvmw1",
                "answer_type": "Entity",
                "entity_name": "David Carradine's Shaolin Cardio Kick Boxing Workout"
            },
            {
                "answer_argument": "m.0crxk1m",
                "answer_type": "Entity",
                "entity_name": "UnConventional"
            },
            {
                "answer_argument": "m.0cs1_b1",
                "answer_type": "Entity",
                "entity_name": "All Hell Broke Loose"
            },
            {
                "answer_argument": "m.0cs10pd",
                "answer_type": "Entity",
                "entity_name": "David Carradine Kung Fu Action Masters"
            },
            {
                "answer_argument": "m.0cs3kyt",
                "answer_type": "Entity",
                "entity_name": "Last Goodbye"
            },
            {
                "answer_argument": "m.0cs76m5",
                "answer_type": "Entity",
                "entity_name": "David Carradine's AM & PM Tai Chi Workout for Beginners"
            },
            {
                "answer_argument": "m.0d042l",
                "answer_type": "Entity",
                "entity_name": "Max Havoc: Curse of the Dragon"
            },
            {
                "answer_argument": "m.0dgkv64",
                "answer_type": "Entity",
                "entity_name": "Double Trouble"
            },
            {
                "answer_argument": "m.0dj9xmf",
                "answer_type": "Entity",
                "entity_name": "Jealousy"
            },
            {
                "answer_argument": "m.0dqvnd",
                "answer_type": "Entity",
                "entity_name": "Karate Cop"
            },
            {
                "answer_argument": "m.0dryg5m",
                "answer_type": "Entity",
                "entity_name": "Eldorado"
            },
            {
                "answer_argument": "m.0f2864",
                "answer_type": "Entity",
                "entity_name": "How to Rob a Bank"
            },
            {
                "answer_argument": "m.0fc6sp",
                "answer_type": "Entity",
                "entity_name": "The Warrior and the Sorceress"
            },
            {
                "answer_argument": "m.0fm7l2",
                "answer_type": "Entity",
                "entity_name": "Children of the Corn V: Fields of Terror"
            },
            {
                "answer_argument": "m.0fn43t",
                "answer_type": "Entity",
                "entity_name": "Young Billy Young"
            },
            {
                "answer_argument": "m.0fqnq4_",
                "answer_type": "Entity",
                "entity_name": "The New Swiss Family Robinson"
            },
            {
                "answer_argument": "m.0g55lz_",
                "answer_type": "Entity",
                "entity_name": "Kung Fu Killer"
            },
            {
                "answer_argument": "m.0g9_441",
                "answer_type": "Entity",
                "entity_name": "Stretch"
            },
            {
                "answer_argument": "m.0gf7ssv",
                "answer_type": "Entity",
                "entity_name": "Run for Your Life"
            },
            {
                "answer_argument": "m.0gjdd6d",
                "answer_type": "Entity",
                "entity_name": "Blackout"
            },
            {
                "answer_argument": "m.0gkr5xq",
                "answer_type": "Entity",
                "entity_name": "Animal Instincts"
            },
            {
                "answer_argument": "m.0gks2xc",
                "answer_type": "Entity",
                "entity_name": "Cloud Dancer"
            },
            {
                "answer_argument": "m.0gks2zc",
                "answer_type": "Entity",
                "entity_name": "Dune Warriors"
            },
            {
                "answer_argument": "m.0gksd67",
                "answer_type": "Entity",
                "entity_name": "Dangerous Curves"
            },
            {
                "answer_argument": "m.0gksqd4",
                "answer_type": "Entity",
                "entity_name": "Sonny Boy"
            },
            {
                "answer_argument": "m.0gm0_fg",
                "answer_type": "Entity",
                "entity_name": "Dark Fields"
            },
            {
                "answer_argument": "m.0gttw88",
                "answer_type": "Entity",
                "entity_name": "Dinocroc vs. Supergator"
            },
            {
                "answer_argument": "m.0gyv0b4",
                "answer_type": "Entity",
                "entity_name": "Kill Bill Volume 2"
            },
            {
                "answer_argument": "m.0h_0jbs",
                "answer_type": "Entity",
                "entity_name": "The Misfit Brigade"
            },
            {
                "answer_argument": "m.0h05yr",
                "answer_type": "Entity",
                "entity_name": "Roadside Prophets"
            },
            {
                "answer_argument": "m.0h0ncl5",
                "answer_type": "Entity",
                "entity_name": "Money to Burn"
            },
            {
                "answer_argument": "m.0h0nclq",
                "answer_type": "Entity",
                "entity_name": "Six Days in Paradise"
            },
            {
                "answer_argument": "m.0hr418b",
                "answer_type": "Entity",
                "entity_name": "The Bad Seed"
            },
            {
                "answer_argument": "m.0hy542p",
                "answer_type": "Entity",
                "entity_name": "Night Rhythms"
            },
            {
                "answer_argument": "m.0j62vp8",
                "answer_type": "Entity",
                "entity_name": "Fast Charlie... the Moonbeam Rider"
            },
            {
                "answer_argument": "m.0kbjch5",
                "answer_type": "Entity",
                "entity_name": "Wizards of the Lost Kingdom 2"
            },
            {
                "answer_argument": "m.0kv661",
                "answer_type": "Entity",
                "entity_name": "Waxwork II: Lost in Time"
            },
            {
                "answer_argument": "m.0kv6xq",
                "answer_type": "Entity",
                "entity_name": "Sundown: The Vampire in Retreat"
            },
            {
                "answer_argument": "m.0pt_5",
                "answer_type": "Entity",
                "entity_name": "Bound for Glory"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.02p5hf))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.02p5hf))"
    },
    {
        "qid": "WebQTest-1873",
        "question": "where is traditional chinese used",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01r2l",
                    "class": "common.topic",
                    "friendly_name": "chinese",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "language.human_language.main_country"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r2l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r2l ns:language.human_language.main_country ?x .\n}\n",
        "topic_entity": "m.01r2l",
        "answer": [
            {
                "answer_argument": "m.0d05w3",
                "answer_type": "Entity",
                "entity_name": "China"
            }
        ],
        "s_expression": "(JOIN (R language.human_language.main_country) m.01r2l)",
        "s_expression_processed": "(JOIN (R language.human_language.main_country) m.01r2l)"
    },
    {
        "qid": "WebQTest-1875",
        "question": "what type of political system is brazil",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.015fr",
                    "class": "common.topic",
                    "friendly_name": "brazil",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.form_of_government"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.015fr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.015fr ns:location.country.form_of_government ?x .\n}\n",
        "topic_entity": "m.015fr",
        "answer": [
            {
                "answer_argument": "m.01d9r3",
                "answer_type": "Entity",
                "entity_name": "Presidential system"
            },
            {
                "answer_argument": "m.0c9rw5",
                "answer_type": "Entity",
                "entity_name": "Constitutional republic"
            },
            {
                "answer_argument": "m.0j729",
                "answer_type": "Entity",
                "entity_name": "Federal republic"
            }
        ],
        "s_expression": "(JOIN (R location.country.form_of_government) m.015fr)",
        "s_expression_processed": "(JOIN (R location.country.form_of_government) m.015fr)"
    },
    {
        "qid": "WebQTest-1881",
        "question": "what timezone is sweden gmt",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0d0vqn",
                    "class": "common.topic",
                    "friendly_name": "sweden",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.time_zones"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d0vqn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d0vqn ns:location.location.time_zones ?x .\n}\n",
        "topic_entity": "m.0d0vqn",
        "answer": [
            {
                "answer_argument": "m.02llzg",
                "answer_type": "Entity",
                "entity_name": "Central European Time Zone"
            }
        ],
        "s_expression": "(JOIN (R location.location.time_zones) m.0d0vqn)",
        "s_expression_processed": "(JOIN (R location.location.time_zones) m.0d0vqn)"
    },
    {
        "qid": "WebQTest-1884",
        "question": "what degrees did barack obama get",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02mjmr",
                    "class": "common.topic",
                    "friendly_name": "barack obama",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.degree"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02mjmr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02mjmr ns:people.person.education ?y .\n?y ns:education.education.degree ?x .\n}\n",
        "topic_entity": "m.02mjmr",
        "answer": [
            {
                "answer_argument": "m.013zdg",
                "answer_type": "Entity",
                "entity_name": "Juris Doctor"
            },
            {
                "answer_argument": "m.014mlp",
                "answer_type": "Entity",
                "entity_name": "Bachelor of Arts"
            }
        ],
        "s_expression": "(JOIN (R education.education.degree) (JOIN (R people.person.education) m.02mjmr))",
        "s_expression_processed": "(JOIN (R education.education.degree) (JOIN (R people.person.education) m.02mjmr))"
    },
    {
        "qid": "WebQTest-1907",
        "question": "what kind of currency does dominican republic use",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.027rn",
                    "class": "common.topic",
                    "friendly_name": "dominican republic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.country.currency_used"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rn ns:location.country.currency_used ?x .\n}\n",
        "topic_entity": "m.027rn",
        "answer": [
            {
                "answer_argument": "m.04lt7_",
                "answer_type": "Entity",
                "entity_name": "Dominican peso"
            }
        ],
        "s_expression": "(JOIN (R location.country.currency_used) m.027rn)",
        "s_expression_processed": "(JOIN (R location.country.currency_used) m.027rn)"
    },
    {
        "qid": "WebQTest-1915",
        "question": "where did harry s truman go to school",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.09bg4l",
                    "class": "common.topic",
                    "friendly_name": "harry s truman",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.09bg4l)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.09bg4l ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n}\n",
        "topic_entity": "m.09bg4l",
        "answer": [
            {
                "answer_argument": "m.016vf7",
                "answer_type": "Entity",
                "entity_name": "University of Missouri–Kansas City"
            },
            {
                "answer_argument": "m.064r775",
                "answer_type": "Entity",
                "entity_name": "University of Missouri–Kansas City School of Law"
            },
            {
                "answer_argument": "m.0bvjpw",
                "answer_type": "Entity",
                "entity_name": "William Chrisman High School"
            }
        ],
        "s_expression": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.09bg4l))",
        "s_expression_processed": "(JOIN (R education.education.institution) (JOIN (R people.person.education) m.09bg4l))"
    },
    {
        "qid": "WebQTest-1919",
        "question": "who plays king julian madagascar",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.01sbv9",
                    "class": "common.topic",
                    "friendly_name": "madagascar",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.0cj5p22",
                    "class": "common.topic",
                    "friendly_name": "Julian",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film.starring"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.character"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01sbv9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01sbv9 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0cj5p22 .\n}\n",
        "topic_entity": "m.01sbv9",
        "answer": [
            {
                "answer_argument": "m.0c9c0",
                "answer_type": "Entity",
                "entity_name": "Sacha Baron Cohen"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.01sbv9) (JOIN film.performance.character m.0cj5p22)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.01sbv9) (JOIN film.performance.character m.0cj5p22)))"
    },
    {
        "qid": "WebQTest-1925",
        "question": "who did james franco play in milk",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.03hkch7",
                    "class": "common.topic",
                    "friendly_name": "milk",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.05bnp0",
                    "class": "common.topic",
                    "friendly_name": "James Franco",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film.starring"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.character"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.actor"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03hkch7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03hkch7 ns:film.film.starring ?y .\n?y ns:film.performance.character ?x .\n?y ns:film.performance.actor ns:m.05bnp0 .\n}\n",
        "topic_entity": "m.03hkch7",
        "answer": [
            {
                "answer_argument": "m.04zgntd",
                "answer_type": "Entity",
                "entity_name": "Scott Smith"
            }
        ],
        "s_expression": "(JOIN (R film.performance.character) (AND (JOIN (R film.film.starring) m.03hkch7) (JOIN film.performance.actor m.05bnp0)))",
        "s_expression_processed": "(JOIN (R film.performance.character) (AND (JOIN (R film.film.starring) m.03hkch7) (JOIN film.performance.actor m.05bnp0)))"
    },
    {
        "qid": "WebQTest-1932",
        "question": "who made the laws in canada",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0d060g",
                    "class": "common.topic",
                    "friendly_name": "canada",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "government.governmental_jurisdiction.governing_officials"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "government.government_position_held.governmental_body"
                },
                {
                    "start": 0,
                    "end": 2,
                    "relation": "government.governmental_body.jurisdiction"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d060g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d060g ns:government.governmental_jurisdiction.governing_officials ?y .\n?y ns:government.government_position_held.governmental_body ?x .\n?x ns:government.governmental_body.jurisdiction ns:m.0d060g .\n}\n",
        "topic_entity": "m.0d060g",
        "answer": [
            {
                "answer_argument": "m.0h6dy",
                "answer_type": "Entity",
                "entity_name": "House of Commons of Canada"
            },
            {
                "answer_argument": "m.0l_j_",
                "answer_type": "Entity",
                "entity_name": "Parliament of Canada"
            }
        ],
        "s_expression": "(AND (JOIN (R government.government_position_held.governmental_body) (JOIN (R government.governmental_jurisdiction.governing_officials) m.0d060g)) (JOIN government.governmental_body.jurisdiction m.0d060g))",
        "s_expression_processed": "(AND (JOIN (R government.government_position_held.governmental_body) (JOIN (R government.governmental_jurisdiction.governing_officials) m.0d060g)) (JOIN government.governmental_body.jurisdiction m.0d060g))"
    },
    {
        "qid": "WebQTest-1935",
        "question": "what college did maya moore go to",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "education.university",
                    "class": "education.university",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.027w0l1",
                    "class": "common.topic",
                    "friendly_name": "maya moore",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.education"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "education.education.institution"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027w0l1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027w0l1 ns:people.person.education ?y .\n?y ns:education.education.institution ?x .\n?x ns:common.topic.notable_types ns:m.01y2hnl .\n}\n",
        "topic_entity": "m.027w0l1",
        "answer": [
            {
                "answer_argument": "m.01jsn5",
                "answer_type": "Entity",
                "entity_name": "University of Connecticut"
            }
        ],
        "s_expression": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.027w0l1)))",
        "s_expression_processed": "(AND education.university (JOIN (R education.education.institution) (JOIN (R people.person.education) m.027w0l1)))"
    },
    {
        "qid": "WebQTest-1938",
        "question": "where did robin williams get married",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.0dzf_",
                    "class": "common.topic",
                    "friendly_name": "robin williams",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.spouse_s"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.marriage.location_of_ceremony"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dzf_)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dzf_ ns:people.person.spouse_s ?y .\n?y ns:people.marriage.location_of_ceremony ?x .\n}\n",
        "topic_entity": "m.0dzf_",
        "answer": [
            {
                "answer_argument": "m.0r26s",
                "answer_type": "Entity",
                "entity_name": "St. Helena"
            }
        ],
        "s_expression": "(JOIN (R people.marriage.location_of_ceremony) (JOIN (R people.person.spouse_s) m.0dzf_))",
        "s_expression_processed": "(JOIN (R people.marriage.location_of_ceremony) (JOIN (R people.person.spouse_s) m.0dzf_))"
    },
    {
        "qid": "WebQTest-1942",
        "question": "who was in the israeli palestinian conflict",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0cj5y",
                    "class": "common.topic",
                    "friendly_name": "israeli palestinian conflict",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "time.event.people_involved"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cj5y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cj5y ns:time.event.people_involved ?x .\n}\n",
        "topic_entity": "m.0cj5y",
        "answer": [
            {
                "answer_argument": "m.012bk",
                "answer_type": "Entity",
                "entity_name": "Ariel Sharon"
            },
            {
                "answer_argument": "m.019x_p",
                "answer_type": "Entity",
                "entity_name": "Chaim Weizmann"
            },
            {
                "answer_argument": "m.01cw71",
                "answer_type": "Entity",
                "entity_name": "Ahmad Shukeiri"
            },
            {
                "answer_argument": "m.01czvz",
                "answer_type": "Entity",
                "entity_name": "Haj Amin al-Husseini"
            },
            {
                "answer_argument": "m.01html",
                "answer_type": "Entity",
                "entity_name": "Mahmoud Abbas"
            },
            {
                "answer_argument": "m.01tp58",
                "answer_type": "Entity",
                "entity_name": "Ahmed Qurei"
            },
            {
                "answer_argument": "m.0203v",
                "answer_type": "Entity",
                "entity_name": "Colin Powell"
            },
            {
                "answer_argument": "m.036df9",
                "answer_type": "Entity",
                "entity_name": "Hanan Ashrawi"
            },
            {
                "answer_argument": "m.039b_q",
                "answer_type": "Entity",
                "entity_name": "Dalal Mughrabi"
            },
            {
                "answer_argument": "m.056xs",
                "answer_type": "Entity",
                "entity_name": "Menachem Begin"
            },
            {
                "answer_argument": "m.08849",
                "answer_type": "Entity",
                "entity_name": "Yasser Arafat"
            },
            {
                "answer_argument": "m.0b_zw",
                "answer_type": "Entity",
                "entity_name": "Yitzhak Rabin"
            },
            {
                "answer_argument": "m.0c_8s",
                "answer_type": "Entity",
                "entity_name": "Shimon Peres"
            },
            {
                "answer_argument": "m.0cj84",
                "answer_type": "Entity",
                "entity_name": "Anthony Zinni"
            },
            {
                "answer_argument": "m.0d58h",
                "answer_type": "Entity",
                "entity_name": "Anwar Sadat"
            },
            {
                "answer_argument": "m.0hspy",
                "answer_type": "Entity",
                "entity_name": "David Ben-Gurion"
            },
            {
                "answer_argument": "m.0jfzc",
                "answer_type": "Entity",
                "entity_name": "Marwan Barghouti"
            },
            {
                "answer_argument": "m.0kvhz",
                "answer_type": "Entity",
                "entity_name": "Hussein of Jordan"
            },
            {
                "answer_argument": "m.0kwtd",
                "answer_type": "Entity",
                "entity_name": "Nabil Shaath"
            },
            {
                "answer_argument": "m.0kww1",
                "answer_type": "Entity",
                "entity_name": "Ahmed Yassin"
            },
            {
                "answer_argument": "m.0lf35",
                "answer_type": "Entity",
                "entity_name": "Abdullah of Saudi Arabia"
            }
        ],
        "s_expression": "(JOIN (R time.event.people_involved) m.0cj5y)",
        "s_expression_processed": "(JOIN (R time.event.people_involved) m.0cj5y)"
    },
    {
        "qid": "WebQTest-1943",
        "question": "who founded the afl",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0ysy",
                    "class": "common.topic",
                    "friendly_name": "afl",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "organization.organization.founders"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ysy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ysy ns:organization.organization.founders ?x .\n}\n",
        "topic_entity": "m.0ysy",
        "answer": [
            {
                "answer_argument": "m.01wtr5",
                "answer_type": "Entity",
                "entity_name": "Lamar Hunt"
            },
            {
                "answer_argument": "m.035yc3",
                "answer_type": "Entity",
                "entity_name": "Bud Adams"
            }
        ],
        "s_expression": "(JOIN (R organization.organization.founders) m.0ysy)",
        "s_expression_processed": "(JOIN (R organization.organization.founders) m.0ysy)"
    },
    {
        "qid": "WebQTest-1964",
        "question": "who played stanley kowalski in a streetcar named desire movie",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.097zcz",
                    "class": "common.topic",
                    "friendly_name": "a streetcar named desire movie",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.03bhwh",
                    "class": "common.topic",
                    "friendly_name": "Stanley Kowalski",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.film.starring"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.actor"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "film.performance.character"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.097zcz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.097zcz ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.03bhwh .\n}\n",
        "topic_entity": "m.097zcz",
        "answer": [
            {
                "answer_argument": "m.04__f",
                "answer_type": "Entity",
                "entity_name": "Marlon Brando"
            }
        ],
        "s_expression": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.097zcz) (JOIN film.performance.character m.03bhwh)))",
        "s_expression_processed": "(JOIN (R film.performance.actor) (AND (JOIN (R film.film.starring) m.097zcz) (JOIN film.performance.character m.03bhwh)))"
    },
    {
        "qid": "WebQTest-1971",
        "question": "what movies gerard butler has been in",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.038rzr",
                    "class": "common.topic",
                    "friendly_name": "gerard butler",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "film.actor.film"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "film.performance.film"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.038rzr)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.038rzr ns:film.actor.film ?y .\n?y ns:film.performance.film ?x .\n}\n",
        "topic_entity": "m.038rzr",
        "answer": [
            {
                "answer_argument": "m.010vzxsl",
                "answer_type": "Entity",
                "entity_name": "London Has Fallen"
            },
            {
                "answer_argument": "m.01242_",
                "answer_type": "Entity",
                "entity_name": "Mrs Brown"
            },
            {
                "answer_argument": "m.0124x_l1",
                "answer_type": "Entity",
                "entity_name": "Geostorm"
            },
            {
                "answer_argument": "m.015yl2",
                "answer_type": "Entity",
                "entity_name": "Reign of Fire"
            },
            {
                "answer_argument": "m.01sxdy",
                "answer_type": "Entity",
                "entity_name": "The Phantom of the Opera"
            },
            {
                "answer_argument": "m.01v1ln",
                "answer_type": "Entity",
                "entity_name": "Tomorrow Never Dies"
            },
            {
                "answer_argument": "m.0292qb",
                "answer_type": "Entity",
                "entity_name": "Lara Croft Tomb Raider: The Cradle of Life"
            },
            {
                "answer_argument": "m.02p1fl7",
                "answer_type": "Entity",
                "entity_name": "Shooters"
            },
            {
                "answer_argument": "m.02pjkz7",
                "answer_type": "Entity",
                "entity_name": "Gamer"
            },
            {
                "answer_argument": "m.02qk3fk",
                "answer_type": "Entity",
                "entity_name": "P.S. I Love You"
            },
            {
                "answer_argument": "m.02r3rry",
                "answer_type": "Entity",
                "entity_name": "Wrath of Gods"
            },
            {
                "answer_argument": "m.02vvwqg",
                "answer_type": "Entity",
                "entity_name": "RocknRolla"
            },
            {
                "answer_argument": "m.03c6w7q",
                "answer_type": "Entity",
                "entity_name": "Harrison's Flowers"
            },
            {
                "answer_argument": "m.03g_sj5",
                "answer_type": "Entity",
                "entity_name": "Nim's Island"
            },
            {
                "answer_argument": "m.047qxs",
                "answer_type": "Entity",
                "entity_name": "Timeline"
            },
            {
                "answer_argument": "m.047rkcm",
                "answer_type": "Entity",
                "entity_name": "The Ugly Truth"
            },
            {
                "answer_argument": "m.04f10b5",
                "answer_type": "Entity",
                "entity_name": "One More Kiss"
            },
            {
                "answer_argument": "m.04f52jw",
                "answer_type": "Entity",
                "entity_name": "How to Train Your Dragon"
            },
            {
                "answer_argument": "m.04j04w7",
                "answer_type": "Entity",
                "entity_name": "Fast Food"
            },
            {
                "answer_argument": "m.04jdgq",
                "answer_type": "Entity",
                "entity_name": "Dracula 2000"
            },
            {
                "answer_argument": "m.04yb52q",
                "answer_type": "Entity",
                "entity_name": "Jewel of the Sahara"
            },
            {
                "answer_argument": "m.05dj6d",
                "answer_type": "Entity",
                "entity_name": "Dear Frankie"
            },
            {
                "answer_argument": "m.05h4_qt",
                "answer_type": "Entity",
                "entity_name": "Law Abiding Citizen"
            },
            {
                "answer_argument": "m.05lm43",
                "answer_type": "Entity",
                "entity_name": "The Game of Their Lives"
            },
            {
                "answer_argument": "m.05p2gz3",
                "answer_type": "Entity",
                "entity_name": "Tales of the Black Freighter"
            },
            {
                "answer_argument": "m.06w9zfg",
                "answer_type": "Entity",
                "entity_name": "The Bounty Hunter"
            },
            {
                "answer_argument": "m.07f_t4",
                "answer_type": "Entity",
                "entity_name": "300"
            },
            {
                "answer_argument": "m.09210y",
                "answer_type": "Entity",
                "entity_name": "Beowulf & Grendel"
            },
            {
                "answer_argument": "m.0bh8x1y",
                "answer_type": "Entity",
                "entity_name": "Coriolanus"
            },
            {
                "answer_argument": "m.0bwhkkw",
                "answer_type": "Entity",
                "entity_name": "Machine Gun Preacher"
            },
            {
                "answer_argument": "m.0c1p6zg",
                "answer_type": "Entity",
                "entity_name": "Trailer for a Remake of Gore Vidal's Caligula"
            },
            {
                "answer_argument": "m.0c1z3g",
                "answer_type": "Entity",
                "entity_name": "Butterfly on a Wheel"
            },
            {
                "answer_argument": "m.0crvp0c",
                "answer_type": "Entity",
                "entity_name": "How to Train Your Dragon: Legend of the Boneknapper Dragon"
            },
            {
                "answer_argument": "m.0crz6lg",
                "answer_type": "Entity",
                "entity_name": "The Cherry Orchard"
            },
            {
                "answer_argument": "m.0dlk_qn",
                "answer_type": "Entity",
                "entity_name": "Movie 43"
            },
            {
                "answer_argument": "m.0f0w6n",
                "answer_type": "Entity",
                "entity_name": "Attila"
            },
            {
                "answer_argument": "m.0gmglbv",
                "answer_type": "Entity",
                "entity_name": "Playing for Keeps"
            },
            {
                "answer_argument": "m.0gwp_k3",
                "answer_type": "Entity",
                "entity_name": "How to Train Your Dragon 2"
            },
            {
                "answer_argument": "m.0hhggp1",
                "answer_type": "Entity",
                "entity_name": "Chasing Mavericks"
            },
            {
                "answer_argument": "m.0hnd78z",
                "answer_type": "Entity",
                "entity_name": "How to Train Your Dragon: Gift of the Night Fury"
            },
            {
                "answer_argument": "m.0hz7mx7",
                "answer_type": "Entity",
                "entity_name": "Thunder Run"
            },
            {
                "answer_argument": "m.0m_cnk_",
                "answer_type": "Entity",
                "entity_name": "How to Train Your Dragon 3"
            },
            {
                "answer_argument": "m.0n43ym4",
                "answer_type": "Entity",
                "entity_name": "Olympus Has Fallen"
            },
            {
                "answer_argument": "m.0v3yjg1",
                "answer_type": "Entity",
                "entity_name": "Justin and the Knights of Valour"
            },
            {
                "answer_argument": "m.0w0l3pk",
                "answer_type": "Entity",
                "entity_name": "Gods of Egypt"
            },
            {
                "answer_argument": "m.0w17vsj",
                "answer_type": "Entity",
                "entity_name": "Dynamo"
            }
        ],
        "s_expression": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.038rzr))",
        "s_expression_processed": "(JOIN (R film.performance.film) (JOIN (R film.actor.film) m.038rzr))"
    },
    {
        "qid": "WebQTest-1972",
        "question": "where did john franklin live",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.06hw0m",
                    "class": "common.topic",
                    "friendly_name": "john franklin",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "people.person.places_lived"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "people.place_lived.location"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06hw0m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06hw0m ns:people.person.places_lived ?y .\n?y ns:people.place_lived.location ?x .\n}\n",
        "topic_entity": "m.06hw0m",
        "answer": [
            {
                "answer_argument": "m.0s4jk",
                "answer_type": "Entity",
                "entity_name": "Blue Island"
            }
        ],
        "s_expression": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.06hw0m))",
        "s_expression_processed": "(JOIN (R people.place_lived.location) (JOIN (R people.person.places_lived) m.06hw0m))"
    },
    {
        "qid": "WebQTest-1997",
        "question": "who does owen schmitt play for",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.027rvyc",
                    "class": "common.topic",
                    "friendly_name": "owen schmitt",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "american_football.football_player.games"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "american_football.player_game_statistics.team"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027rvyc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027rvyc ns:american_football.football_player.games ?y .\n?y ns:american_football.player_game_statistics.team ?x .\n}\n",
        "topic_entity": "m.027rvyc",
        "answer": [
            {
                "answer_argument": "m.070xg",
                "answer_type": "Entity",
                "entity_name": "Seattle Seahawks"
            }
        ],
        "s_expression": "(JOIN (R american_football.player_game_statistics.team) (JOIN (R american_football.football_player.games) m.027rvyc))",
        "s_expression_processed": "(JOIN (R american_football.player_game_statistics.team) (JOIN (R american_football.football_player.games) m.027rvyc))"
    },
    {
        "qid": "WebQTest-2001",
        "question": "who won the 2000 fa cup final",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.02_p0",
                    "class": "common.topic",
                    "friendly_name": "fa cup",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 3,
                    "node_type": "entity",
                    "id": "m.03wcq72",
                    "class": "common.topic",
                    "friendly_name": "2000 fa cup",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "sports.sports_award_type.winners"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "sports.sports_award.award_winner"
                },
                {
                    "start": 1,
                    "end": 3,
                    "relation": "sports.sports_award.season"
                }
            ]
        },
        "function": "none",
        "num_node": 4,
        "num_edge": 3,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02_p0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02_p0 ns:sports.sports_award_type.winners ?y .\n?y ns:sports.sports_award.award_winner ?x .\n?y ns:sports.sports_award.season ns:m.03wcq72 .\n}\n",
        "topic_entity": "m.02_p0",
        "answer": [
            {
                "answer_argument": "m.023fb",
                "answer_type": "Entity",
                "entity_name": "Chelsea F.C."
            }
        ],
        "s_expression": "(JOIN (R sports.sports_award.award_winner) (AND (JOIN (R sports.sports_award_type.winners) m.02_p0) (JOIN sports.sports_award.season m.03wcq72)))",
        "s_expression_processed": "(JOIN (R sports.sports_award.award_winner) (AND (JOIN (R sports.sports_award_type.winners) m.02_p0) (JOIN sports.sports_award.season m.03wcq72)))"
    },
    {
        "qid": "WebQTest-2004",
        "question": "what the time zone in japan",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.03_3d",
                    "class": "common.topic",
                    "friendly_name": "japan",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.time_zones"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03_3d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03_3d ns:location.location.time_zones ?x .\n}\n",
        "topic_entity": "m.03_3d",
        "answer": [
            {
                "answer_argument": "m.019rdm",
                "answer_type": "Entity",
                "entity_name": "Japan Time Zone"
            }
        ],
        "s_expression": "(JOIN (R location.location.time_zones) m.03_3d)",
        "s_expression_processed": "(JOIN (R location.location.time_zones) m.03_3d)"
    },
    {
        "qid": "WebQTest-2008",
        "question": "which countries speak arabic language",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0jzc",
                    "class": "common.topic",
                    "friendly_name": "arabic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "language.human_language.countries_spoken_in"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jzc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jzc ns:language.human_language.countries_spoken_in ?x .\n}\n",
        "topic_entity": "m.0jzc",
        "answer": [
            {
                "answer_argument": "m.0161c",
                "answer_type": "Entity",
                "entity_name": "Bahrain"
            },
            {
                "answer_argument": "m.01z215",
                "answer_type": "Entity",
                "entity_name": "Saudi Arabia"
            },
            {
                "answer_argument": "m.01z88t",
                "answer_type": "Entity",
                "entity_name": "Yemen"
            },
            {
                "answer_argument": "m.01znc_",
                "answer_type": "Entity",
                "entity_name": "Turkey"
            },
            {
                "answer_argument": "m.027jk",
                "answer_type": "Entity",
                "entity_name": "Djibouti"
            },
            {
                "answer_argument": "m.02k54",
                "answer_type": "Entity",
                "entity_name": "Egypt"
            },
            {
                "answer_argument": "m.02z62v1",
                "answer_type": "Entity",
                "entity_name": "Seljuk Empire"
            },
            {
                "answer_argument": "m.03__y",
                "answer_type": "Entity",
                "entity_name": "Jordan"
            },
            {
                "answer_argument": "m.035hr8",
                "answer_type": "Entity",
                "entity_name": "South Yemen"
            },
            {
                "answer_argument": "m.03shp",
                "answer_type": "Entity",
                "entity_name": "Iran"
            },
            {
                "answer_argument": "m.03spz",
                "answer_type": "Entity",
                "entity_name": "Israel"
            },
            {
                "answer_argument": "m.047yc",
                "answer_type": "Entity",
                "entity_name": "Kuwait"
            },
            {
                "answer_argument": "m.04gqr",
                "answer_type": "Entity",
                "entity_name": "Libya"
            },
            {
                "answer_argument": "m.04hqz",
                "answer_type": "Entity",
                "entity_name": "Lebanon"
            },
            {
                "answer_argument": "m.04vjh",
                "answer_type": "Entity",
                "entity_name": "Mauritania"
            },
            {
                "answer_argument": "m.04wgh",
                "answer_type": "Entity",
                "entity_name": "Morocco"
            },
            {
                "answer_argument": "m.05l8y",
                "answer_type": "Entity",
                "entity_name": "Oman"
            },
            {
                "answer_argument": "m.0697s",
                "answer_type": "Entity",
                "entity_name": "Qatar"
            },
            {
                "answer_argument": "m.06tw8",
                "answer_type": "Entity",
                "entity_name": "Sudan"
            },
            {
                "answer_argument": "m.06vbd",
                "answer_type": "Entity",
                "entity_name": "Syria"
            },
            {
                "answer_argument": "m.07dzf",
                "answer_type": "Entity",
                "entity_name": "Tanzania"
            },
            {
                "answer_argument": "m.07fj_",
                "answer_type": "Entity",
                "entity_name": "Tunisia"
            },
            {
                "answer_argument": "m.0d05q4",
                "answer_type": "Entity",
                "entity_name": "Iraq"
            },
            {
                "answer_argument": "m.0d060g",
                "answer_type": "Entity",
                "entity_name": "Canada"
            },
            {
                "answer_argument": "m.0h3y",
                "answer_type": "Entity",
                "entity_name": "Algeria"
            },
            {
                "answer_argument": "m.0h44w",
                "answer_type": "Entity",
                "entity_name": "Mandatory Palestine"
            },
            {
                "answer_argument": "m.0hzlz",
                "answer_type": "Entity",
                "entity_name": "South Africa"
            },
            {
                "answer_argument": "m.0j1z8",
                "answer_type": "Entity",
                "entity_name": "United Arab Emirates"
            }
        ],
        "s_expression": "(JOIN (R language.human_language.countries_spoken_in) m.0jzc)",
        "s_expression_processed": "(JOIN (R language.human_language.countries_spoken_in) m.0jzc)"
    },
    {
        "qid": "WebQTest-2020",
        "question": "what are the mountains in northern italy called",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.01cg88",
                    "class": "common.topic",
                    "friendly_name": "mountains in northern italy",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "type.object.name"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01cg88)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01cg88 ns:type.object.name ?x .\n}\n",
        "topic_entity": "m.01cg88",
        "answer": [
            {
                "answer_argument": "Apennine Mountains",
                "answer_type": "Value",
                "entity_name": null
            }
        ],
        "s_expression": "(JOIN (R type.object.name) m.01cg88)",
        "s_expression_processed": "(JOIN (R type.object.name) m.01cg88)"
    },
    {
        "qid": "WebQTest-2023",
        "question": "where are the nato headquarters located",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 2,
                    "node_type": "entity",
                    "id": "m.059dn",
                    "class": "common.topic",
                    "friendly_name": "nato",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                },
                {
                    "nid": 1,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "Common topic",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none"
                }
            ],
            "edges": [
                {
                    "start": 2,
                    "end": 1,
                    "relation": "organization.organization.headquarters"
                },
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.mailing_address.citytown"
                }
            ]
        },
        "function": "none",
        "num_node": 3,
        "num_edge": 2,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059dn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059dn ns:organization.organization.headquarters ?y .\n?y ns:location.mailing_address.citytown ?x .\n}\n",
        "topic_entity": "m.059dn",
        "answer": [
            {
                "answer_argument": "m.0177z",
                "answer_type": "Entity",
                "entity_name": "Brussels"
            }
        ],
        "s_expression": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.059dn))",
        "s_expression_processed": "(JOIN (R location.mailing_address.citytown) (JOIN (R organization.organization.headquarters) m.059dn))"
    },
    {
        "qid": "WebQTest-2030",
        "question": "where is roswell area 51",
        "graph_query": {
            "nodes": [
                {
                    "nid": 0,
                    "node_type": "class",
                    "id": "common.topic",
                    "class": "common.topic",
                    "friendly_name": "common.topic",
                    "question_node": 1,
                    "function": "none",
                    "time_constraint": "none"
                },
                {
                    "nid": 1,
                    "node_type": "entity",
                    "id": "m.0yjq",
                    "class": "common.topic",
                    "friendly_name": "area 51",
                    "question_node": 0,
                    "function": "none",
                    "time_constraint": "none",
                    "implicit": 0
                }
            ],
            "edges": [
                {
                    "start": 1,
                    "end": 0,
                    "relation": "location.location.containedby"
                }
            ]
        },
        "function": "none",
        "num_node": 2,
        "num_edge": 1,
        "sparql_query": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0yjq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0yjq ns:location.location.containedby ?x .\n}\n",
        "topic_entity": "m.0yjq",
        "answer": [
            {
                "answer_argument": "m.059_c",
                "answer_type": "Entity",
                "entity_name": "Nevada"
            },
            {
                "answer_argument": "m.0n6ps",
                "answer_type": "Entity",
                "entity_name": "Lincoln County"
            }
        ],
        "s_expression": "(JOIN (R location.location.containedby) m.0yjq)",
        "s_expression_processed": "(JOIN (R location.location.containedby) m.0yjq)"
    }
]